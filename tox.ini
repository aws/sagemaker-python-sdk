# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist = black-format,flake8,pylint,twine,sphinx,py27,py36

skip_missing_interpreters = False

[flake8]
max-line-length = 120
exclude =
    build/
    .git
    __pycache__
    examples/
    *pb2.py
    .tox
    tests/data/
    venv/
    *service_pb2_grpc.py

max-complexity = 10

ignore =
    C901,
    E203,  # whitespace before ':': Black disagrees with and explicitly violates this.
    FI10,
    FI12,
    FI13,
    FI14,
    FI15,
    FI16,
    FI17,
    FI18,  # __future__ import "annotations" missing -> check only Python 3.7 compatible
    FI50,
    FI51,
    FI52,
    FI53,
    FI54,
    FI55,
    FI56,
    FI57,
    W503

require-code = True

[testenv]
passenv =
    AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY
    AWS_SESSION_TOKEN
    AWS_CONTAINER_CREDENTIALS_RELATIVE_URI
    AWS_DEFAULT_REGION

# {posargs} can be passed in by additional arguments specified when invoking tox.
# Can be used to specify which tests to run, e.g.: tox -- -s
commands =
    coverage run --source sagemaker -m pytest {posargs}
    {env:IGNORE_COVERAGE:} coverage report --fail-under=85 --omit */tensorflow/tensorflow_serving/*
extras = test

[testenv:flake8]
basepython = python3
skipdist = true
skip_install = true
deps =
    flake8
    flake8-future-import
commands = flake8

[testenv:pylint]
basepython = python3
skipdist = true
skip_install = true
deps =
    pylint==2.3.1
commands =
    python -m pylint --rcfile=.pylintrc -j 0 src/sagemaker

[testenv:twine]
basepython = python3
# twine check was added starting in 1.12.0
# https://github.com/pypa/twine/blob/master/docs/changelog.rst
deps =
    twine>=1.12.0
# https://packaging.python.org/guides/making-a-pypi-friendly-readme/#validating-restructuredtext-markup
commands =
    python setup.py sdist
    twine check dist/*.tar.gz

[testenv:sphinx]
basepython = python3
changedir = doc
# Based on: https://github.com/rtfd/readthedocs.org/blob/8f0c78dde5edcc85acf90462a8518735a25482d3/readthedocs/doc_builder/python_environments.py#L263
install_command = python -m pip install --upgrade -I {packages}
# Based on: https://github.com/rtfd/readthedocs.org/blob/8f0c78dde5edcc85acf90462a8518735a25482d3/readthedocs/doc_builder/python_environments.py#L280
deps =
    Pygments==2.2.0
    setuptools<40
    docutils==0.13.1
    mock==1.0.1
    alabaster>=0.7,<0.8,!=0.7.5
    commonmark==0.5.4
    recommonmark==0.4.0
    sphinx<1.8
    sphinx-rtd-theme<0.5
    readthedocs-sphinx-ext<0.6
# pip install requirements.txt is separate as RTD does it in separate steps
# having the requirements.txt installed in deps above results in Double Requirement exception
# https://github.com/pypa/pip/issues/988
commands =
    pip install --exists-action=w -r requirements.txt
    sphinx-build -T -W -b html -d _build/doctrees-readthedocs -D language=en . _build/html

[testenv:black-format]
# Used during development (before committing) to format .py files.
basepython = python3
deps = black==19.3b0
commands =
    black -l 100 ./

[testenv:black-check]
# Used by automated build steps to check that all files are properly formatted.
basepython = python3
deps = black==19.3b0
commands =
    black -l 100 --check ./
