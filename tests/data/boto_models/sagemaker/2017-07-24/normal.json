{
  "version":"2.0",
  "metadata":{
    "apiVersion":"2017-07-24",
    "endpointPrefix":"api.sagemaker",
    "jsonVersion":"1.1",
    "protocol":"json",
    "serviceAbbreviation":"SageMaker",
    "serviceFullName":"Amazon SageMaker Service",
    "serviceId":"SageMaker",
    "signatureVersion":"v4",
    "signingName":"sagemaker",
    "targetPrefix":"SageMaker",
    "uid":"sagemaker-2017-07-24"
  },
  "operations":{
    "AddTags":{
      "name":"AddTags",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"AddTagsInput"},
      "output":{"shape":"AddTagsOutput"},
      "documentation":"<p>Adds or overwrites one or more tags for the specified Amazon SageMaker resource. You can add tags to notebook instances, training jobs, models, endpoint configurations, and endpoints. </p> <p>Each tag consists of a key and an optional value. Tag keys must be unique per resource. For more information about tags, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what\">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>. </p>"
    },
    "AssociateTrialComponent":{
      "name":"AssociateTrialComponent",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"AssociateTrialComponentRequest"},
      "output":{"shape":"AssociateTrialComponentResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "BatchGetMetrics":{
      "name":"BatchGetMetrics",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"BatchGetMetricsRequest"},
      "output":{"shape":"BatchGetMetricsResponse"},
      "internalonly":true
    },
    "BatchPutMetrics":{
      "name":"BatchPutMetrics",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"BatchPutMetricsRequest"},
      "output":{"shape":"BatchPutMetricsResponse"},
      "internalonly":true
    },
    "CreateAlgorithm":{
      "name":"CreateAlgorithm",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateAlgorithmInput"},
      "output":{"shape":"CreateAlgorithmOutput"}
    },
    "CreateAnalyticsJob":{
      "name":"CreateAnalyticsJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateAnalyticsJobRequest"},
      "output":{"shape":"CreateAnalyticsJobResponse"},
      "errors":[
        {"shape":"ResourceInUse"},
        {"shape":"ResourceLimitExceeded"}
      ],
      "internalonly":true
    },
    "CreateAnalyticsJobInternal":{
      "name":"CreateAnalyticsJobInternal",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateAnalyticsJobInternalRequest"},
      "output":{"shape":"CreateAnalyticsJobInternalResponse"},
      "errors":[
        {"shape":"ResourceInUse"}
      ],
      "internalonly":true
    },
    "CreateApp":{
      "name":"CreateApp",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateAppRequest"},
      "output":{"shape":"CreateAppResponse"},
      "errors":[
        {"shape":"ResourceLimitExceeded"}
      ],
      "internalonly":true
    },
    "CreateAutoMLJob":{
      "name":"CreateAutoMLJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateAutoMLJobRequest"},
      "output":{"shape":"CreateAutoMLJobResponse"},
      "errors":[
        {"shape":"ResourceInUse"},
        {"shape":"ResourceLimitExceeded"}
      ],
      "internalonly":true
    },
    "CreateCodeRepository":{
      "name":"CreateCodeRepository",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateCodeRepositoryInput"},
      "output":{"shape":"CreateCodeRepositoryOutput"}
    },
    "CreateCompilationJob":{
      "name":"CreateCompilationJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateCompilationJobRequest"},
      "output":{"shape":"CreateCompilationJobResponse"},
      "errors":[
        {"shape":"ResourceInUse"},
        {"shape":"ResourceLimitExceeded"}
      ]
    },
    "CreateCrossAccountTrainingJob":{
      "name":"CreateCrossAccountTrainingJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateCrossAccountTrainingJobRequest"},
      "output":{"shape":"CreateCrossAccountTrainingJobResponse"},
      "errors":[
        {"shape":"ResourceInUse"},
        {"shape":"ResourceLimitExceeded"}
      ],
      "internalonly":true
    },
    "CreateDomain":{
      "name":"CreateDomain",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateDomainRequest"},
      "output":{"shape":"CreateDomainResponse"},
      "errors":[
        {"shape":"ResourceLimitExceeded"}
      ],
      "internalonly":true
    },
    "CreateEndpoint":{
      "name":"CreateEndpoint",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateEndpointInput"},
      "output":{"shape":"CreateEndpointOutput"},
      "errors":[
        {"shape":"ResourceLimitExceeded"}
      ],
      "documentation":"<p>Creates an endpoint using the endpoint configuration specified in the request. Amazon SageMaker uses the endpoint to provision resources and deploy models. You create the endpoint configuration with the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpointConfig.html\">CreateEndpointConfig</a> API. </p> <note> <p> Use this API only for hosting models using Amazon SageMaker hosting services. </p> </note> <p>The endpoint name must be unique within an AWS Region in your AWS account. </p> <p>When it receives the request, Amazon SageMaker creates the endpoint, launches the resources (ML compute instances), and deploys the model(s) on them. </p> <p>When Amazon SageMaker receives the request, it sets the endpoint status to <code>Creating</code>. After it creates the endpoint, it sets the status to <code>InService</code>. Amazon SageMaker can then process incoming requests for inferences. To check the status of an endpoint, use the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/API_DescribeEndpoint.html\">DescribeEndpoint</a> API.</p> <p>For an example, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/ex1.html\">Exercise 1: Using the K-Means Algorithm Provided by Amazon SageMaker</a>. </p>"
    },
    "CreateEndpointConfig":{
      "name":"CreateEndpointConfig",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateEndpointConfigInput"},
      "output":{"shape":"CreateEndpointConfigOutput"},
      "errors":[
        {"shape":"ResourceLimitExceeded"}
      ],
      "documentation":"<p>Creates an endpoint configuration that Amazon SageMaker hosting services uses to deploy models. In the configuration, you identify one or more models, created using the <code>CreateModel</code> API, to deploy and the resources that you want Amazon SageMaker to provision. Then you call the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpoint.html\">CreateEndpoint</a> API. </p> <note> <p> Use this API only if you want to use Amazon SageMaker hosting services to deploy models into production. </p> </note> <p>In the request, you define one or more <code>ProductionVariant</code>s, each of which identifies a model. Each <code>ProductionVariant</code> parameter also describes the resources that you want Amazon SageMaker to provision. This includes the number and type of ML compute instances to deploy. </p> <p>If you are hosting multiple models, you also assign a <code>VariantWeight</code> to specify how much traffic you want to allocate to each model. For example, suppose that you want to host two models, A and B, and you assign traffic weight 2 for model A and 1 for model B. Amazon SageMaker distributes two-thirds of the traffic to Model A, and one-third to model B. </p>"
    },
    "CreateEnvironment":{
      "name":"CreateEnvironment",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateEnvironmentRequest"},
      "output":{"shape":"CreateEnvironmentResponse"},
      "errors":[
        {"shape":"ResourceInUse"},
        {"shape":"ResourceLimitExceeded"}
      ],
      "internalonly":true
    },
    "CreateEnvironmentVersion":{
      "name":"CreateEnvironmentVersion",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateEnvironmentVersionRequest"},
      "output":{"shape":"CreateEnvironmentVersionResponse"},
      "errors":[
        {"shape":"ResourceInUse"},
        {"shape":"ResourceLimitExceeded"},
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "CreateExperiment":{
      "name":"CreateExperiment",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateExperimentRequest"},
      "output":{"shape":"CreateExperimentResponse"},
      "internalonly":true
    },
    "CreateFlowDefinition":{
      "name":"CreateFlowDefinition",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateFlowDefinitionRequest"},
      "output":{"shape":"CreateFlowDefinitionResponse"},
      "errors":[
        {"shape":"ResourceLimitExceeded"},
        {"shape":"ResourceInUse"}
      ],
      "internalonly":true
    },
    "CreateHumanTaskUi":{
      "name":"CreateHumanTaskUi",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateHumanTaskUiRequest"},
      "output":{"shape":"CreateHumanTaskUiResponse"},
      "errors":[
        {"shape":"ResourceLimitExceeded"},
        {"shape":"ResourceInUse"}
      ],
      "internalonly":true
    },
    "CreateHyperParameterTuningJob":{
      "name":"CreateHyperParameterTuningJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateHyperParameterTuningJobRequest"},
      "output":{"shape":"CreateHyperParameterTuningJobResponse"},
      "errors":[
        {"shape":"ResourceInUse"},
        {"shape":"ResourceLimitExceeded"}
      ]
    },
    "CreateHyperParameterTuningJobInternal":{
      "name":"CreateHyperParameterTuningJobInternal",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateHyperParameterTuningJobInternalRequest"},
      "output":{"shape":"CreateHyperParameterTuningJobInternalResponse"},
      "errors":[
        {"shape":"ResourceInUse"},
        {"shape":"ResourceLimitExceeded"}
      ],
      "internalonly":true
    },
    "CreateLabelingJob":{
      "name":"CreateLabelingJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateLabelingJobRequest"},
      "output":{"shape":"CreateLabelingJobResponse"},
      "errors":[
        {"shape":"ResourceInUse"},
        {"shape":"ResourceLimitExceeded"}
      ]
    },
    "CreateModel":{
      "name":"CreateModel",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateModelInput"},
      "output":{"shape":"CreateModelOutput"},
      "errors":[
        {"shape":"ResourceLimitExceeded"}
      ],
      "documentation":"<p>Creates a model in Amazon SageMaker. In the request, you name the model and describe one or more containers. For each container, you specify the docker image containing inference code, artifacts (from prior training), and custom environment map that the inference code uses when you deploy the model into production. </p> <p>Use this API to create a model only if you want to use Amazon SageMaker hosting services. To host your model, you create an endpoint configuration with the <code>CreateEndpointConfig</code> API, and then create an endpoint with the <code>CreateEndpoint</code> API. </p> <p>Amazon SageMaker then deploys all of the containers that you defined for the model in the hosting environment. </p> <p>In the <code>CreateModel</code> request, you must define a container with the <code>PrimaryContainer</code> parameter. </p> <p>In the request, you also provide an IAM role that Amazon SageMaker can assume to access model artifacts and docker image for deployment on ML compute hosting instances. In addition, you also use the IAM role to manage permissions the inference code needs. For example, if the inference code access any other AWS resources, you grant necessary permissions via this role.</p>"
    },
    "CreateModelInternal":{
      "name":"CreateModelInternal",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateModelInternalInput"},
      "output":{"shape":"CreateModelInternalOutput"},
      "internalonly":true
    },
    "CreateModelPackage":{
      "name":"CreateModelPackage",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateModelPackageInput"},
      "output":{"shape":"CreateModelPackageOutput"}
    },
    "CreateMonitoringSchedule":{
      "name":"CreateMonitoringSchedule",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateMonitoringScheduleRequest"},
      "output":{"shape":"CreateMonitoringScheduleResponse"},
      "errors":[
        {"shape":"ResourceLimitExceeded"}
      ],
      "internalonly":true
    },
    "CreateNotebookInstance":{
      "name":"CreateNotebookInstance",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateNotebookInstanceInput"},
      "output":{"shape":"CreateNotebookInstanceOutput"},
      "errors":[
        {"shape":"ResourceLimitExceeded"}
      ],
      "documentation":"<p>Creates an Amazon SageMaker notebook instance. A notebook instance is an ML compute instance running on a Jupyter notebook. </p> <p>In a <code>CreateNotebookInstance</code> request, you specify the type of ML compute instance that you want to run. Amazon SageMaker launches the instance, installs common libraries that you can use to explore datasets for model training, and attaches an ML storage volume to the notebook instance. </p> <p>Amazon SageMaker also provides a set of example notebooks. Each notebook demonstrates how to use Amazon SageMaker with a specific an algorithm or with a machine learning framework. </p> <p>After receiving the request, Amazon SageMaker does the following:</p> <ol> <li> <p>Creates a network interface in the Amazon SageMaker VPC.</p> </li> <li> <p>(Option) If you specified <code>SubnetId</code>, creates a network interface in your own VPC, which is inferred from the subnet ID that you provide in the input. When creating this network interface, Amazon SageMaker attaches the security group that you specified in the request to the network interface that it creates in your VPC.</p> </li> <li> <p>Launches an EC2 instance of the type specified in the request in the Amazon SageMaker VPC. If you specified <code>SubnetId</code> of your VPC, Amazon SageMaker specifies both network interfaces when launching this instance. This enables inbound traffic from your own VPC to the notebook instance, assuming that the security groups allow it.</p> </li> </ol> <p>After creating the notebook instance, Amazon SageMaker returns its Amazon Resource Name (ARN).</p> <p>After Amazon SageMaker creates the notebook instance, you can connect to the Jupyter server and work in Jupyter notebooks. For example, you can write code to explore a dataset that you can use for model training, train a model, host models by creating Amazon SageMaker endpoints, and validate hosted models. </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/how-it-works.html\">How It Works</a>. </p>"
    },
    "CreateNotebookInstanceLifecycleConfig":{
      "name":"CreateNotebookInstanceLifecycleConfig",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateNotebookInstanceLifecycleConfigInput"},
      "output":{"shape":"CreateNotebookInstanceLifecycleConfigOutput"},
      "errors":[
        {"shape":"ResourceLimitExceeded"}
      ]
    },
    "CreatePresignedNotebookInstanceUrl":{
      "name":"CreatePresignedNotebookInstanceUrl",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreatePresignedNotebookInstanceUrlInput"},
      "output":{"shape":"CreatePresignedNotebookInstanceUrlOutput"},
      "documentation":"<p>Returns a URL that you can use to connect to the Juypter server from a notebook instance. In the Amazon SageMaker console, when you choose <code>Open</code> next to a notebook instance, Amazon SageMaker opens a new tab showing the Jupyter server home page from the notebook instance. The console uses this API to get the URL and show the page. </p>"
    },
    "CreateTrainingJob":{
      "name":"CreateTrainingJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateTrainingJobRequest"},
      "output":{"shape":"CreateTrainingJobResponse"},
      "errors":[
        {"shape":"ResourceInUse"},
        {"shape":"ResourceLimitExceeded"}
      ],
      "documentation":"<p> Starts a model training job. After training completes, Amazon SageMaker saves the resulting model artifacts to an Amazon S3 location that you specify. </p> <p>If you choose to host your model using Amazon SageMaker hosting services, you can use the resulting model artifacts as part of the model. You can also use the artifacts in a deep learning service other than Amazon SageMaker, provided that you know how to use them for inferences. </p> <p>In the request body, you provide the following: </p> <ul> <li> <p> <code>AlgorithmSpecification</code> - Identifies the training algorithm to use. </p> </li> <li> <p> <code>HyperParameters</code> - Specify these algorithm-specific parameters to influence the quality of the final model. For a list of hyperparameters for each training algorithm provided by Amazon SageMaker, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html\">Algorithms</a>. </p> </li> <li> <p> <code>InputDataConfig</code> - Describes the training dataset and the Amazon S3 location where it is stored.</p> </li> <li> <p> <code>OutputDataConfig</code> - Identifies the Amazon S3 location where you want Amazon SageMaker to save the results of model training. </p> <p/> </li> <li> <p> <code>ResourceConfig</code> - Identifies the resources, ML compute instances, and ML storage volumes to deploy for model training. In distributed training, you specify more than one instance. </p> </li> <li> <p> <code>RoleARN</code> - The Amazon Resource Number (ARN) that Amazon SageMaker assumes to perform tasks on your behalf during model training. You must grant this role the necessary permissions so that Amazon SageMaker can successfully complete model training. </p> </li> <li> <p> <code>StoppingCondition</code> - Sets a duration for training. Use this parameter to cap model training costs. </p> </li> </ul> <p> For more information about Amazon SageMaker, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/how-it-works.html\">How It Works</a>. </p>"
    },
    "CreateTrainingJobInternal":{
      "name":"CreateTrainingJobInternal",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateTrainingJobInternalRequest"},
      "output":{"shape":"CreateTrainingJobInternalResponse"},
      "errors":[
        {"shape":"ResourceInUse"}
      ],
      "internalonly":true
    },
    "CreateTransformJob":{
      "name":"CreateTransformJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateTransformJobRequest"},
      "output":{"shape":"CreateTransformJobResponse"},
      "errors":[
        {"shape":"ResourceInUse"},
        {"shape":"ResourceLimitExceeded"}
      ]
    },
    "CreateTransformJobInternal":{
      "name":"CreateTransformJobInternal",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateTransformJobInternalRequest"},
      "output":{"shape":"CreateTransformJobInternalResponse"},
      "errors":[
        {"shape":"ResourceInUse"}
      ],
      "internalonly":true
    },
    "CreateTrial":{
      "name":"CreateTrial",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateTrialRequest"},
      "output":{"shape":"CreateTrialResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "CreateTrialComponent":{
      "name":"CreateTrialComponent",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateTrialComponentRequest"},
      "output":{"shape":"CreateTrialComponentResponse"},
      "internalonly":true
    },
    "CreateUserProfile":{
      "name":"CreateUserProfile",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateUserProfileRequest"},
      "output":{"shape":"CreateUserProfileResponse"},
      "errors":[
        {"shape":"ResourceLimitExceeded"}
      ],
      "internalonly":true
    },
    "CreateWorkteam":{
      "name":"CreateWorkteam",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateWorkteamRequest"},
      "output":{"shape":"CreateWorkteamResponse"},
      "errors":[
        {"shape":"ResourceInUse"},
        {"shape":"ResourceLimitExceeded"}
      ]
    },
    "DeleteAlgorithm":{
      "name":"DeleteAlgorithm",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteAlgorithmInput"}
    },
    "DeleteCodeRepository":{
      "name":"DeleteCodeRepository",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteCodeRepositoryInput"}
    },
    "DeleteDomain":{
      "name":"DeleteDomain",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteDomainRequest"},
      "output":{"shape":"DeleteDomainResponse"},
      "internalonly":true
    },
    "DeleteEndpoint":{
      "name":"DeleteEndpoint",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteEndpointInput"},
      "documentation":"<p>Deletes an endpoint. Amazon SageMaker frees up all of the resources that were deployed when the endpoint was created. </p>"
    },
    "DeleteEndpointConfig":{
      "name":"DeleteEndpointConfig",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteEndpointConfigInput"},
      "documentation":"<p>Deletes an endpoint configuration. The <code>DeleteEndpoingConfig</code> API deletes only the specified configuration. It does not delete endpoints created using the configuration. </p>"
    },
    "DeleteEnvironment":{
      "name":"DeleteEnvironment",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteEnvironmentRequest"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "DeleteEnvironmentVersion":{
      "name":"DeleteEnvironmentVersion",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteEnvironmentVersionRequest"},
      "output":{"shape":"DeleteEnvironmentVersionResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "DeleteExperiment":{
      "name":"DeleteExperiment",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteExperimentRequest"},
      "output":{"shape":"DeleteExperimentResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "DeleteModel":{
      "name":"DeleteModel",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteModelInput"},
      "documentation":"<p>Deletes a model. The <code>DeleteModel</code> API deletes only the model entry that was created in Amazon SageMaker when you called the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateModel.html\">CreateModel</a> API. It does not delete model artifacts, inference code, or the IAM role that you specified when creating the model. </p>"
    },
    "DeleteModelPackage":{
      "name":"DeleteModelPackage",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteModelPackageInput"}
    },
    "DeleteMonitoringSchedule":{
      "name":"DeleteMonitoringSchedule",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteMonitoringScheduleRequest"},
      "internalonly":true
    },
    "DeleteNotebookInstance":{
      "name":"DeleteNotebookInstance",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteNotebookInstanceInput"},
      "documentation":"<p> Deletes an Amazon SageMaker notebook instance. Before you can delete a notebook instance, you must call the <code>StopNotebookInstance</code> API. </p> <important> <p>When you delete a notebook instance, you lose all of your data. Amazon SageMaker removes the ML compute instance, and deletes the ML storage volume and the network interface associated with the notebook instance. </p> </important>"
    },
    "DeleteNotebookInstanceLifecycleConfig":{
      "name":"DeleteNotebookInstanceLifecycleConfig",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteNotebookInstanceLifecycleConfigInput"}
    },
    "DeleteTags":{
      "name":"DeleteTags",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteTagsInput"},
      "output":{"shape":"DeleteTagsOutput"},
      "documentation":"<p>Deletes the specified tags from an Amazon SageMaker resource.</p> <p>To list a resource's tags, use the <code>ListTags</code> API. </p>"
    },
    "DeleteTrial":{
      "name":"DeleteTrial",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteTrialRequest"},
      "output":{"shape":"DeleteTrialResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "DeleteTrialComponent":{
      "name":"DeleteTrialComponent",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteTrialComponentRequest"},
      "output":{"shape":"DeleteTrialComponentResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "DeleteUserProfile":{
      "name":"DeleteUserProfile",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteUserProfileRequest"},
      "output":{"shape":"DeleteUserProfileResponse"},
      "internalonly":true
    },
    "DeleteWorkteam":{
      "name":"DeleteWorkteam",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteWorkteamRequest"},
      "output":{"shape":"DeleteWorkteamResponse"},
      "errors":[
        {"shape":"ResourceLimitExceeded"}
      ]
    },
    "DescribeAlgorithm":{
      "name":"DescribeAlgorithm",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeAlgorithmInput"},
      "output":{"shape":"DescribeAlgorithmOutput"}
    },
    "DescribeAnalyticsJob":{
      "name":"DescribeAnalyticsJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeAnalyticsJobRequest"},
      "output":{"shape":"DescribeAnalyticsJobResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "DescribeApp":{
      "name":"DescribeApp",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeAppRequest"},
      "output":{"shape":"DescribeAppResponse"},
      "internalonly":true
    },
    "DescribeAutoMLJob":{
      "name":"DescribeAutoMLJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeAutoMLJobRequest"},
      "output":{"shape":"DescribeAutoMLJobResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "DescribeCodeRepository":{
      "name":"DescribeCodeRepository",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeCodeRepositoryInput"},
      "output":{"shape":"DescribeCodeRepositoryOutput"}
    },
    "DescribeCompilationJob":{
      "name":"DescribeCompilationJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeCompilationJobRequest"},
      "output":{"shape":"DescribeCompilationJobResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ]
    },
    "DescribeDomain":{
      "name":"DescribeDomain",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeDomainRequest"},
      "output":{"shape":"DescribeDomainResponse"},
      "internalonly":true
    },
    "DescribeEndpoint":{
      "name":"DescribeEndpoint",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeEndpointInput"},
      "output":{"shape":"DescribeEndpointOutput"},
      "documentation":"<p>Returns the description of an endpoint.</p>"
    },
    "DescribeEndpointConfig":{
      "name":"DescribeEndpointConfig",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeEndpointConfigInput"},
      "output":{"shape":"DescribeEndpointConfigOutput"},
      "documentation":"<p>Returns the description of an endpoint configuration created using the <code>CreateEndpointConfig</code> API.</p>"
    },
    "DescribeEnvironment":{
      "name":"DescribeEnvironment",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeEnvironmentRequest"},
      "output":{"shape":"DescribeEnvironmentResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "DescribeEnvironmentVersion":{
      "name":"DescribeEnvironmentVersion",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeEnvironmentVersionRequest"},
      "output":{"shape":"DescribeEnvironmentVersionResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "DescribeExperiment":{
      "name":"DescribeExperiment",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeExperimentRequest"},
      "output":{"shape":"DescribeExperimentResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "DescribeFlowDefinition":{
      "name":"DescribeFlowDefinition",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeFlowDefinitionRequest"},
      "output":{"shape":"DescribeFlowDefinitionResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "DescribeHumanTaskUi":{
      "name":"DescribeHumanTaskUi",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeHumanTaskUiRequest"},
      "output":{"shape":"DescribeHumanTaskUiResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "DescribeHyperParameterTuningJob":{
      "name":"DescribeHyperParameterTuningJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeHyperParameterTuningJobRequest"},
      "output":{"shape":"DescribeHyperParameterTuningJobResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ]
    },
    "DescribeInternal":{
      "name":"DescribeInternal",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeInternalRequest"},
      "output":{"shape":"DescribeInternalResponse"},
      "internalonly":true
    },
    "DescribeLabelingJob":{
      "name":"DescribeLabelingJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeLabelingJobRequest"},
      "output":{"shape":"DescribeLabelingJobResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ]
    },
    "DescribeModel":{
      "name":"DescribeModel",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeModelInput"},
      "output":{"shape":"DescribeModelOutput"},
      "documentation":"<p>Describes a model that you created using the <code>CreateModel</code> API.</p>"
    },
    "DescribeModelPackage":{
      "name":"DescribeModelPackage",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeModelPackageInput"},
      "output":{"shape":"DescribeModelPackageOutput"}
    },
    "DescribeMonitoringSchedule":{
      "name":"DescribeMonitoringSchedule",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeMonitoringScheduleRequest"},
      "output":{"shape":"DescribeMonitoringScheduleResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "DescribeNotebookInstance":{
      "name":"DescribeNotebookInstance",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeNotebookInstanceInput"},
      "output":{"shape":"DescribeNotebookInstanceOutput"},
      "documentation":"<p>Returns information about a notebook instance.</p>"
    },
    "DescribeNotebookInstanceLifecycleConfig":{
      "name":"DescribeNotebookInstanceLifecycleConfig",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeNotebookInstanceLifecycleConfigInput"},
      "output":{"shape":"DescribeNotebookInstanceLifecycleConfigOutput"}
    },
    "DescribeSubscribedWorkteam":{
      "name":"DescribeSubscribedWorkteam",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeSubscribedWorkteamRequest"},
      "output":{"shape":"DescribeSubscribedWorkteamResponse"}
    },
    "DescribeTrainingJob":{
      "name":"DescribeTrainingJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeTrainingJobRequest"},
      "output":{"shape":"DescribeTrainingJobResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "documentation":"<p>Returns information about a training job.</p>"
    },
    "DescribeTransformJob":{
      "name":"DescribeTransformJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeTransformJobRequest"},
      "output":{"shape":"DescribeTransformJobResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ]
    },
    "DescribeTrial":{
      "name":"DescribeTrial",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeTrialRequest"},
      "output":{"shape":"DescribeTrialResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "DescribeTrialComponent":{
      "name":"DescribeTrialComponent",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeTrialComponentRequest"},
      "output":{"shape":"DescribeTrialComponentResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "DescribeUserProfile":{
      "name":"DescribeUserProfile",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeUserProfileRequest"},
      "output":{"shape":"DescribeUserProfileResponse"},
      "internalonly":true
    },
    "DescribeWorkforce":{
      "name":"DescribeWorkforce",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeWorkforceRequest"},
      "output":{"shape":"DescribeWorkforceResponse"},
      "internalonly":true
    },
    "DescribeWorkteam":{
      "name":"DescribeWorkteam",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeWorkteamRequest"},
      "output":{"shape":"DescribeWorkteamResponse"}
    },
    "DisassociateTrialComponent":{
      "name":"DisassociateTrialComponent",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DisassociateTrialComponentRequest"},
      "output":{"shape":"DisassociateTrialComponentResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "ExportAutoMLTrialToModel":{
      "name":"ExportAutoMLTrialToModel",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ExportAutoMLTrialToModelRequest"},
      "output":{"shape":"ExportAutoMLTrialToModelResponse"},
      "errors":[
        {"shape":"ResourceLimitExceeded"},
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "GetSearchSuggestions":{
      "name":"GetSearchSuggestions",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"GetSearchSuggestionsRequest"},
      "output":{"shape":"GetSearchSuggestionsResponse"}
    },
    "ListAlgorithms":{
      "name":"ListAlgorithms",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListAlgorithmsInput"},
      "output":{"shape":"ListAlgorithmsOutput"}
    },
    "ListAnalyticsJobs":{
      "name":"ListAnalyticsJobs",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListAnalyticsJobsRequest"},
      "output":{"shape":"ListAnalyticsJobsResponse"},
      "internalonly":true
    },
    "ListApps":{
      "name":"ListApps",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListAppsRequest"},
      "output":{"shape":"ListAppsResponse"},
      "internalonly":true
    },
    "ListAutoMLJobs":{
      "name":"ListAutoMLJobs",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListAutoMLJobsRequest"},
      "output":{"shape":"ListAutoMLJobsResponse"},
      "internalonly":true
    },
    "ListCodeRepositories":{
      "name":"ListCodeRepositories",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListCodeRepositoriesInput"},
      "output":{"shape":"ListCodeRepositoriesOutput"}
    },
    "ListCompilationJobs":{
      "name":"ListCompilationJobs",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListCompilationJobsRequest"},
      "output":{"shape":"ListCompilationJobsResponse"}
    },
    "ListComponentJobsForAutoMLJob":{
      "name":"ListComponentJobsForAutoMLJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListComponentJobsForAutoMLJobRequest"},
      "output":{"shape":"ListComponentJobsForAutoMLJobResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "ListDomains":{
      "name":"ListDomains",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListDomainsRequest"},
      "output":{"shape":"ListDomainsResponse"},
      "internalonly":true
    },
    "ListEndpointConfigs":{
      "name":"ListEndpointConfigs",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListEndpointConfigsInput"},
      "output":{"shape":"ListEndpointConfigsOutput"},
      "documentation":"<p>Lists endpoint configurations.</p>"
    },
    "ListEndpoints":{
      "name":"ListEndpoints",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListEndpointsInput"},
      "output":{"shape":"ListEndpointsOutput"},
      "documentation":"<p>Lists endpoints.</p>"
    },
    "ListEnvironmentVersions":{
      "name":"ListEnvironmentVersions",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListEnvironmentVersionsRequest"},
      "output":{"shape":"ListEnvironmentVersionsResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "ListEnvironments":{
      "name":"ListEnvironments",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListEnvironmentsRequest"},
      "output":{"shape":"ListEnvironmentsResponse"},
      "internalonly":true
    },
    "ListExperiments":{
      "name":"ListExperiments",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListExperimentsRequest"},
      "output":{"shape":"ListExperimentsResponse"},
      "internalonly":true
    },
    "ListFlowDefinitions":{
      "name":"ListFlowDefinitions",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListFlowDefinitionsRequest"},
      "output":{"shape":"ListFlowDefinitionsResponse"},
      "internalonly":true
    },
    "ListHumanTaskUis":{
      "name":"ListHumanTaskUis",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListHumanTaskUisRequest"},
      "output":{"shape":"ListHumanTaskUisResponse"},
      "internalonly":true
    },
    "ListHyperParameterTuningJobs":{
      "name":"ListHyperParameterTuningJobs",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListHyperParameterTuningJobsRequest"},
      "output":{"shape":"ListHyperParameterTuningJobsResponse"}
    },
    "ListLabelingJobs":{
      "name":"ListLabelingJobs",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListLabelingJobsRequest"},
      "output":{"shape":"ListLabelingJobsResponse"}
    },
    "ListLabelingJobsForWorkteam":{
      "name":"ListLabelingJobsForWorkteam",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListLabelingJobsForWorkteamRequest"},
      "output":{"shape":"ListLabelingJobsForWorkteamResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ]
    },
    "ListModelPackages":{
      "name":"ListModelPackages",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListModelPackagesInput"},
      "output":{"shape":"ListModelPackagesOutput"}
    },
    "ListModels":{
      "name":"ListModels",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListModelsInput"},
      "output":{"shape":"ListModelsOutput"},
      "documentation":"<p>Lists models created with the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateModel.html\">CreateModel</a> API.</p>"
    },
    "ListMonitoringExecutions":{
      "name":"ListMonitoringExecutions",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListMonitoringExecutionsRequest"},
      "output":{"shape":"ListMonitoringExecutionsResponse"},
      "internalonly":true
    },
    "ListMonitoringSchedules":{
      "name":"ListMonitoringSchedules",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListMonitoringSchedulesRequest"},
      "output":{"shape":"ListMonitoringSchedulesResponse"},
      "internalonly":true
    },
    "ListNotebookInstanceLifecycleConfigs":{
      "name":"ListNotebookInstanceLifecycleConfigs",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListNotebookInstanceLifecycleConfigsInput"},
      "output":{"shape":"ListNotebookInstanceLifecycleConfigsOutput"}
    },
    "ListNotebookInstances":{
      "name":"ListNotebookInstances",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListNotebookInstancesInput"},
      "output":{"shape":"ListNotebookInstancesOutput"},
      "documentation":"<p>Returns a list of the Amazon SageMaker notebook instances in the requester's account in an AWS Region. </p>"
    },
    "ListSubscribedWorkteams":{
      "name":"ListSubscribedWorkteams",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListSubscribedWorkteamsRequest"},
      "output":{"shape":"ListSubscribedWorkteamsResponse"}
    },
    "ListTags":{
      "name":"ListTags",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListTagsInput"},
      "output":{"shape":"ListTagsOutput"},
      "documentation":"<p>Returns the tags for the specified Amazon SageMaker resource.</p>"
    },
    "ListTrainingJobs":{
      "name":"ListTrainingJobs",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListTrainingJobsRequest"},
      "output":{"shape":"ListTrainingJobsResponse"},
      "documentation":"<p>Lists training jobs.</p>"
    },
    "ListTrainingJobsForHyperParameterTuningJob":{
      "name":"ListTrainingJobsForHyperParameterTuningJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListTrainingJobsForHyperParameterTuningJobRequest"},
      "output":{"shape":"ListTrainingJobsForHyperParameterTuningJobResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ]
    },
    "ListTransformJobs":{
      "name":"ListTransformJobs",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListTransformJobsRequest"},
      "output":{"shape":"ListTransformJobsResponse"}
    },
    "ListTrialComponents":{
      "name":"ListTrialComponents",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListTrialComponentsRequest"},
      "output":{"shape":"ListTrialComponentsResponse"},
      "internalonly":true
    },
    "ListTrials":{
      "name":"ListTrials",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListTrialsRequest"},
      "output":{"shape":"ListTrialsResponse"},
      "internalonly":true
    },
    "ListTrialsForAutoMLJob":{
      "name":"ListTrialsForAutoMLJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListTrialsForAutoMLJobRequest"},
      "output":{"shape":"ListTrialsForAutoMLJobResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "ListUserProfiles":{
      "name":"ListUserProfiles",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListUserProfilesRequest"},
      "output":{"shape":"ListUserProfilesResponse"},
      "internalonly":true
    },
    "ListWorkteams":{
      "name":"ListWorkteams",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListWorkteamsRequest"},
      "output":{"shape":"ListWorkteamsResponse"}
    },
    "RenderUiTemplate":{
      "name":"RenderUiTemplate",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"RenderUiTemplateRequest"},
      "output":{"shape":"RenderUiTemplateResponse"}
    },
    "Search":{
      "name":"Search",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"SearchRequest"},
      "output":{"shape":"SearchResponse"}
    },
    "StartMonitoringSchedule":{
      "name":"StartMonitoringSchedule",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"StartMonitoringScheduleRequest"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "StartNotebookInstance":{
      "name":"StartNotebookInstance",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"StartNotebookInstanceInput"},
      "errors":[
        {"shape":"ResourceLimitExceeded"}
      ],
      "documentation":"<p>Launches an ML compute instance with the latest version of the libraries and attaches your ML storage volume. After configuring the notebook instance, Amazon SageMaker sets the notebook instance status to <code>InService</code>. A notebook instance's status must be <code>InService</code> before you can connect to your Jupyter notebook. </p>"
    },
    "StopAnalyticsJob":{
      "name":"StopAnalyticsJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"StopAnalyticsJobRequest"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "StopAnalyticsJobInternal":{
      "name":"StopAnalyticsJobInternal",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"StopAnalyticsJobInternalRequest"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "StopApp":{
      "name":"StopApp",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"StopAppRequest"},
      "output":{"shape":"StopAppResponse"},
      "internalonly":true
    },
    "StopAutoMLJob":{
      "name":"StopAutoMLJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"StopAutoMLJobRequest"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "StopCompilationJob":{
      "name":"StopCompilationJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"StopCompilationJobRequest"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ]
    },
    "StopHyperParameterTuningJob":{
      "name":"StopHyperParameterTuningJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"StopHyperParameterTuningJobRequest"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ]
    },
    "StopHyperParameterTuningJobInternal":{
      "name":"StopHyperParameterTuningJobInternal",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"StopHyperParameterTuningJobInternalRequest"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "StopLabelingJob":{
      "name":"StopLabelingJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"StopLabelingJobRequest"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ]
    },
    "StopMonitoringSchedule":{
      "name":"StopMonitoringSchedule",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"StopMonitoringScheduleRequest"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "StopNotebookInstance":{
      "name":"StopNotebookInstance",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"StopNotebookInstanceInput"},
      "documentation":"<p>Terminates the ML compute instance. Before terminating the instance, Amazon SageMaker disconnects the ML storage volume from it. Amazon SageMaker preserves the ML storage volume. </p> <p>To access data on the ML storage volume for a notebook instance that has been terminated, call the <code>StartNotebookInstance</code> API. <code>StartNotebookInstance</code> launches another ML compute instance, configures it, and attaches the preserved ML storage volume so you can continue your work. </p>"
    },
    "StopTrainingJob":{
      "name":"StopTrainingJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"StopTrainingJobRequest"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "documentation":"<p>Stops a training job. To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms might use this 120-second window to save the model artifacts, so the results of the training is not lost. </p> <p>Training algorithms provided by Amazon SageMaker save the intermediate results of a model training job. This intermediate data is a valid model artifact. You can use the model artifacts that are saved when Amazon SageMaker stops a training job to create a model. </p> <p>When it receives a <code>StopTrainingJob</code> request, Amazon SageMaker changes the status of the job to <code>Stopping</code>. After Amazon SageMaker stops the job, it sets the status to <code>Stopped</code>.</p>"
    },
    "StopTrainingJobInternal":{
      "name":"StopTrainingJobInternal",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"StopTrainingJobInternalRequest"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "StopTransformJob":{
      "name":"StopTransformJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"StopTransformJobRequest"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ]
    },
    "StopTransformJobInternal":{
      "name":"StopTransformJobInternal",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"StopTransformJobInternalRequest"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "UpdateCodeRepository":{
      "name":"UpdateCodeRepository",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateCodeRepositoryInput"},
      "output":{"shape":"UpdateCodeRepositoryOutput"}
    },
    "UpdateDomain":{
      "name":"UpdateDomain",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateDomainRequest"},
      "output":{"shape":"UpdateDomainResponse"},
      "errors":[
        {"shape":"ResourceLimitExceeded"}
      ],
      "internalonly":true
    },
    "UpdateEndpoint":{
      "name":"UpdateEndpoint",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateEndpointInput"},
      "output":{"shape":"UpdateEndpointOutput"},
      "errors":[
        {"shape":"ResourceLimitExceeded"}
      ],
      "documentation":"<p> Deploys the new <code>EndpointConfig</code> specified in the request, switches to using newly created endpoint, and then deletes resources provisioned for the endpoint using the previous <code>EndpointConfig</code> (there is no availability loss). </p> <p>When Amazon SageMaker receives the request, it sets the endpoint status to <code>Updating</code>. After updating the endpoint, it sets the status to <code>InService</code>. To check the status of an endpoint, use the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/API_DescribeEndpoint.html\">DescribeEndpoint</a> API. </p>"
    },
    "UpdateEndpointWeightsAndCapacities":{
      "name":"UpdateEndpointWeightsAndCapacities",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateEndpointWeightsAndCapacitiesInput"},
      "output":{"shape":"UpdateEndpointWeightsAndCapacitiesOutput"},
      "errors":[
        {"shape":"ResourceLimitExceeded"}
      ],
      "documentation":"<p>Updates variant weight, capacity, or both of one or more variants associated with an endpoint. This operation updates weight, capacity, or both for the previously provisioned endpoint. When it receives the request, Amazon SageMaker sets the endpoint status to <code>Updating</code>. After updating the endpoint, it sets the status to <code>InService</code>. To check the status of an endpoint, use the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/API_DescribeEndpoint.html\">DescribeEndpoint</a> API. </p>"
    },
    "UpdateEnvironment":{
      "name":"UpdateEnvironment",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateEnvironmentRequest"},
      "output":{"shape":"UpdateEnvironmentResponse"},
      "errors":[
        {"shape":"ResourceNotFound"},
        {"shape":"ResourceLimitExceeded"}
      ],
      "internalonly":true
    },
    "UpdateEnvironmentVersionStatus":{
      "name":"UpdateEnvironmentVersionStatus",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateEnvironmentVersionStatusRequest"},
      "errors":[
        {"shape":"ResourceInUse"},
        {"shape":"ResourceLimitExceeded"}
      ],
      "internalonly":true
    },
    "UpdateExperiment":{
      "name":"UpdateExperiment",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateExperimentRequest"},
      "output":{"shape":"UpdateExperimentResponse"},
      "errors":[
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "UpdateMonitoringSchedule":{
      "name":"UpdateMonitoringSchedule",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateMonitoringScheduleRequest"},
      "output":{"shape":"UpdateMonitoringScheduleResponse"},
      "errors":[
        {"shape":"ResourceLimitExceeded"}
      ],
      "internalonly":true
    },
    "UpdateNotebookInstance":{
      "name":"UpdateNotebookInstance",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateNotebookInstanceInput"},
      "output":{"shape":"UpdateNotebookInstanceOutput"},
      "errors":[
        {"shape":"ResourceLimitExceeded"}
      ],
      "documentation":"<p>Updates a notebook instance. NotebookInstance updates include upgrading or downgrading the ML compute instance used for your notebook instance to accommodate changes in your workload requirements. You can also update the VPC security groups.</p>"
    },
    "UpdateNotebookInstanceLifecycleConfig":{
      "name":"UpdateNotebookInstanceLifecycleConfig",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateNotebookInstanceLifecycleConfigInput"},
      "output":{"shape":"UpdateNotebookInstanceLifecycleConfigOutput"},
      "errors":[
        {"shape":"ResourceLimitExceeded"}
      ]
    },
    "UpdateTrialComponent":{
      "name":"UpdateTrialComponent",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateTrialComponentRequest"},
      "output":{"shape":"UpdateTrialComponentResponse"},
      "errors":[
        {"shape":"TrialComponentConcurrentModificationException"},
        {"shape":"ResourceNotFound"}
      ],
      "internalonly":true
    },
    "UpdateUserProfile":{
      "name":"UpdateUserProfile",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateUserProfileRequest"},
      "output":{"shape":"UpdateUserProfileResponse"},
      "errors":[
        {"shape":"ResourceLimitExceeded"}
      ],
      "internalonly":true
    },
    "UpdateWorkforce":{
      "name":"UpdateWorkforce",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateWorkforceRequest"},
      "output":{"shape":"UpdateWorkforceResponse"},
      "internalonly":true
    },
    "UpdateWorkteam":{
      "name":"UpdateWorkteam",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateWorkteamRequest"},
      "output":{"shape":"UpdateWorkteamResponse"},
      "errors":[
        {"shape":"ResourceLimitExceeded"}
      ]
    },
    "VerifyResourcesExistForTagris":{
      "name":"VerifyResourcesExistForTagris",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"TagrisVerifyResourcesExistInput"},
      "output":{"shape":"TagrisVerifyResourcesExistOutput"},
      "errors":[
        {"shape":"TagrisAccessDeniedException"},
        {"shape":"TagrisInternalServiceException"},
        {"shape":"TagrisInvalidArnException"},
        {"shape":"TagrisInvalidParameterException"},
        {"shape":"TagrisPartialResourcesExistResultsException"},
        {"shape":"TagrisThrottledException"}
      ],
      "internalonly":true
    }
  },
  "shapes":{
    "Accept":{
      "type":"string",
      "max":256,
      "pattern":".*"
    },
    "AccountId":{
      "type":"string",
      "pattern":"^\\d+$"
    },
    "AddTagsInput":{
      "type":"structure",
      "required":[
        "ResourceArn",
        "Tags"
      ],
      "members":{
        "ResourceArn":{
          "shape":"ResourceArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the resource that you want to tag. </p>"
        },
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>An array of <code>Tag</code> objects. Each tag is a key-value pair. Only the <code>key</code> parameter is required. If you don't specify a value, Amazon SageMaker sets the value to an empty string. </p>"
        }
      }
    },
    "AddTagsOutput":{
      "type":"structure",
      "members":{
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>A list of tags associated with the Amazon SageMaker resource.</p>"
        }
      }
    },
    "AdditionalCodeRepositoryNamesOrUrls":{
      "type":"list",
      "member":{"shape":"CodeRepositoryNameOrUrl"},
      "max":3
    },
    "AlgorithmArn":{
      "type":"string",
      "max":2048,
      "min":1,
      "pattern":"arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:algorithm/.*"
    },
    "AlgorithmImage":{
      "type":"string",
      "max":255,
      "pattern":".*"
    },
    "AlgorithmSortBy":{
      "type":"string",
      "enum":[
        "Name",
        "CreationTime"
      ]
    },
    "AlgorithmSpecification":{
      "type":"structure",
      "required":["TrainingInputMode"],
      "members":{
        "TrainingImage":{
          "shape":"AlgorithmImage",
          "documentation":"<p>The registry path of the Docker image that contains the training algorithm. For information about using your own algorithms, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/algos-docker-registry-paths.html\">Docker Registry Paths for Algorithms Provided by Amazon SageMaker </a>. </p>"
        },
        "AlgorithmName":{"shape":"ArnOrName"},
        "TrainingInputMode":{
          "shape":"TrainingInputMode",
          "documentation":"<p>The input mode that the algorithm supports. For the input modes that Amazon SageMaker algorithms support, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html\">Algorithms</a>. If an algorithm supports the <code>File</code> input mode, Amazon SageMaker downloads the training data from S3 to the provisioned ML storage Volume, and mounts the directory to docker volume for training container. If an algorithm supports the <code>Pipe</code> input mode, Amazon SageMaker streams data directly from S3 to the container. </p> <p> In File mode, make sure you provision ML storage volume with sufficient capacity to accomodate the data download from S3. In addition to the training data, the ML storage volume also stores the output model. The algorithm container use ML storage volume to also store intermediate information, if any. </p> <p> For distributed algorithms using File mode, training data is distributed uniformly, and your training duration is predictable if the input data objects size is approximately same. Amazon SageMaker does not split the files any further for model training. If the object sizes are skewed, training won't be optimal as the data distribution is also skewed where one host in a training cluster is overloaded, thus becoming bottleneck in training. </p>"
        },
        "MetricDefinitions":{"shape":"MetricDefinitionList"}
      },
      "documentation":"<p>Specifies the training algorithm to use in a <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateTrainingJob.html\">CreateTrainingJob</a> request. </p> <p>For more information about algorithms provided by Amazon SageMaker, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html\">Algorithms</a>. For information about using your own algorithms, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/adv-topics-own-algo.html\">Bring Your Own Algorithms </a>. </p>"
    },
    "AlgorithmStatus":{
      "type":"string",
      "enum":[
        "Pending",
        "InProgress",
        "Completed",
        "Failed",
        "Deleting"
      ]
    },
    "AlgorithmStatusDetails":{
      "type":"structure",
      "members":{
        "ValidationStatuses":{"shape":"AlgorithmStatusItemList"},
        "ImageScanStatuses":{"shape":"AlgorithmStatusItemList"}
      }
    },
    "AlgorithmStatusItem":{
      "type":"structure",
      "required":[
        "Name",
        "Status"
      ],
      "members":{
        "Name":{"shape":"EntityName"},
        "Status":{"shape":"DetailedAlgorithmStatus"},
        "FailureReason":{"shape":"String"}
      }
    },
    "AlgorithmStatusItemList":{
      "type":"list",
      "member":{"shape":"AlgorithmStatusItem"}
    },
    "AlgorithmSummary":{
      "type":"structure",
      "required":[
        "AlgorithmName",
        "AlgorithmArn",
        "CreationTime",
        "AlgorithmStatus"
      ],
      "members":{
        "AlgorithmName":{"shape":"EntityName"},
        "AlgorithmArn":{"shape":"AlgorithmArn"},
        "AlgorithmDescription":{"shape":"EntityDescription"},
        "CreationTime":{"shape":"CreationTime"},
        "AlgorithmStatus":{"shape":"AlgorithmStatus"}
      }
    },
    "AlgorithmSummaryList":{
      "type":"list",
      "member":{"shape":"AlgorithmSummary"}
    },
    "AlgorithmValidationProfile":{
      "type":"structure",
      "required":[
        "ProfileName",
        "TrainingJobDefinition"
      ],
      "members":{
        "ProfileName":{"shape":"EntityName"},
        "TrainingJobDefinition":{"shape":"TrainingJobDefinition"},
        "TransformJobDefinition":{"shape":"TransformJobDefinition"}
      }
    },
    "AlgorithmValidationProfiles":{
      "type":"list",
      "member":{"shape":"AlgorithmValidationProfile"},
      "max":1,
      "min":1
    },
    "AlgorithmValidationSpecification":{
      "type":"structure",
      "required":[
        "ValidationRole",
        "ValidationProfiles"
      ],
      "members":{
        "ValidationRole":{"shape":"RoleArn"},
        "ValidationProfiles":{"shape":"AlgorithmValidationProfiles"}
      }
    },
    "AnalyticsClusterConfig":{
      "type":"structure",
      "required":[
        "InstanceCount",
        "InstanceType",
        "VolumeSizeInGB"
      ],
      "members":{
        "InstanceCount":{"shape":"AnalyticsInstanceCount"},
        "InstanceType":{"shape":"AnalyticsInstanceType"},
        "VolumeSizeInGB":{"shape":"AnalyticsVolumeSizeInGB"},
        "VolumeKmsKeyId":{"shape":"KmsKeyId"}
      }
    },
    "AnalyticsEnvironmentKey":{
      "type":"string",
      "max":256,
      "pattern":"[a-zA-Z_][a-zA-Z0-9_]*"
    },
    "AnalyticsEnvironmentMap":{
      "type":"map",
      "key":{"shape":"AnalyticsEnvironmentKey"},
      "value":{"shape":"AnalyticsEnvironmentValue"},
      "max":100
    },
    "AnalyticsEnvironmentValue":{
      "type":"string",
      "max":256,
      "pattern":"[\\S\\s]*"
    },
    "AnalyticsInput":{
      "type":"structure",
      "required":[
        "InputName",
        "S3Input"
      ],
      "members":{
        "InputName":{"shape":"String"},
        "S3Input":{"shape":"AnalyticsS3Input"}
      }
    },
    "AnalyticsInputs":{
      "type":"list",
      "member":{"shape":"AnalyticsInput"},
      "max":10,
      "min":0
    },
    "AnalyticsInstanceCount":{
      "type":"integer",
      "max":100,
      "min":1
    },
    "AnalyticsInstanceType":{
      "type":"string",
      "enum":[
        "ml.t3.medium",
        "ml.t3.large",
        "ml.t3.xlarge",
        "ml.t3.2xlarge",
        "ml.m4.xlarge",
        "ml.m4.2xlarge",
        "ml.m4.4xlarge",
        "ml.m4.10xlarge",
        "ml.m4.16xlarge",
        "ml.c4.xlarge",
        "ml.c4.2xlarge",
        "ml.c4.4xlarge",
        "ml.c4.8xlarge",
        "ml.p2.xlarge",
        "ml.p2.8xlarge",
        "ml.p2.16xlarge",
        "ml.p3.2xlarge",
        "ml.p3.8xlarge",
        "ml.p3.16xlarge",
        "ml.c5.xlarge",
        "ml.c5.2xlarge",
        "ml.c5.4xlarge",
        "ml.c5.9xlarge",
        "ml.c5.18xlarge",
        "ml.m5.large",
        "ml.m5.xlarge",
        "ml.m5.2xlarge",
        "ml.m5.4xlarge",
        "ml.m5.12xlarge",
        "ml.m5.24xlarge",
        "ml.r5.large",
        "ml.r5.xlarge",
        "ml.r5.2xlarge",
        "ml.r5.4xlarge",
        "ml.r5.12xlarge",
        "ml.r5.24xlarge"
      ]
    },
    "AnalyticsJobArn":{
      "type":"string",
      "max":256,
      "pattern":"arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:analytics-job/.*"
    },
    "AnalyticsJobName":{
      "type":"string",
      "max":63,
      "min":1,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    },
    "AnalyticsJobStatus":{
      "type":"string",
      "enum":[
        "InProgress",
        "Completed",
        "Failed",
        "Stopping",
        "Stopped"
      ]
    },
    "AnalyticsJobSummaries":{
      "type":"list",
      "member":{"shape":"AnalyticsJobSummary"}
    },
    "AnalyticsJobSummary":{
      "type":"structure",
      "required":[
        "AnalyticsJobName",
        "AnalyticsJobArn",
        "CreationTime",
        "AnalyticsJobStatus"
      ],
      "members":{
        "AnalyticsJobName":{"shape":"AnalyticsJobName"},
        "AnalyticsJobArn":{"shape":"AnalyticsJobArn"},
        "CreationTime":{"shape":"Timestamp"},
        "AnalyticsEndTime":{"shape":"Timestamp"},
        "LastModifiedTime":{"shape":"Timestamp"},
        "AnalyticsJobStatus":{"shape":"AnalyticsJobStatus"},
        "FailureReason":{"shape":"FailureReason"},
        "ExitMessage":{"shape":"ExitMessage"}
      }
    },
    "AnalyticsLocalPath":{
      "type":"string",
      "max":256,
      "pattern":".*"
    },
    "AnalyticsMaxRuntimeInSeconds":{
      "type":"integer",
      "max":604800,
      "min":1
    },
    "AnalyticsOutput":{
      "type":"structure",
      "required":[
        "OutputName",
        "S3Output"
      ],
      "members":{
        "OutputName":{"shape":"String"},
        "S3Output":{"shape":"AnalyticsS3Output"}
      }
    },
    "AnalyticsOutputs":{
      "type":"list",
      "member":{"shape":"AnalyticsOutput"},
      "max":10,
      "min":0
    },
    "AnalyticsResources":{
      "type":"structure",
      "required":["ClusterConfig"],
      "members":{
        "ClusterConfig":{"shape":"AnalyticsClusterConfig"}
      }
    },
    "AnalyticsS3CompressionType":{
      "type":"string",
      "enum":[
        "None",
        "Gzip"
      ]
    },
    "AnalyticsS3DataDistributionType":{
      "type":"string",
      "enum":[
        "FullyReplicated",
        "ShardedByS3Key"
      ]
    },
    "AnalyticsS3DataType":{
      "type":"string",
      "enum":[
        "ManifestFile",
        "S3Prefix"
      ]
    },
    "AnalyticsS3DownloadMode":{
      "type":"string",
      "enum":[
        "Continuous",
        "StartOfJob"
      ]
    },
    "AnalyticsS3Input":{
      "type":"structure",
      "required":[
        "S3Uri",
        "LocalPath",
        "S3DataType",
        "S3InputMode",
        "S3DownloadMode",
        "S3DataDistributionType"
      ],
      "members":{
        "S3Uri":{"shape":"S3Uri"},
        "LocalPath":{"shape":"AnalyticsLocalPath"},
        "S3DataType":{"shape":"AnalyticsS3DataType"},
        "S3InputMode":{"shape":"AnalyticsS3InputMode"},
        "S3DownloadMode":{"shape":"AnalyticsS3DownloadMode"},
        "S3DataDistributionType":{"shape":"AnalyticsS3DataDistributionType"},
        "S3CompressionType":{"shape":"AnalyticsS3CompressionType"}
      }
    },
    "AnalyticsS3InputMode":{
      "type":"string",
      "enum":[
        "Pipe",
        "File"
      ]
    },
    "AnalyticsS3Output":{
      "type":"structure",
      "required":[
        "S3Uri",
        "LocalPath",
        "S3UploadMode"
      ],
      "members":{
        "S3Uri":{"shape":"S3Uri"},
        "LocalPath":{"shape":"AnalyticsLocalPath"},
        "KmsKeyId":{"shape":"KmsKeyId"},
        "S3UploadMode":{"shape":"AnalyticsS3UploadMode"}
      }
    },
    "AnalyticsS3UploadMode":{
      "type":"string",
      "enum":[
        "Continuous",
        "EndOfJob"
      ]
    },
    "AnalyticsStateMachineArnProviderLambdaArn":{
      "type":"string",
      "max":512,
      "min":0,
      "pattern":".*"
    },
    "AnalyticsStoppingCondition":{
      "type":"structure",
      "required":["MaxRuntimeInSeconds"],
      "members":{
        "MaxRuntimeInSeconds":{"shape":"AnalyticsMaxRuntimeInSeconds"}
      }
    },
    "AnalyticsUpstreamS3Output":{
      "type":"structure",
      "required":[
        "S3Uri",
        "LocalPath",
        "S3UploadMode"
      ],
      "members":{
        "S3Uri":{"shape":"S3Uri"},
        "LocalPath":{"shape":"AnalyticsLocalPath"},
        "KmsKeyId":{"shape":"KmsKeyId"},
        "S3UploadMode":{"shape":"AnalyticsS3UploadMode"},
        "RoleArn":{"shape":"RoleArn"}
      }
    },
    "AnalyticsVolumeSizeInGB":{
      "type":"integer",
      "max":16384,
      "min":1
    },
    "AnnotationConsolidationConfig":{
      "type":"structure",
      "required":["AnnotationConsolidationLambdaArn"],
      "members":{
        "AnnotationConsolidationLambdaArn":{"shape":"LambdaFunctionArn"}
      }
    },
    "AppDetails":{
      "type":"structure",
      "members":{
        "DomainId":{"shape":"ResourceId"},
        "IdentityId":{"shape":"IdentityId"},
        "AppType":{"shape":"AppType"},
        "AppName":{"shape":"AppName"},
        "Status":{"shape":"AppStatus"},
        "ResourceSpec":{"shape":"ResourceSpec"},
        "EffectiveResourceSpec":{"shape":"ResourceSpec"},
        "LastHealthCheckTimestamp":{"shape":"Timestamp"},
        "LastUserActivityTimestamp":{"shape":"Timestamp"}
      }
    },
    "AppList":{
      "type":"list",
      "member":{"shape":"AppDetails"}
    },
    "AppName":{
      "type":"string",
      "max":256
    },
    "AppSettings":{
      "type":"structure",
      "members":{
        "JupyterServer":{"shape":"DefaultResourceManagerSpec"},
        "KernelGateway":{"shape":"DefaultResourceManagerSpec"},
        "TensorBoard":{"shape":"DefaultResourceManagerSpec"}
      }
    },
    "AppSortKey":{
      "type":"string",
      "enum":[
        "LastUserActivityTime",
        "AppType",
        "AppName",
        "AppStatus",
        "DomainId"
      ]
    },
    "AppSpecification":{
      "type":"structure",
      "required":["ImageUri"],
      "members":{
        "ImageUri":{"shape":"ImageUri"},
        "ContainerEntrypoint":{"shape":"ContainerEntrypoint"},
        "ContainerArguments":{"shape":"ContainerArguments"}
      }
    },
    "AppStatus":{
      "type":"string",
      "enum":[
        "Deleting",
        "Failed",
        "InService",
        "Pending"
      ]
    },
    "AppType":{
      "type":"string",
      "enum":[
        "JupyterServer",
        "KernelGateway",
        "RStudio"
      ]
    },
    "ArnOrName":{
      "type":"string",
      "max":170,
      "min":1,
      "pattern":"(arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:[a-z\\-]*\\/)?([a-zA-Z0-9]([a-zA-Z0-9-]){0,62})(?<!-)$"
    },
    "AssemblyType":{
      "type":"string",
      "enum":[
        "None",
        "Line"
      ]
    },
    "AssociateTrialComponentRequest":{
      "type":"structure",
      "required":[
        "TrialComponentName",
        "TrialName"
      ],
      "members":{
        "TrialComponentName":{"shape":"ExperimentEntityName"},
        "TrialName":{"shape":"ExperimentEntityName"},
        "DelegatedAccountId":{
          "shape":"String",
          "internalonly":true
        }
      }
    },
    "AssociateTrialComponentResponse":{
      "type":"structure",
      "members":{
        "TrialComponentArn":{"shape":"TrialComponentArn"},
        "TrialArn":{"shape":"TrialArn"}
      }
    },
    "AttributeName":{
      "type":"string",
      "max":256,
      "min":1,
      "pattern":".+"
    },
    "AttributeNames":{
      "type":"list",
      "member":{"shape":"AttributeName"},
      "max":16
    },
    "AutoMLAlgorithm":{
      "type":"string",
      "enum":[
        "linear-learner",
        "factorization-machines",
        "xgboost",
        "knn"
      ]
    },
    "AutoMLAlgorithms":{
      "type":"list",
      "member":{"shape":"AutoMLAlgorithm"}
    },
    "AutoMLChannel":{
      "type":"structure",
      "required":[
        "ChannelName",
        "DataSource",
        "TargetAttributeName"
      ],
      "members":{
        "ChannelName":{"shape":"AutoMLChannelName"},
        "DataSource":{"shape":"DataSource"},
        "ContentType":{"shape":"AutoMLContentType"},
        "CompressionType":{"shape":"CompressionType"},
        "RecordWrapperType":{"shape":"AutoMLRecordWrapper"},
        "InputMode":{"shape":"AutoMLTrainingInputMode"},
        "ShuffleConfig":{"shape":"ShuffleConfig"},
        "TargetAttributeName":{"shape":"TargetAttributeName"}
      }
    },
    "AutoMLChannelName":{
      "type":"string",
      "max":64,
      "min":1,
      "pattern":"[A-Za-z0-9\\.\\-_]+"
    },
    "AutoMLContentType":{
      "type":"string",
      "max":256,
      "pattern":".*"
    },
    "AutoMLFailureReason":{
      "type":"string",
      "max":1024
    },
    "AutoMLInputDataConfig":{
      "type":"list",
      "member":{"shape":"AutoMLChannel"},
      "max":20,
      "min":1
    },
    "AutoMLInstanceType":{
      "type":"string",
      "enum":[
        "ml.m5.xlarge",
        "ml.m5.2xlarge",
        "ml.m5.4xlarge",
        "ml.m5.12xlarge",
        "ml.m5.24xlarge"
      ]
    },
    "AutoMLJobArn":{
      "type":"string",
      "max":256
    },
    "AutoMLJobArtifacts":{
      "type":"structure",
      "members":{
        "EnsembledModelLocation":{"shape":"EnsembledModelLocation"},
        "AutoMLJobSummaryNotebookLocation":{"shape":"AutoMLJobSummaryNotebookLocation"},
        "DryRunNotebookLocation":{"shape":"DryRunNotebookLocation"},
        "BestEnsembleNotebook":{"shape":"BestEnsembleNotebook"},
        "BestTrialNotebookLocation":{"shape":"BestTrialNotebookLocation"},
        "ResultVisualizationNotebookLocation":{"shape":"ResultVisualizationNotebookLocation"},
        "InterpretedModelLocation":{"shape":"InterpretedModelLocation"}
      }
    },
    "AutoMLJobConfig":{
      "type":"structure",
      "required":[
        "AutoMLResourcePools",
        "StoppingCondition"
      ],
      "members":{
        "AutoMLResourcePools":{"shape":"AutoMLResourcePools"},
        "VolumeKmsKeyId":{"shape":"KmsKeyId"},
        "StoppingCondition":{"shape":"AutoMLJobStoppingCondition"},
        "SecurityConfig":{"shape":"AutoMLSecurityConfig"},
        "BlacklistedSageMakerAlgorithms":{"shape":"AutoMLAlgorithms"}
      }
    },
    "AutoMLJobCounter":{
      "type":"integer",
      "min":0
    },
    "AutoMLJobDescription":{
      "type":"string",
      "max":3072,
      "min":0
    },
    "AutoMLJobName":{
      "type":"string",
      "max":32,
      "min":1,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    },
    "AutoMLJobObjective":{
      "type":"structure",
      "members":{
        "Type":{"shape":"AutoMLJobObjectiveType"},
        "MetricName":{"shape":"MetricName"}
      }
    },
    "AutoMLJobObjectiveType":{
      "type":"string",
      "enum":[
        "Maximize",
        "Minimize"
      ]
    },
    "AutoMLJobSecondaryStatus":{
      "type":"string",
      "enum":[
        "Starting",
        "AnalyzingData",
        "FeatureEngineering",
        "ModelTuning",
        "MaxCandidatesReached",
        "TargetObjectiveReached",
        "Failed",
        "Stopped",
        "MaxAutoMLJobRuntimeReached",
        "Stopping"
      ]
    },
    "AutoMLJobStatus":{
      "type":"string",
      "enum":[
        "Completed",
        "InProgress",
        "Failed",
        "Stopped",
        "Stopping"
      ]
    },
    "AutoMLJobStoppingCondition":{
      "type":"structure",
      "members":{
        "MaxTrials":{"shape":"MaxTrials"},
        "MaxRuntimePerTrainingJobInSeconds":{"shape":"MaxRuntimePerTrainingJobInSeconds"},
        "TargetObjective":{"shape":"TargetObjective"},
        "MaxWaitTimeInSeconds":{"shape":"AutoMLMaxWaitTimeInSeconds"}
      }
    },
    "AutoMLJobSummaries":{
      "type":"list",
      "member":{"shape":"AutoMLJobSummary"}
    },
    "AutoMLJobSummary":{
      "type":"structure",
      "required":[
        "AutoMLJobName",
        "AutoMLJobArn",
        "AutoMLResourcePools",
        "AutoMLJobStatus",
        "AutoMLJobSecondaryStatus",
        "TrialStatusCounters",
        "ObjectiveStatusCounters",
        "JobCreationTime",
        "JobLastModifiedTime"
      ],
      "members":{
        "AutoMLJobName":{"shape":"AutoMLJobName"},
        "AutoMLJobArn":{"shape":"AutoMLJobArn"},
        "AutoMLResourcePools":{"shape":"AutoMLResourcePools"},
        "AutoMLJobStatus":{"shape":"AutoMLJobStatus"},
        "AutoMLJobSecondaryStatus":{"shape":"AutoMLJobSecondaryStatus"},
        "TrialStatusCounters":{"shape":"TrialStatusCounters"},
        "ObjectiveStatusCounters":{"shape":"ObjectiveStatusCounters"},
        "JobCreationTime":{"shape":"Timestamp"},
        "JobEndTime":{"shape":"Timestamp"},
        "JobLastModifiedTime":{"shape":"Timestamp"},
        "FailureReason":{"shape":"AutoMLFailureReason"}
      }
    },
    "AutoMLJobSummaryNotebookLocation":{"type":"string"},
    "AutoMLMaxResults":{
      "type":"integer",
      "max":100,
      "min":1
    },
    "AutoMLMaxWaitTimeInSeconds":{
      "type":"integer",
      "min":1
    },
    "AutoMLNameContains":{
      "type":"string",
      "max":63,
      "pattern":"[a-zA-Z0-9\\-]+"
    },
    "AutoMLOutputDataConfig":{
      "type":"structure",
      "required":["S3OutputPath"],
      "members":{
        "KmsKeyId":{"shape":"KmsKeyId"},
        "S3OutputPath":{"shape":"S3Uri"},
        "RemoveJobNameFromS3OutputPath":{
          "shape":"AutoMLRemoveJobNameFromS3OutputPath",
          "internalonly":true
        }
      }
    },
    "AutoMLRecordWrapper":{
      "type":"string",
      "enum":[
        "None",
        "RecordIO"
      ]
    },
    "AutoMLRemoveJobNameFromS3OutputPath":{"type":"boolean"},
    "AutoMLResourcePool":{
      "type":"structure",
      "required":[
        "InstanceType",
        "PoolSize"
      ],
      "members":{
        "InstanceType":{"shape":"AutoMLInstanceType"},
        "PoolSize":{"shape":"PoolSize"}
      }
    },
    "AutoMLResourcePools":{
      "type":"list",
      "member":{"shape":"AutoMLResourcePool"},
      "min":1
    },
    "AutoMLSecurityConfig":{
      "type":"structure",
      "members":{
        "EnableInterContainerTrafficEncryption":{"shape":"Boolean"},
        "EnableNetworkIsolation":{"shape":"Boolean"},
        "VpcConfig":{"shape":"VpcConfig"}
      }
    },
    "AutoMLSortBy":{
      "type":"string",
      "enum":[
        "Name",
        "CreationTime",
        "Status"
      ]
    },
    "AutoMLSortOrder":{
      "type":"string",
      "enum":[
        "Ascending",
        "Descending"
      ]
    },
    "AutoMLTrainingInputMode":{
      "type":"string",
      "enum":[
        "Pipe",
        "File"
      ]
    },
    "AutoMLTrialStep":{
      "type":"structure",
      "required":[
        "TrialStepType",
        "TrialStepArn"
      ],
      "members":{
        "TrialStepType":{"shape":"TrialStepType"},
        "TrialStepArn":{"shape":"TrialStepArn"}
      }
    },
    "AutoMLTrialSteps":{
      "type":"list",
      "member":{"shape":"AutoMLTrialStep"}
    },
    "AutoMLTrialSummaries":{
      "type":"list",
      "member":{"shape":"AutoMLTrialSummary"}
    },
    "AutoMLTrialSummary":{
      "type":"structure",
      "required":[
        "TrialIdentifier",
        "ObjectiveStatus",
        "TrialSteps",
        "TrialStatus",
        "TrialSecondaryStatus",
        "TrialCreationTime",
        "LastModifiedTime",
        "TrialDescription"
      ],
      "members":{
        "TrialIdentifier":{"shape":"TrialIdentifier"},
        "FinalAutoMLJobObjectiveMetric":{"shape":"FinalAutoMLJobObjectiveMetric"},
        "ObjectiveStatus":{"shape":"ObjectiveStatus"},
        "TrialSteps":{"shape":"AutoMLTrialSteps"},
        "TrialStatus":{"shape":"TrialStatus"},
        "TrialSecondaryStatus":{"shape":"TrialSecondaryStatus"},
        "TrialCreationTime":{"shape":"Timestamp"},
        "TrialEndTime":{"shape":"Timestamp"},
        "LastModifiedTime":{"shape":"Timestamp"},
        "FailureReason":{"shape":"AutoMLFailureReason"},
        "TrialDescription":{"shape":"TrialDescription"}
      }
    },
    "AwsManagedHumanLoopRequestSource":{
      "type":"string",
      "enum":[
        "AWS/Rekognition/Image/ContentModeration/V3",
        "AWS/Textract/DocumentAnalysis/KeyValueExtraction"
      ]
    },
    "BatchGetMetricsRequest":{
      "type":"structure",
      "required":["MetricQueries"],
      "members":{
        "MetricQueries":{"shape":"MetricQueryList"}
      }
    },
    "BatchGetMetricsResponse":{
      "type":"structure",
      "members":{
        "MetricQueryResults":{"shape":"MetricQueryResultList"}
      }
    },
    "BatchPutMetricsError":{
      "type":"structure",
      "required":[
        "Code",
        "Message",
        "MetricIndex"
      ],
      "members":{
        "Code":{"shape":"PutMetricsErrorCode"},
        "Message":{"shape":"String"},
        "MetricIndex":{"shape":"Integer"}
      }
    },
    "BatchPutMetricsErrorList":{
      "type":"list",
      "member":{"shape":"BatchPutMetricsError"},
      "max":100,
      "min":1
    },
    "BatchPutMetricsRequest":{
      "type":"structure",
      "required":[
        "ResourceArn",
        "MetricData"
      ],
      "members":{
        "ResourceArn":{"shape":"SageMakerResourceArn"},
        "MetricData":{"shape":"RawMetricDataList"}
      }
    },
    "BatchPutMetricsResponse":{
      "type":"structure",
      "members":{
        "Errors":{"shape":"BatchPutMetricsErrorList"}
      }
    },
    "BatchStrategy":{
      "type":"string",
      "enum":[
        "MultiRecord",
        "SingleRecord"
      ]
    },
    "BestEnsembleNotebook":{"type":"string"},
    "BestTrialNotebookLocation":{"type":"string"},
    "BillableTimeInSeconds":{
      "type":"integer",
      "min":1
    },
    "Boolean":{"type":"boolean"},
    "BooleanOperator":{
      "type":"string",
      "enum":[
        "And",
        "Or"
      ]
    },
    "Branch":{
      "type":"string",
      "max":1024,
      "min":1,
      "pattern":"[^ ~^:?*\\[]+"
    },
    "CaptureContentTypeHeader":{
      "type":"structure",
      "members":{
        "CsvContentTypes":{"shape":"CsvContentTypes"},
        "JsonContentTypes":{"shape":"JsonContentTypes"}
      }
    },
    "CaptureMode":{
      "type":"string",
      "enum":[
        "Input",
        "Output"
      ]
    },
    "CaptureOption":{
      "type":"structure",
      "required":["CaptureMode"],
      "members":{
        "CaptureMode":{"shape":"CaptureMode"}
      }
    },
    "CaptureOptionList":{
      "type":"list",
      "member":{"shape":"CaptureOption"},
      "max":2,
      "min":1
    },
    "CaptureStatus":{
      "type":"string",
      "enum":[
        "Started",
        "Stopped"
      ]
    },
    "CategoricalParameterRange":{
      "type":"structure",
      "required":[
        "Name",
        "Values"
      ],
      "members":{
        "Name":{"shape":"ParameterKey"},
        "Values":{"shape":"ParameterValues"}
      }
    },
    "CategoricalParameterRangeSpecification":{
      "type":"structure",
      "required":["Values"],
      "members":{
        "Values":{"shape":"ParameterValues"}
      }
    },
    "CategoricalParameterRanges":{
      "type":"list",
      "member":{"shape":"CategoricalParameterRange"},
      "max":20,
      "min":0
    },
    "Cents":{
      "type":"integer",
      "max":99,
      "min":0
    },
    "CertifyForMarketplace":{"type":"boolean"},
    "Channel":{
      "type":"structure",
      "required":[
        "ChannelName",
        "DataSource"
      ],
      "members":{
        "ChannelName":{
          "shape":"ChannelName",
          "documentation":"<p>The name of the channel. </p>"
        },
        "DataSource":{
          "shape":"DataSource",
          "documentation":"<p>The location of the channel data.</p>"
        },
        "ContentType":{
          "shape":"ContentType",
          "documentation":"<p>The MIME type of the data.</p>"
        },
        "CompressionType":{
          "shape":"CompressionType",
          "documentation":"<p>If training data is compressed, the compression type. The default value is <code>None</code>. <code>CompressionType</code> is used only in PIPE input mode. In FILE mode, leave this field unset or set it to None.</p>"
        },
        "RecordWrapperType":{
          "shape":"RecordWrapper",
          "documentation":"<p/> <p>Specify RecordIO as the value when input data is in raw format but the training algorithm requires the RecordIO format, in which caseAmazon SageMaker wraps each individual S3 object in a RecordIO record. If the input data is already in RecordIO format, you don't need to set this attribute. For more information, see <a href=\"https://mxnet.incubator.apache.org/how_to/recordio.html?highlight=im2rec\">Create a Dataset Using RecordIO</a>. </p> <p>In FILE mode, leave this field unset or set it to None.</p> <p/>"
        },
        "InputMode":{"shape":"TrainingInputMode"},
        "ShuffleConfig":{"shape":"ShuffleConfig"}
      },
      "documentation":"<p>A channel is a named input source that training algorithms can consume. </p>"
    },
    "ChannelName":{
      "type":"string",
      "max":64,
      "min":1,
      "pattern":"[A-Za-z0-9\\.\\-_]+"
    },
    "ChannelSpecification":{
      "type":"structure",
      "required":[
        "Name",
        "SupportedContentTypes",
        "SupportedInputModes"
      ],
      "members":{
        "Name":{"shape":"ChannelName"},
        "Description":{"shape":"EntityDescription"},
        "IsRequired":{"shape":"Boolean"},
        "SupportedContentTypes":{"shape":"ContentTypes"},
        "SupportedCompressionTypes":{"shape":"CompressionTypes"},
        "SupportedInputModes":{"shape":"InputModes"}
      }
    },
    "ChannelSpecifications":{
      "type":"list",
      "member":{"shape":"ChannelSpecification"},
      "max":8,
      "min":1
    },
    "CheckpointConfig":{
      "type":"structure",
      "required":["S3Uri"],
      "members":{
        "S3Uri":{"shape":"S3Uri"},
        "LocalPath":{"shape":"DirectoryPath"}
      }
    },
    "Cidr":{
      "type":"string",
      "max":64,
      "min":4,
      "pattern":"(^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(3[0-2]|[1-2][0-9]|[0-9]))$)|(^s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:)))(%.+)?s*(\\/(12[0-8]|1[0-1][0-9]|[1-9][0-9]|[0-9]))$)"
    },
    "Cidrs":{
      "type":"list",
      "member":{"shape":"Cidr"}
    },
    "ClientToken":{"type":"string"},
    "CodeRepositoryArn":{
      "type":"string",
      "max":2048,
      "min":1,
      "pattern":"arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:code-repository/.*"
    },
    "CodeRepositoryContains":{
      "type":"string",
      "max":1024,
      "pattern":"[a-zA-Z0-9-]+"
    },
    "CodeRepositoryNameContains":{
      "type":"string",
      "max":63,
      "pattern":"[a-zA-Z0-9-]+"
    },
    "CodeRepositoryNameOrUrl":{
      "type":"string",
      "max":1024,
      "min":1,
      "pattern":"^https://([^/]+)/?(.*)$|^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    },
    "CodeRepositorySortBy":{
      "type":"string",
      "enum":[
        "Name",
        "CreationTime",
        "LastModifiedTime"
      ]
    },
    "CodeRepositorySortOrder":{
      "type":"string",
      "enum":[
        "Ascending",
        "Descending"
      ]
    },
    "CodeRepositorySummary":{
      "type":"structure",
      "required":[
        "CodeRepositoryName",
        "CodeRepositoryArn",
        "CreationTime",
        "LastModifiedTime"
      ],
      "members":{
        "CodeRepositoryName":{"shape":"EntityName"},
        "CodeRepositoryArn":{"shape":"CodeRepositoryArn"},
        "CreationTime":{"shape":"CreationTime"},
        "LastModifiedTime":{"shape":"LastModifiedTime"},
        "GitConfig":{"shape":"GitConfig"}
      }
    },
    "CodeRepositorySummaryList":{
      "type":"list",
      "member":{"shape":"CodeRepositorySummary"}
    },
    "CognitoClientId":{
      "type":"string",
      "max":128,
      "min":1,
      "pattern":"[\\w+]+"
    },
    "CognitoMemberDefinition":{
      "type":"structure",
      "required":[
        "UserPool",
        "UserGroup",
        "ClientId"
      ],
      "members":{
        "UserPool":{"shape":"CognitoUserPool"},
        "UserGroup":{"shape":"CognitoUserGroup"},
        "ClientId":{"shape":"CognitoClientId"}
      }
    },
    "CognitoUserGroup":{
      "type":"string",
      "max":128,
      "min":1,
      "pattern":"[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+"
    },
    "CognitoUserPool":{
      "type":"string",
      "max":55,
      "min":1,
      "pattern":"[\\w-]+_[0-9a-zA-Z]+"
    },
    "CompilationJobArn":{
      "type":"string",
      "max":256,
      "pattern":"arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:compilation-job/.*"
    },
    "CompilationJobStatus":{
      "type":"string",
      "enum":[
        "INPROGRESS",
        "COMPLETED",
        "FAILED",
        "STARTING",
        "STOPPING",
        "STOPPED"
      ]
    },
    "CompilationJobSummaries":{
      "type":"list",
      "member":{"shape":"CompilationJobSummary"}
    },
    "CompilationJobSummary":{
      "type":"structure",
      "required":[
        "CompilationJobName",
        "CompilationJobArn",
        "CreationTime",
        "CompilationTargetDevice",
        "CompilationJobStatus"
      ],
      "members":{
        "CompilationJobName":{"shape":"EntityName"},
        "CompilationJobArn":{"shape":"CompilationJobArn"},
        "CreationTime":{"shape":"CreationTime"},
        "CompilationStartTime":{"shape":"Timestamp"},
        "CompilationEndTime":{"shape":"Timestamp"},
        "CompilationTargetDevice":{"shape":"TargetDevice"},
        "LastModifiedTime":{"shape":"LastModifiedTime"},
        "CompilationJobStatus":{"shape":"CompilationJobStatus"}
      }
    },
    "CompletedObjects":{
      "type":"long",
      "min":0
    },
    "ComponentJobArn":{"type":"string"},
    "ComponentJobDescription":{"type":"string"},
    "ComponentJobName":{"type":"string"},
    "ComponentJobStatus":{
      "type":"string",
      "enum":[
        "Completed",
        "Pending",
        "InProgress",
        "Failed",
        "Stopped"
      ]
    },
    "ComponentJobSummaries":{
      "type":"list",
      "member":{"shape":"ComponentJobSummary"}
    },
    "ComponentJobSummary":{
      "type":"structure",
      "required":[
        "AutoMLJobName",
        "AutoMLJobArn",
        "LastModifiedTime",
        "Status",
        "CreationTime",
        "JobType",
        "JobName",
        "JobArn",
        "Description"
      ],
      "members":{
        "AutoMLJobName":{"shape":"AutoMLJobName"},
        "AutoMLJobArn":{"shape":"AutoMLJobArn"},
        "LastModifiedTime":{"shape":"Timestamp"},
        "Status":{"shape":"ComponentJobStatus"},
        "CreationTime":{"shape":"Timestamp"},
        "JobType":{"shape":"ComponentJobType"},
        "JobName":{"shape":"ComponentJobName"},
        "JobArn":{"shape":"ComponentJobArn"},
        "EndTime":{"shape":"Timestamp"},
        "FailureReason":{"shape":"AutoMLFailureReason"},
        "Description":{"shape":"ComponentJobDescription"}
      }
    },
    "ComponentJobType":{
      "type":"string",
      "enum":[
        "AWS::Sagemaker::Training",
        "AWS::SageMaker::HyperParameterTuning",
        "AWS::SageMaker::Transform"
      ]
    },
    "CompressionType":{
      "type":"string",
      "enum":[
        "None",
        "Gzip"
      ]
    },
    "CompressionTypes":{
      "type":"list",
      "member":{"shape":"CompressionType"}
    },
    "ConfigKey":{
      "type":"string",
      "max":256,
      "min":1
    },
    "ConfigValue":{
      "type":"string",
      "max":256
    },
    "ContainerArgument":{
      "type":"string",
      "max":256,
      "pattern":".*"
    },
    "ContainerArguments":{
      "type":"list",
      "member":{"shape":"ContainerArgument"},
      "max":100,
      "min":1
    },
    "ContainerDefinition":{
      "type":"structure",
      "members":{
        "ContainerHostname":{
          "shape":"ContainerHostname",
          "documentation":"<p>The DNS host name for the container after Amazon SageMaker deploys it.</p>"
        },
        "Image":{
          "shape":"Image",
          "documentation":"<p>The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored. If you are using your own custom algorithm instead of an algorithm provided by Amazon SageMaker, the inference code must meet Amazon SageMaker requirements. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html\">Using Your Own Algorithms with Amazon SageMaker</a> </p>"
        },
        "Mode":{
          "shape":"ContainerMode",
          "internalonly":true
        },
        "ModelDataUrl":{
          "shape":"Url",
          "documentation":"<p>The S3 path where the model artifacts, which result from model training, are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix). </p>"
        },
        "Environment":{
          "shape":"EnvironmentMap",
          "documentation":"<p>The environment variables to set in the Docker container. Each key and value in the <code>Environment</code> string to string map can have length of up to 1024. We support up to 16 entries in the map. </p>"
        },
        "ModelPackageName":{"shape":"ArnOrName"}
      },
      "documentation":"<p>Describes the container, as part of model definition.</p>"
    },
    "ContainerDefinitionList":{
      "type":"list",
      "member":{"shape":"ContainerDefinition"},
      "max":5
    },
    "ContainerEntrypoint":{
      "type":"list",
      "member":{"shape":"ContainerEntrypointString"},
      "max":100,
      "min":1
    },
    "ContainerEntrypointString":{
      "type":"string",
      "max":256,
      "pattern":".*"
    },
    "ContainerHostname":{
      "type":"string",
      "max":63,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    },
    "ContainerMode":{
      "type":"string",
      "enum":[
        "SingleModel",
        "MultiModel"
      ]
    },
    "Content":{"type":"string"},
    "ContentClassifier":{
      "type":"string",
      "enum":[
        "FreeOfPersonallyIdentifiableInformation",
        "FreeOfAdultContent"
      ]
    },
    "ContentClassifiers":{
      "type":"list",
      "member":{"shape":"ContentClassifier"},
      "max":256
    },
    "ContentType":{
      "type":"string",
      "max":256,
      "pattern":".*"
    },
    "ContentTypes":{
      "type":"list",
      "member":{"shape":"ContentType"}
    },
    "ContinuousParameterRange":{
      "type":"structure",
      "required":[
        "Name",
        "MinValue",
        "MaxValue"
      ],
      "members":{
        "Name":{"shape":"ParameterKey"},
        "MinValue":{"shape":"ParameterValue"},
        "MaxValue":{"shape":"ParameterValue"},
        "ScalingType":{"shape":"HyperParameterScalingType"}
      }
    },
    "ContinuousParameterRangeSpecification":{
      "type":"structure",
      "required":[
        "MinValue",
        "MaxValue"
      ],
      "members":{
        "MinValue":{"shape":"ParameterValue"},
        "MaxValue":{"shape":"ParameterValue"}
      }
    },
    "ContinuousParameterRanges":{
      "type":"list",
      "member":{"shape":"ContinuousParameterRange"},
      "max":20,
      "min":0
    },
    "CreateAlgorithmInput":{
      "type":"structure",
      "required":[
        "AlgorithmName",
        "TrainingSpecification"
      ],
      "members":{
        "AlgorithmName":{"shape":"EntityName"},
        "AlgorithmDescription":{"shape":"EntityDescription"},
        "TrainingSpecification":{"shape":"TrainingSpecification"},
        "InferenceSpecification":{"shape":"InferenceSpecification"},
        "ValidationSpecification":{"shape":"AlgorithmValidationSpecification"},
        "CertifyForMarketplace":{"shape":"CertifyForMarketplace"},
        "RequireImageScan":{
          "shape":"RequireImageScan",
          "internalonly":true
        }
      }
    },
    "CreateAlgorithmOutput":{
      "type":"structure",
      "required":["AlgorithmArn"],
      "members":{
        "AlgorithmArn":{"shape":"AlgorithmArn"}
      }
    },
    "CreateAnalyticsJobInternalRequest":{
      "type":"structure",
      "required":[
        "AnalyticsJobName",
        "AnalyticsResources",
        "StoppingCondition",
        "AppSpecification",
        "RoleArn",
        "CustomerDetails"
      ],
      "members":{
        "AnalyticsInputs":{"shape":"AnalyticsInputs"},
        "AnalyticsOutputs":{"shape":"AnalyticsOutputs"},
        "AnalyticsJobName":{"shape":"AnalyticsJobName"},
        "AnalyticsResources":{"shape":"AnalyticsResources"},
        "StoppingCondition":{"shape":"AnalyticsStoppingCondition"},
        "AppSpecification":{"shape":"AppSpecification"},
        "Environment":{"shape":"AnalyticsEnvironmentMap"},
        "NetworkConfig":{"shape":"NetworkConfig"},
        "RoleArn":{"shape":"RoleArn"},
        "Tags":{"shape":"TagList"},
        "CustomerDetails":{"shape":"CustomerDetails"},
        "UpstreamAnalyticsOutputs":{"shape":"UpstreamAnalyticsOutputs"},
        "MonitoringScheduleArn":{"shape":"MonitoringScheduleArn"},
        "AutoMLJobArn":{"shape":"AutoMLJobArn"},
        "TrainingJobArn":{"shape":"TrainingJobArn"},
        "StateMachineArnProviderLambdaArn":{"shape":"AnalyticsStateMachineArnProviderLambdaArn"},
        "FasCredentials":{"shape":"FasCredentials"},
        "PlatformCredentialToken":{"shape":"ProxyToken"},
        "CustomerCredentialToken":{"shape":"ProxyToken"},
        "CredentialProviderFunction":{"shape":"CredentialProviderLambdaFunctionArn"},
        "CredentialProviderEncryptionKey":{"shape":"KmsKeyId"},
        "ExperimentConfig":{"shape":"ExperimentConfig"}
      }
    },
    "CreateAnalyticsJobInternalResponse":{
      "type":"structure",
      "members":{
        "AnalyticsJobResponse":{"shape":"CreateAnalyticsJobResponse"}
      }
    },
    "CreateAnalyticsJobRequest":{
      "type":"structure",
      "required":[
        "AnalyticsJobName",
        "AnalyticsResources",
        "StoppingCondition",
        "AppSpecification",
        "RoleArn"
      ],
      "members":{
        "AnalyticsInputs":{"shape":"AnalyticsInputs"},
        "AnalyticsOutputs":{"shape":"AnalyticsOutputs"},
        "AnalyticsJobName":{"shape":"AnalyticsJobName"},
        "AnalyticsResources":{"shape":"AnalyticsResources"},
        "StoppingCondition":{"shape":"AnalyticsStoppingCondition"},
        "AppSpecification":{"shape":"AppSpecification"},
        "Environment":{"shape":"AnalyticsEnvironmentMap"},
        "NetworkConfig":{"shape":"NetworkConfig"},
        "RoleArn":{"shape":"RoleArn"},
        "Tags":{"shape":"TagList"},
        "ExperimentConfig":{
          "shape":"ExperimentConfig",
          "internalonly":true
        },
        "UpstreamAnalyticsOutputs":{
          "shape":"UpstreamAnalyticsOutputs",
          "internalonly":true
        },
        "PlatformCredentialToken":{
          "shape":"ProxyToken",
          "internalonly":true
        },
        "CustomerCredentialToken":{
          "shape":"ProxyToken",
          "internalonly":true
        },
        "CredentialProviderFunction":{
          "shape":"CredentialProviderLambdaFunctionArn",
          "internalonly":true
        },
        "CredentialProviderEncryptionKey":{
          "shape":"KmsKeyId",
          "internalonly":true
        }
      }
    },
    "CreateAnalyticsJobResponse":{
      "type":"structure",
      "required":["AnalyticsJobArn"],
      "members":{
        "AnalyticsJobArn":{"shape":"AnalyticsJobArn"}
      }
    },
    "CreateAppRequest":{
      "type":"structure",
      "required":[
        "AppType",
        "AppName",
        "ResourceSpec"
      ],
      "members":{
        "DomainId":{"shape":"ResourceId"},
        "IdentityId":{"shape":"IdentityId"},
        "AppType":{"shape":"AppType"},
        "AppName":{"shape":"AppName"},
        "ResourceSpec":{"shape":"ResourceSpec"}
      }
    },
    "CreateAppResponse":{
      "type":"structure",
      "members":{
        "AppArn":{"shape":"String256"}
      }
    },
    "CreateAutoMLJobRequest":{
      "type":"structure",
      "required":[
        "AutoMLJobName",
        "InputDataConfig",
        "OutputDataConfig",
        "JobConfig",
        "RoleArn"
      ],
      "members":{
        "AutoMLJobName":{"shape":"AutoMLJobName"},
        "InputDataConfig":{"shape":"AutoMLInputDataConfig"},
        "OutputDataConfig":{"shape":"AutoMLOutputDataConfig"},
        "ProblemType":{"shape":"ProblemType"},
        "JobObjective":{"shape":"AutoMLJobObjective"},
        "JobConfig":{"shape":"AutoMLJobConfig"},
        "RoleArn":{"shape":"RoleArn"},
        "DryRun":{"shape":"DryRun"},
        "Tags":{"shape":"TagList"},
        "Description":{"shape":"AutoMLJobDescription"},
        "ImageUrlOverrides":{
          "shape":"ImageUrlOverrides",
          "internalonly":true
        }
      }
    },
    "CreateAutoMLJobResponse":{
      "type":"structure",
      "required":["AutoMLJobArn"],
      "members":{
        "AutoMLJobArn":{"shape":"AutoMLJobArn"}
      }
    },
    "CreateCodeRepositoryInput":{
      "type":"structure",
      "required":[
        "CodeRepositoryName",
        "GitConfig"
      ],
      "members":{
        "CodeRepositoryName":{"shape":"EntityName"},
        "GitConfig":{"shape":"GitConfig"}
      }
    },
    "CreateCodeRepositoryOutput":{
      "type":"structure",
      "required":["CodeRepositoryArn"],
      "members":{
        "CodeRepositoryArn":{"shape":"CodeRepositoryArn"}
      }
    },
    "CreateCompilationJobRequest":{
      "type":"structure",
      "required":[
        "CompilationJobName",
        "RoleArn",
        "InputConfig",
        "OutputConfig",
        "StoppingCondition"
      ],
      "members":{
        "CompilationJobName":{"shape":"EntityName"},
        "RoleArn":{"shape":"RoleArn"},
        "InputConfig":{"shape":"InputConfig"},
        "OutputConfig":{"shape":"OutputConfig"},
        "StoppingCondition":{"shape":"StoppingCondition"},
        "Tags":{
          "shape":"TagList",
          "internalonly":true
        }
      }
    },
    "CreateCompilationJobResponse":{
      "type":"structure",
      "required":["CompilationJobArn"],
      "members":{
        "CompilationJobArn":{"shape":"CompilationJobArn"}
      }
    },
    "CreateCrossAccountTrainingJobRequest":{
      "type":"structure",
      "required":[
        "TrainingJobName",
        "AlgorithmSpecification",
        "CrossAccountRoleArn",
        "InputDataConfig",
        "OutputDataConfig",
        "ResourceConfig",
        "StoppingCondition"
      ],
      "members":{
        "TrainingJobName":{"shape":"TrainingJobName"},
        "HyperParameters":{"shape":"HyperParameters"},
        "AlgorithmSpecification":{"shape":"AlgorithmSpecification"},
        "CrossAccountRoleArn":{"shape":"RoleArn"},
        "InputDataConfig":{"shape":"InputDataConfig"},
        "OutputDataConfig":{"shape":"OutputDataConfig"},
        "ResourceConfig":{"shape":"ResourceConfig"},
        "VpcConfig":{"shape":"VpcConfig"},
        "StoppingCondition":{"shape":"StoppingCondition"},
        "Tags":{"shape":"TagList"}
      }
    },
    "CreateCrossAccountTrainingJobResponse":{
      "type":"structure",
      "required":["TrainingJobArn"],
      "members":{
        "TrainingJobArn":{"shape":"TrainingJobArn"}
      }
    },
    "CreateDomainRequest":{
      "type":"structure",
      "required":[
        "DefaultSettings",
        "SubnetIds",
        "VpcId"
      ],
      "members":{
        "DefaultSettings":{"shape":"UserSettings"},
        "DomainPolicy":{"shape":"String2048"},
        "KmsKeyId":{"shape":"KmsKeyId"},
        "SubnetIds":{"shape":"Subnets"},
        "VpcId":{"shape":"VpcId"}
      }
    },
    "CreateDomainResponse":{
      "type":"structure",
      "members":{
        "DomainArn":{"shape":"String256"},
        "Url":{"shape":"String1024"}
      }
    },
    "CreateEndpointConfigInput":{
      "type":"structure",
      "required":[
        "EndpointConfigName",
        "ProductionVariants"
      ],
      "members":{
        "EndpointConfigName":{
          "shape":"EndpointConfigName",
          "documentation":"<p>The name of the endpoint configuration. You specify this name in a <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpoint.html\">CreateEndpoint</a> request. </p>"
        },
        "ProductionVariants":{
          "shape":"ProductionVariantList",
          "documentation":"<p>An array of <code>ProductionVariant</code> objects, one for each model that you want to host at this endpoint.</p>"
        },
        "DataCaptureConfig":{
          "shape":"DataCaptureConfig",
          "internalonly":true
        },
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>An array of key-value pairs. For more information, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what\">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>. </p>"
        },
        "KmsKeyId":{"shape":"KmsKeyId"}
      }
    },
    "CreateEndpointConfigOutput":{
      "type":"structure",
      "required":["EndpointConfigArn"],
      "members":{
        "EndpointConfigArn":{
          "shape":"EndpointConfigArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the endpoint configuration. </p>"
        }
      }
    },
    "CreateEndpointInput":{
      "type":"structure",
      "required":[
        "EndpointName",
        "EndpointConfigName"
      ],
      "members":{
        "EndpointName":{
          "shape":"EndpointName",
          "documentation":"<p>The name of the endpoint. The name must be unique within an AWS Region in your AWS account.</p>"
        },
        "EndpointConfigName":{
          "shape":"EndpointConfigName",
          "documentation":"<p>The name of an endpoint configuration. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpointConfig.html\">CreateEndpointConfig</a>. </p>"
        },
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>An array of key-value pairs. For more information, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what\">Using Cost Allocation Tags</a>in the <i>AWS Billing and Cost Management User Guide</i>. </p>"
        }
      }
    },
    "CreateEndpointOutput":{
      "type":"structure",
      "required":["EndpointArn"],
      "members":{
        "EndpointArn":{
          "shape":"EndpointArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the endpoint.</p>"
        }
      }
    },
    "CreateEnvironmentRequest":{
      "type":"structure",
      "required":["EnvironmentName"],
      "members":{
        "EnvironmentName":{"shape":"EnvironmentName"},
        "Repository":{"shape":"Repository"},
        "RoleArn":{"shape":"RoleArn"},
        "EnableNetworkIsolation":{"shape":"EnableNetworkIsolation"},
        "VpcConfig":{"shape":"VpcConfig"},
        "Tags":{"shape":"TagList"},
        "ExpirationInDays":{"shape":"ExpirationInDays"},
        "KeepS3ArtifactsOnDelete":{"shape":"KeepS3ArtifactsOnDelete"},
        "Metadata":{"shape":"Metadata"},
        "S3ArtifactPath":{"shape":"S3ArtifactPath"}
      }
    },
    "CreateEnvironmentResponse":{
      "type":"structure",
      "required":["EnvironmentArn"],
      "members":{
        "EnvironmentArn":{"shape":"EnvironmentArn"}
      }
    },
    "CreateEnvironmentVersionRequest":{
      "type":"structure",
      "required":[
        "EnvironmentName",
        "EnvironmentDefinitionLayers",
        "ClientToken"
      ],
      "members":{
        "EnvironmentName":{"shape":"EnvironmentName"},
        "EnvironmentVersionNames":{"shape":"EnvironmentVersionNames"},
        "EnvironmentDefinitionLayers":{"shape":"EnvironmentDefinitionLayers"},
        "OverwriteLastUnnamedVersion":{"shape":"OverwriteLastUnnamedVersion"},
        "Metadata":{"shape":"Metadata"},
        "ClientToken":{"shape":"ClientToken"}
      }
    },
    "CreateEnvironmentVersionResponse":{
      "type":"structure",
      "members":{
        "EnvironmentVersionArn":{"shape":"EnvironmentVersionArn"},
        "EnvironmentVersionNumber":{"shape":"EnvironmentVersionNumber"}
      }
    },
    "CreateExperimentRequest":{
      "type":"structure",
      "required":["ExperimentName"],
      "members":{
        "ExperimentName":{"shape":"ExperimentEntityName"},
        "Description":{"shape":"ExperimentDescription"},
        "Source":{
          "shape":"ExperimentSource",
          "internalonly":true
        },
        "Tags":{"shape":"TagList"},
        "DelegatedAccountId":{
          "shape":"String",
          "internalonly":true
        }
      }
    },
    "CreateExperimentResponse":{
      "type":"structure",
      "members":{
        "ExperimentArn":{"shape":"ExperimentArn"}
      }
    },
    "CreateFlowDefinitionRequest":{
      "type":"structure",
      "required":[
        "FlowDefinitionName",
        "HumanLoopConfig",
        "OutputConfig",
        "RoleArn"
      ],
      "members":{
        "FlowDefinitionName":{"shape":"FlowDefinitionName"},
        "HumanLoopActivationConfig":{"shape":"HumanLoopActivationConfig"},
        "HumanLoopConfig":{"shape":"HumanLoopConfig"},
        "OutputConfig":{"shape":"FlowDefinitionOutputConfig"},
        "RoleArn":{"shape":"RoleArn"},
        "Tags":{"shape":"TagList"}
      }
    },
    "CreateFlowDefinitionResponse":{
      "type":"structure",
      "required":["FlowDefinitionArn"],
      "members":{
        "FlowDefinitionArn":{"shape":"FlowDefinitionArn"}
      }
    },
    "CreateHumanTaskUiRequest":{
      "type":"structure",
      "required":[
        "HumanTaskUiName",
        "UiTemplate"
      ],
      "members":{
        "HumanTaskUiName":{"shape":"HumanTaskUiName"},
        "UiTemplate":{"shape":"UiTemplate"},
        "Tags":{"shape":"TagList"}
      }
    },
    "CreateHumanTaskUiResponse":{
      "type":"structure",
      "required":["HumanTaskUiArn"],
      "members":{
        "HumanTaskUiArn":{"shape":"HumanTaskUiArn"}
      }
    },
    "CreateHyperParameterTuningJobInternalRequest":{
      "type":"structure",
      "required":[
        "HyperParameterTuningJobName",
        "HyperParameterTuningJobConfig",
        "CustomerDetails"
      ],
      "members":{
        "HyperParameterTuningJobName":{"shape":"HyperParameterTuningJobName"},
        "HyperParameterTuningJobConfig":{"shape":"HyperParameterTuningJobConfig"},
        "TrainingJobDefinition":{"shape":"HyperParameterTrainingJobDefinition"},
        "TrainingJobDefinitions":{"shape":"HyperParameterTrainingJobDefinitions"},
        "WarmStartConfig":{"shape":"HyperParameterTuningJobWarmStartConfig"},
        "Tags":{"shape":"TagList"},
        "CustomerDetails":{"shape":"CustomerDetails"},
        "AutoMLJobArn":{"shape":"AutoMLJobArn"}
      }
    },
    "CreateHyperParameterTuningJobInternalResponse":{
      "type":"structure",
      "required":["HyperParameterTuningJobArn"],
      "members":{
        "HyperParameterTuningJobArn":{"shape":"HyperParameterTuningJobArn"}
      }
    },
    "CreateHyperParameterTuningJobRequest":{
      "type":"structure",
      "required":[
        "HyperParameterTuningJobName",
        "HyperParameterTuningJobConfig"
      ],
      "members":{
        "HyperParameterTuningJobName":{"shape":"HyperParameterTuningJobName"},
        "HyperParameterTuningJobConfig":{"shape":"HyperParameterTuningJobConfig"},
        "TrainingJobDefinition":{"shape":"HyperParameterTrainingJobDefinition"},
        "TrainingJobDefinitions":{
          "shape":"HyperParameterTrainingJobDefinitions",
          "internalonly":true
        },
        "WarmStartConfig":{"shape":"HyperParameterTuningJobWarmStartConfig"},
        "Tags":{"shape":"TagList"}
      }
    },
    "CreateHyperParameterTuningJobResponse":{
      "type":"structure",
      "required":["HyperParameterTuningJobArn"],
      "members":{
        "HyperParameterTuningJobArn":{"shape":"HyperParameterTuningJobArn"}
      }
    },
    "CreateLabelingJobRequest":{
      "type":"structure",
      "required":[
        "LabelingJobName",
        "LabelAttributeName",
        "InputConfig",
        "OutputConfig",
        "RoleArn",
        "HumanTaskConfig"
      ],
      "members":{
        "LabelingJobName":{"shape":"LabelingJobName"},
        "LabelAttributeName":{"shape":"LabelAttributeName"},
        "InputConfig":{"shape":"LabelingJobInputConfig"},
        "OutputConfig":{"shape":"LabelingJobOutputConfig"},
        "RoleArn":{"shape":"RoleArn"},
        "LabelCategoryConfigS3Uri":{"shape":"S3Uri"},
        "StoppingConditions":{"shape":"LabelingJobStoppingConditions"},
        "LabelingJobAlgorithmsConfig":{"shape":"LabelingJobAlgorithmsConfig"},
        "HumanTaskConfig":{"shape":"HumanTaskConfig"},
        "Tags":{"shape":"TagList"}
      }
    },
    "CreateLabelingJobResponse":{
      "type":"structure",
      "required":["LabelingJobArn"],
      "members":{
        "LabelingJobArn":{"shape":"LabelingJobArn"}
      }
    },
    "CreateModelInput":{
      "type":"structure",
      "required":[
        "ModelName",
        "ExecutionRoleArn"
      ],
      "members":{
        "ModelName":{
          "shape":"ModelName",
          "documentation":"<p>The name of the new model.</p>"
        },
        "PrimaryContainer":{
          "shape":"ContainerDefinition",
          "documentation":"<p>The location of the primary docker image containing inference code, associated artifacts, and custom environment map that the inference code uses when the model is deployed into production. </p>"
        },
        "Containers":{"shape":"ContainerDefinitionList"},
        "ExecutionRoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the IAM role that Amazon SageMaker can assume to access model artifacts and docker image for deployment on ML compute instances. Deploying on ML compute instances is part of model hosting. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html\">Amazon SageMaker Roles</a>. </p>"
        },
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>An array of key-value pairs. For more information, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what\">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>. </p>"
        },
        "VpcConfig":{"shape":"VpcConfig"},
        "EnableNetworkIsolation":{"shape":"Boolean"}
      }
    },
    "CreateModelInternalInput":{
      "type":"structure",
      "required":["ModelInput"],
      "members":{
        "ModelInput":{"shape":"CreateModelInput"},
        "AccountId":{"shape":"AccountId"}
      }
    },
    "CreateModelInternalOutput":{
      "type":"structure",
      "members":{
        "ModelOutput":{"shape":"CreateModelOutput"}
      }
    },
    "CreateModelOutput":{
      "type":"structure",
      "required":["ModelArn"],
      "members":{
        "ModelArn":{
          "shape":"ModelArn",
          "documentation":"<p>The ARN of the model created in Amazon SageMaker.</p>"
        }
      }
    },
    "CreateModelPackageInput":{
      "type":"structure",
      "required":["ModelPackageName"],
      "members":{
        "ModelPackageName":{"shape":"EntityName"},
        "ModelPackageDescription":{"shape":"EntityDescription"},
        "InferenceSpecification":{"shape":"InferenceSpecification"},
        "ValidationSpecification":{"shape":"ModelPackageValidationSpecification"},
        "SourceAlgorithmSpecification":{"shape":"SourceAlgorithmSpecification"},
        "CertifyForMarketplace":{"shape":"CertifyForMarketplace"},
        "RequireImageScan":{
          "shape":"RequireImageScan",
          "internalonly":true
        }
      }
    },
    "CreateModelPackageOutput":{
      "type":"structure",
      "required":["ModelPackageArn"],
      "members":{
        "ModelPackageArn":{"shape":"ModelPackageArn"}
      }
    },
    "CreateMonitoringScheduleRequest":{
      "type":"structure",
      "required":[
        "MonitoringScheduleName",
        "MonitoringScheduleConfig"
      ],
      "members":{
        "MonitoringScheduleName":{"shape":"MonitoringScheduleName"},
        "MonitoringScheduleConfig":{"shape":"MonitoringScheduleConfig"}
      }
    },
    "CreateMonitoringScheduleResponse":{
      "type":"structure",
      "required":["MonitoringScheduleArn"],
      "members":{
        "MonitoringScheduleArn":{"shape":"MonitoringScheduleArn"}
      }
    },
    "CreateNotebookInstanceInput":{
      "type":"structure",
      "required":[
        "NotebookInstanceName",
        "InstanceType",
        "RoleArn"
      ],
      "members":{
        "NotebookInstanceName":{
          "shape":"NotebookInstanceName",
          "documentation":"<p>The name of the new notebook instance.</p>"
        },
        "InstanceType":{
          "shape":"InstanceType",
          "documentation":"<p>The type of ML compute instance to launch for the notebook instance.</p>"
        },
        "SubnetId":{
          "shape":"SubnetId",
          "documentation":"<p>The ID of the subnet in a VPC to which you would like to have a connectivity from your ML compute instance. </p>"
        },
        "SecurityGroupIds":{
          "shape":"SecurityGroupIds",
          "documentation":"<p>The VPC security group IDs, in the form sg-xxxxxxxx. The security groups must be for the same VPC as specified in the subnet. </p>"
        },
        "RoleArn":{
          "shape":"RoleArn",
          "documentation":"<p> When you send any requests to AWS resources from the notebook instance, Amazon SageMaker assumes this role to perform tasks on your behalf. You must grant this role necessary permissions so Amazon SageMaker can perform these tasks. The policy must allow the Amazon SageMaker service principal (sagemaker.amazonaws.com) permissions to assume this role. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html\">Amazon SageMaker Roles</a>. </p>"
        },
        "KmsKeyId":{
          "shape":"KmsKeyId",
          "documentation":"<p> If you provide a AWS KMS key ID, Amazon SageMaker uses it to encrypt data at rest on the ML storage volume that is attached to your notebook instance. </p>"
        },
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>A list of tags to associate with the notebook instance. You can add tags later by using the <code>CreateTags</code> API.</p>"
        },
        "LifecycleConfigName":{"shape":"NotebookInstanceLifecycleConfigName"},
        "DirectInternetAccess":{"shape":"DirectInternetAccess"},
        "VolumeSizeInGB":{"shape":"NotebookInstanceVolumeSizeInGB"},
        "AcceleratorTypes":{"shape":"NotebookInstanceAcceleratorTypes"},
        "DefaultCodeRepository":{"shape":"CodeRepositoryNameOrUrl"},
        "AdditionalCodeRepositories":{"shape":"AdditionalCodeRepositoryNamesOrUrls"},
        "RootAccess":{"shape":"RootAccess"}
      }
    },
    "CreateNotebookInstanceLifecycleConfigInput":{
      "type":"structure",
      "required":["NotebookInstanceLifecycleConfigName"],
      "members":{
        "NotebookInstanceLifecycleConfigName":{"shape":"NotebookInstanceLifecycleConfigName"},
        "OnCreate":{"shape":"NotebookInstanceLifecycleConfigList"},
        "OnStart":{"shape":"NotebookInstanceLifecycleConfigList"}
      }
    },
    "CreateNotebookInstanceLifecycleConfigOutput":{
      "type":"structure",
      "members":{
        "NotebookInstanceLifecycleConfigArn":{"shape":"NotebookInstanceLifecycleConfigArn"}
      }
    },
    "CreateNotebookInstanceOutput":{
      "type":"structure",
      "members":{
        "NotebookInstanceArn":{
          "shape":"NotebookInstanceArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the notebook instance. </p>"
        }
      }
    },
    "CreatePresignedNotebookInstanceUrlInput":{
      "type":"structure",
      "required":["NotebookInstanceName"],
      "members":{
        "NotebookInstanceName":{
          "shape":"NotebookInstanceName",
          "documentation":"<p>The name of the notebook instance.</p>"
        },
        "SessionExpirationDurationInSeconds":{
          "shape":"SessionExpirationDurationInSeconds",
          "documentation":"<p>The duration of the session, in seconds. The default is 12 hours.</p>"
        }
      }
    },
    "CreatePresignedNotebookInstanceUrlOutput":{
      "type":"structure",
      "members":{
        "AuthorizedUrl":{
          "shape":"NotebookInstanceUrl",
          "documentation":"<p>A JSON object that contains the URL string. </p>"
        }
      }
    },
    "CreateTrainingJobInternalRequest":{
      "type":"structure",
      "required":[
        "TrainingJobName",
        "AlgorithmSpecification",
        "RoleArn",
        "OutputDataConfig",
        "ResourceConfig",
        "StoppingCondition"
      ],
      "members":{
        "TrainingJobName":{"shape":"TrainingJobName"},
        "HyperParameters":{"shape":"HyperParameters"},
        "AlgorithmSpecification":{"shape":"AlgorithmSpecification"},
        "RoleArn":{"shape":"RoleArn"},
        "ChainedCustomerRoleArn":{"shape":"RoleArn"},
        "InputDataConfig":{"shape":"InputDataConfig"},
        "OutputDataConfig":{"shape":"OutputDataConfig"},
        "ResourceConfig":{"shape":"ResourceConfig"},
        "VpcConfig":{"shape":"VpcConfig"},
        "StoppingCondition":{"shape":"StoppingCondition"},
        "Tags":{"shape":"TagList"},
        "EnableNetworkIsolation":{"shape":"Boolean"},
        "EnableInterContainerTrafficEncryption":{"shape":"Boolean"},
        "CustomerDetails":{"shape":"CustomerDetails"},
        "TuningJobArn":{"shape":"HyperParameterTuningJobArn"},
        "LabelingJobArn":{"shape":"LabelingJobArn"},
        "AutoMLJobArn":{"shape":"AutoMLJobArn"},
        "FasCredentials":{"shape":"FasCredentials"},
        "StateMachineArn":{"shape":"StateMachineArn"},
        "ExperimentConfig":{"shape":"ExperimentConfig"}
      }
    },
    "CreateTrainingJobInternalResponse":{
      "type":"structure",
      "members":{
        "TrainingJobResponse":{"shape":"CreateTrainingJobResponse"}
      }
    },
    "CreateTrainingJobRequest":{
      "type":"structure",
      "required":[
        "TrainingJobName",
        "AlgorithmSpecification",
        "RoleArn",
        "OutputDataConfig",
        "ResourceConfig",
        "StoppingCondition"
      ],
      "members":{
        "TrainingJobName":{
          "shape":"TrainingJobName",
          "documentation":"<p>The name of the training job. The name must be unique within an AWS Region in an AWS account. It appears in the Amazon SageMaker console. </p>"
        },
        "HyperParameters":{
          "shape":"HyperParameters",
          "documentation":"<p>Algorithm-specific parameters. You set hyperparameters before you start the learning process. Hyperparameters influence the quality of the model. For a list of hyperparameters for each training algorithm provided by Amazon SageMaker, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html\">Algorithms</a>. </p> <p>You can specify a maximum of 100 hyperparameters. Each hyperparameter is a key-value pair. Each key and value is limited to 256 characters, as specified by the <code>Length Constraint</code>. </p>"
        },
        "AlgorithmSpecification":{
          "shape":"AlgorithmSpecification",
          "documentation":"<p>The registry path of the Docker image that contains the training algorithm and algorithm-specific metadata, including the input mode. For more information about algorithms provided by Amazon SageMaker, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html\">Algorithms</a>. For information about providing your own algorithms, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/adv-topics-own-algo.html\">Bring Your Own Algorithms </a>. </p>"
        },
        "RoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf. </p> <p>During model training, Amazon SageMaker needs your permission to read input data from an S3 bucket, download a Docker image that contains training code, write model artifacts to an S3 bucket, write logs to Amazon CloudWatch Logs, and publish metrics to Amazon CloudWatch. You grant permissions for all of these tasks to an IAM role. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html\">Amazon SageMaker Roles</a>. </p>"
        },
        "ChainedCustomerRoleArn":{
          "shape":"RoleArn",
          "internalonly":true
        },
        "InputDataConfig":{
          "shape":"InputDataConfig",
          "documentation":"<p>An array of <code>Channel</code> objects. Each channel is a named input source. <code>InputDataConfig</code> describes the input data and its location. </p> <p>Algorithms can accept input data from one or more channels. For example, an algorithm might have two channels of input data, <code>training_data</code> and <code>validation_data</code>. The configuration for each channel provides the S3 location where the input data is stored. It also provides information about the stored data: the MIME type, compression method, and whether the data is wrapped in RecordIO format. </p> <p>Depending on the input mode that the algorithm supports, Amazon SageMaker either copies input data files from an S3 bucket to a local directory in the Docker container, or makes it available as input streams. </p>"
        },
        "OutputDataConfig":{
          "shape":"OutputDataConfig",
          "documentation":"<p>Specifies the path to the S3 bucket where you want to store model artifacts. Amazon SageMaker creates subfolders for the artifacts. </p>"
        },
        "ResourceConfig":{
          "shape":"ResourceConfig",
          "documentation":"<p>The resources, including the ML compute instances and ML storage volumes, to use for model training. </p> <p>ML storage volumes store model artifacts and incremental states. Training algorithms might also use ML storage volumes for scratch space. If you want Amazon SageMaker to use the ML storage volume to store the training data, choose <code>File</code> as the <code>TrainingInputMode</code> in the algorithm specification. For distributed training algorithms, specify an instance count greater than 1.</p>"
        },
        "VpcConfig":{"shape":"VpcConfig"},
        "StoppingCondition":{
          "shape":"StoppingCondition",
          "documentation":"<p>Sets a duration for training. Use this parameter to cap model training costs. To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms might use this 120-second window to save the model artifacts. </p> <p>When Amazon SageMaker terminates a job because the stopping condition has been met, training algorithms provided by Amazon SageMaker save the intermediate results of the job. This intermediate data is a valid model artifact. You can use it to create a model using the <code>CreateModel</code> API. </p>"
        },
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>An array of key-value pairs. For more information, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what\">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>. </p>"
        },
        "EnableNetworkIsolation":{"shape":"Boolean"},
        "EnableInterContainerTrafficEncryption":{"shape":"Boolean"},
        "EnableManagedSpotTraining":{"shape":"Boolean"},
        "CheckpointConfig":{"shape":"CheckpointConfig"},
        "DebugConfig":{
          "shape":"DebugConfig",
          "internalonly":true
        },
        "ExperimentConfig":{
          "shape":"ExperimentConfig",
          "internalonly":true
        }
      }
    },
    "CreateTrainingJobResponse":{
      "type":"structure",
      "required":["TrainingJobArn"],
      "members":{
        "TrainingJobArn":{
          "shape":"TrainingJobArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the training job.</p>"
        }
      }
    },
    "CreateTransformJobInternalRequest":{
      "type":"structure",
      "required":[
        "TransformJobName",
        "ModelName",
        "TransformInput",
        "TransformOutput",
        "TransformResources",
        "CustomerDetails"
      ],
      "members":{
        "TransformJobName":{"shape":"TransformJobName"},
        "ModelName":{"shape":"ModelName"},
        "MaxConcurrentTransforms":{"shape":"MaxConcurrentTransforms"},
        "MaxPayloadInMB":{"shape":"MaxPayloadInMB"},
        "BatchStrategy":{"shape":"BatchStrategy"},
        "Environment":{"shape":"TransformEnvironmentMap"},
        "TransformInput":{"shape":"TransformInput"},
        "TransformOutput":{"shape":"TransformOutput"},
        "TransformResources":{"shape":"TransformResources"},
        "DataProcessing":{"shape":"DataProcessing"},
        "Tags":{"shape":"TagList"},
        "ExperimentConfig":{"shape":"ExperimentConfig"},
        "StateMachineArnProviderLambdaArn":{"shape":"StateMachineArnProviderLambdaArn"},
        "CustomerDetails":{"shape":"CustomerDetails"},
        "FasCredentials":{"shape":"FasCredentials"},
        "LabelingJobArn":{"shape":"LabelingJobArn"},
        "AutoMLJobArn":{"shape":"AutoMLJobArn"},
        "PlatformCredentialToken":{"shape":"ProxyToken"},
        "CustomerCredentialToken":{"shape":"ProxyToken"},
        "CredentialProviderFunction":{"shape":"CredentialProviderLambdaFunctionArn"},
        "CredentialProviderEncryptionKey":{"shape":"KmsKeyId"}
      }
    },
    "CreateTransformJobInternalResponse":{
      "type":"structure",
      "members":{
        "TransformJobResponse":{"shape":"CreateTransformJobResponse"}
      }
    },
    "CreateTransformJobRequest":{
      "type":"structure",
      "required":[
        "TransformJobName",
        "ModelName",
        "TransformInput",
        "TransformOutput",
        "TransformResources"
      ],
      "members":{
        "TransformJobName":{"shape":"TransformJobName"},
        "ModelName":{"shape":"ModelName"},
        "MaxConcurrentTransforms":{"shape":"MaxConcurrentTransforms"},
        "MaxPayloadInMB":{"shape":"MaxPayloadInMB"},
        "BatchStrategy":{"shape":"BatchStrategy"},
        "Environment":{"shape":"TransformEnvironmentMap"},
        "TransformInput":{"shape":"TransformInput"},
        "TransformOutput":{"shape":"TransformOutput"},
        "TransformResources":{"shape":"TransformResources"},
        "DataProcessing":{"shape":"DataProcessing"},
        "Tags":{"shape":"TagList"},
        "PlatformCredentialToken":{
          "shape":"ProxyToken",
          "internalonly":true
        },
        "CustomerCredentialToken":{
          "shape":"ProxyToken",
          "internalonly":true
        },
        "CredentialProviderFunction":{
          "shape":"CredentialProviderLambdaFunctionArn",
          "internalonly":true
        },
        "CredentialProviderEncryptionKey":{
          "shape":"KmsKeyId",
          "internalonly":true
        },
        "ExperimentConfig":{
          "shape":"ExperimentConfig",
          "internalonly":true
        }
      }
    },
    "CreateTransformJobResponse":{
      "type":"structure",
      "required":["TransformJobArn"],
      "members":{
        "TransformJobArn":{"shape":"TransformJobArn"}
      }
    },
    "CreateTrialComponentRequest":{
      "type":"structure",
      "required":["TrialComponentName"],
      "members":{
        "TrialComponentName":{"shape":"ExperimentEntityName"},
        "DisplayName":{"shape":"ExperimentEntityName"},
        "Source":{
          "shape":"TrialComponentSource",
          "internalonly":true
        },
        "Status":{"shape":"TrialComponentStatus"},
        "StartTime":{"shape":"Timestamp"},
        "EndTime":{"shape":"Timestamp"},
        "Parameters":{"shape":"TrialComponentParameters"},
        "InputArtifacts":{"shape":"TrialComponentArtifacts"},
        "OutputArtifacts":{"shape":"TrialComponentArtifacts"},
        "Tags":{"shape":"TagList"},
        "DelegatedAccountId":{
          "shape":"String",
          "internalonly":true
        }
      }
    },
    "CreateTrialComponentResponse":{
      "type":"structure",
      "members":{
        "TrialComponentArn":{"shape":"TrialComponentArn"}
      }
    },
    "CreateTrialRequest":{
      "type":"structure",
      "required":[
        "TrialName",
        "ExperimentName"
      ],
      "members":{
        "TrialName":{"shape":"ExperimentEntityName"},
        "ExperimentName":{"shape":"ExperimentEntityName"},
        "Tags":{"shape":"TagList"},
        "Source":{
          "shape":"TrialSource",
          "internalonly":true
        },
        "DelegatedAccountId":{
          "shape":"String",
          "internalonly":true
        }
      }
    },
    "CreateTrialResponse":{
      "type":"structure",
      "members":{
        "TrialArn":{"shape":"TrialArn"}
      }
    },
    "CreateUserProfileRequest":{
      "type":"structure",
      "required":[
        "UserPolicy",
        "UserSettings"
      ],
      "members":{
        "DomainId":{"shape":"ResourceId"},
        "IdentityId":{"shape":"IdentityId"},
        "UserPolicy":{"shape":"String2048"},
        "UserSettings":{"shape":"UserSettings"}
      }
    },
    "CreateUserProfileResponse":{
      "type":"structure",
      "members":{
        "IdentityId":{"shape":"IdentityId"}
      }
    },
    "CreateWorkteamRequest":{
      "type":"structure",
      "required":[
        "WorkteamName",
        "MemberDefinitions",
        "Description"
      ],
      "members":{
        "WorkteamName":{"shape":"WorkteamName"},
        "MemberDefinitions":{"shape":"MemberDefinitions"},
        "Description":{"shape":"String200"},
        "NotificationConfiguration":{"shape":"NotificationConfiguration"},
        "Tags":{"shape":"TagList"}
      }
    },
    "CreateWorkteamResponse":{
      "type":"structure",
      "members":{
        "WorkteamArn":{"shape":"WorkteamArn"}
      }
    },
    "CreationTime":{"type":"timestamp"},
    "CreationTimeAfter":{"type":"timestamp"},
    "CreationTimeBefore":{"type":"timestamp"},
    "CredentialProviderLambdaFunctionArn":{
      "type":"string",
      "max":2048,
      "min":1
    },
    "CsvContentType":{
      "type":"string",
      "min":1,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*\\/[a-zA-Z0-9](-*[a-zA-Z0-9.])*"
    },
    "CsvContentTypes":{
      "type":"list",
      "member":{"shape":"CsvContentType"},
      "max":10,
      "min":1
    },
    "CustomerDetails":{
      "type":"structure",
      "members":{
        "AccountId":{"shape":"AccountId"}
      }
    },
    "DataCaptureConfig":{
      "type":"structure",
      "required":[
        "InitialSamplingPercentage",
        "DestinationS3Uri",
        "CaptureOptions"
      ],
      "members":{
        "EnableCapture":{"shape":"EnableCapture"},
        "InitialSamplingPercentage":{"shape":"SamplingPercentage"},
        "DestinationS3Uri":{"shape":"DestinationS3Uri"},
        "KmsKeyId":{"shape":"KmsKeyId"},
        "CaptureOptions":{"shape":"CaptureOptionList"},
        "CaptureContentTypeHeader":{"shape":"CaptureContentTypeHeader"}
      }
    },
    "DataCaptureConfigSummary":{
      "type":"structure",
      "required":[
        "EnableCapture",
        "CaptureStatus",
        "CurrentSamplingPercentage",
        "DestinationS3Uri",
        "KmsKeyId"
      ],
      "members":{
        "EnableCapture":{"shape":"EnableCapture"},
        "CaptureStatus":{"shape":"CaptureStatus"},
        "CurrentSamplingPercentage":{"shape":"SamplingPercentage"},
        "DestinationS3Uri":{"shape":"DestinationS3Uri"},
        "KmsKeyId":{"shape":"KmsKeyId"}
      }
    },
    "DataInputConfig":{
      "type":"string",
      "max":1024,
      "min":1,
      "pattern":"[\\S\\s]+"
    },
    "DataProcessing":{
      "type":"structure",
      "members":{
        "InputFilter":{"shape":"JsonPath"},
        "OutputFilter":{"shape":"JsonPath"},
        "JoinSource":{"shape":"JoinSource"}
      }
    },
    "DataSource":{
      "type":"structure",
      "members":{
        "S3DataSource":{
          "shape":"S3DataSource",
          "documentation":"<p>The S3 location of the data source that is associated with a channel.</p>"
        },
        "FileSystemDataSource":{"shape":"FileSystemDataSource"}
      },
      "documentation":"<p>Describes the location of the channel data.</p>"
    },
    "DebugConfig":{
      "type":"structure",
      "members":{
        "DebugHookConfig":{"shape":"DebugHookConfig"},
        "RuleConfig":{"shape":"RuleConfig"}
      }
    },
    "DebugHookConfig":{
      "type":"structure",
      "required":["S3OutputPath"],
      "members":{
        "LocalPath":{"shape":"DirectoryPath"},
        "S3OutputPath":{"shape":"S3Uri"},
        "DebugHookSpecificationList":{"shape":"DebugHookSpecificationList"}
      }
    },
    "DebugHookSpecification":{
      "type":"structure",
      "members":{
        "TensorRegex":{"shape":"TensorRegex"},
        "RuntimeConfigurations":{"shape":"RuntimeConfigurations"}
      }
    },
    "DebugHookSpecificationList":{
      "type":"list",
      "member":{"shape":"DebugHookSpecification"},
      "max":20,
      "min":0
    },
    "DefaultResourceManagerSpec":{
      "type":"structure",
      "members":{
        "DefaultResourceSpec":{"shape":"ResourceSpec"}
      }
    },
    "DeleteAlgorithmInput":{
      "type":"structure",
      "required":["AlgorithmName"],
      "members":{
        "AlgorithmName":{"shape":"EntityName"}
      }
    },
    "DeleteCodeRepositoryInput":{
      "type":"structure",
      "required":["CodeRepositoryName"],
      "members":{
        "CodeRepositoryName":{"shape":"EntityName"}
      }
    },
    "DeleteDomainRequest":{
      "type":"structure",
      "members":{
        "DeleteHomeEfsFileSystem":{"shape":"DeleteHomeEfsFileSystem"},
        "DomainId":{"shape":"ResourceId"},
        "IsDefaultDomain":{"shape":"IsDefaultDomain"}
      }
    },
    "DeleteDomainResponse":{
      "type":"structure",
      "members":{
        "DomainArn":{"shape":"String256"}
      }
    },
    "DeleteEndpointConfigInput":{
      "type":"structure",
      "required":["EndpointConfigName"],
      "members":{
        "EndpointConfigName":{
          "shape":"EndpointConfigName",
          "documentation":"<p>The name of the endpoint configuration that you want to delete.</p>"
        }
      }
    },
    "DeleteEndpointInput":{
      "type":"structure",
      "required":["EndpointName"],
      "members":{
        "EndpointName":{
          "shape":"EndpointName",
          "documentation":"<p>The name of the endpoint that you want to delete.</p>"
        }
      }
    },
    "DeleteEnvironmentRequest":{
      "type":"structure",
      "required":["EnvironmentName"],
      "members":{
        "EnvironmentName":{"shape":"EnvironmentName"}
      }
    },
    "DeleteEnvironmentVersionRequest":{
      "type":"structure",
      "required":["EnvironmentName"],
      "members":{
        "EnvironmentName":{"shape":"EnvironmentName"},
        "EnvironmentVersionNumber":{"shape":"EnvironmentVersionNumber"},
        "EnvironmentVersionName":{"shape":"EnvironmentVersionName"}
      }
    },
    "DeleteEnvironmentVersionResponse":{
      "type":"structure",
      "required":[
        "EnvironmentVersionArn",
        "EnvironmentVersionNumber"
      ],
      "members":{
        "EnvironmentVersionArn":{"shape":"EnvironmentVersionArn"},
        "EnvironmentVersionNumber":{"shape":"EnvironmentVersionNumber"}
      }
    },
    "DeleteExperimentRequest":{
      "type":"structure",
      "required":["ExperimentName"],
      "members":{
        "ExperimentName":{"shape":"ExperimentEntityName"}
      }
    },
    "DeleteExperimentResponse":{
      "type":"structure",
      "members":{
        "ExperimentArn":{"shape":"ExperimentArn"}
      }
    },
    "DeleteHomeEfsFileSystem":{"type":"boolean"},
    "DeleteModelInput":{
      "type":"structure",
      "required":["ModelName"],
      "members":{
        "ModelName":{
          "shape":"ModelName",
          "documentation":"<p>The name of the model to delete.</p>"
        }
      }
    },
    "DeleteModelPackageInput":{
      "type":"structure",
      "required":["ModelPackageName"],
      "members":{
        "ModelPackageName":{"shape":"EntityName"}
      }
    },
    "DeleteMonitoringScheduleRequest":{
      "type":"structure",
      "required":["MonitoringScheduleName"],
      "members":{
        "MonitoringScheduleName":{"shape":"MonitoringScheduleName"}
      }
    },
    "DeleteNotebookInstanceInput":{
      "type":"structure",
      "required":["NotebookInstanceName"],
      "members":{
        "NotebookInstanceName":{
          "shape":"NotebookInstanceName",
          "documentation":"<p>The name of the Amazon SageMaker notebook instance to delete.</p>"
        }
      }
    },
    "DeleteNotebookInstanceLifecycleConfigInput":{
      "type":"structure",
      "required":["NotebookInstanceLifecycleConfigName"],
      "members":{
        "NotebookInstanceLifecycleConfigName":{"shape":"NotebookInstanceLifecycleConfigName"}
      }
    },
    "DeleteTagsInput":{
      "type":"structure",
      "required":[
        "ResourceArn",
        "TagKeys"
      ],
      "members":{
        "ResourceArn":{
          "shape":"ResourceArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the resource whose tags you want to delete.</p>"
        },
        "TagKeys":{
          "shape":"TagKeyList",
          "documentation":"<p>An array or one or more tag keys to delete.</p>"
        }
      }
    },
    "DeleteTagsOutput":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteTrialComponentRequest":{
      "type":"structure",
      "required":["TrialComponentName"],
      "members":{
        "TrialComponentName":{"shape":"ExperimentEntityName"}
      }
    },
    "DeleteTrialComponentResponse":{
      "type":"structure",
      "members":{
        "TrialComponentArn":{"shape":"TrialComponentArn"}
      }
    },
    "DeleteTrialRequest":{
      "type":"structure",
      "required":["TrialName"],
      "members":{
        "TrialName":{"shape":"ExperimentEntityName"}
      }
    },
    "DeleteTrialResponse":{
      "type":"structure",
      "members":{
        "TrialArn":{"shape":"TrialArn"}
      }
    },
    "DeleteUserProfileRequest":{
      "type":"structure",
      "members":{
        "DomainId":{"shape":"ResourceId"},
        "IdentityId":{"shape":"IdentityId"}
      }
    },
    "DeleteUserProfileResponse":{
      "type":"structure",
      "members":{
        "IdentityId":{"shape":"IdentityId"}
      }
    },
    "DeleteWorkteamRequest":{
      "type":"structure",
      "required":["WorkteamName"],
      "members":{
        "WorkteamName":{"shape":"WorkteamName"}
      }
    },
    "DeleteWorkteamResponse":{
      "type":"structure",
      "required":["Success"],
      "members":{
        "Success":{"shape":"Success"}
      }
    },
    "DeployedImage":{
      "type":"structure",
      "members":{
        "SpecifiedImage":{"shape":"Image"},
        "ResolvedImage":{"shape":"Image"},
        "ResolutionTime":{"shape":"Timestamp"}
      }
    },
    "DeployedImages":{
      "type":"list",
      "member":{"shape":"DeployedImage"}
    },
    "DescribeAlgorithmInput":{
      "type":"structure",
      "required":["AlgorithmName"],
      "members":{
        "AlgorithmName":{"shape":"ArnOrName"}
      }
    },
    "DescribeAlgorithmOutput":{
      "type":"structure",
      "required":[
        "AlgorithmName",
        "AlgorithmArn",
        "CreationTime",
        "TrainingSpecification",
        "AlgorithmStatus",
        "AlgorithmStatusDetails"
      ],
      "members":{
        "AlgorithmName":{"shape":"EntityName"},
        "AlgorithmArn":{"shape":"AlgorithmArn"},
        "AlgorithmDescription":{"shape":"EntityDescription"},
        "CreationTime":{"shape":"CreationTime"},
        "TrainingSpecification":{"shape":"TrainingSpecification"},
        "InferenceSpecification":{"shape":"InferenceSpecification"},
        "ValidationSpecification":{"shape":"AlgorithmValidationSpecification"},
        "AlgorithmStatus":{"shape":"AlgorithmStatus"},
        "AlgorithmStatusDetails":{"shape":"AlgorithmStatusDetails"},
        "ProductId":{"shape":"ProductId"},
        "CertifyForMarketplace":{"shape":"CertifyForMarketplace"}
      }
    },
    "DescribeAnalyticsJobRequest":{
      "type":"structure",
      "required":["AnalyticsJobName"],
      "members":{
        "AnalyticsJobName":{"shape":"AnalyticsJobName"}
      }
    },
    "DescribeAnalyticsJobResponse":{
      "type":"structure",
      "required":[
        "AnalyticsJobName",
        "AnalyticsResources",
        "StoppingCondition",
        "AppSpecification",
        "AnalyticsJobArn",
        "AnalyticsJobStatus",
        "CreationTime"
      ],
      "members":{
        "AnalyticsInputs":{"shape":"AnalyticsInputs"},
        "AnalyticsOutputs":{"shape":"AnalyticsOutputs"},
        "AnalyticsJobName":{"shape":"AnalyticsJobName"},
        "AnalyticsResources":{"shape":"AnalyticsResources"},
        "StoppingCondition":{"shape":"AnalyticsStoppingCondition"},
        "AppSpecification":{"shape":"AppSpecification"},
        "Environment":{"shape":"EnvironmentMap"},
        "NetworkConfig":{"shape":"NetworkConfig"},
        "RoleArn":{"shape":"RoleArn"},
        "ExperimentConfig":{"shape":"ExperimentConfig"},
        "AnalyticsJobArn":{"shape":"AnalyticsJobArn"},
        "AnalyticsJobStatus":{"shape":"AnalyticsJobStatus"},
        "ExitMessage":{"shape":"ExitMessage"},
        "FailureReason":{"shape":"FailureReason"},
        "AnalyticsEndTime":{"shape":"Timestamp"},
        "AnalyticsStartTime":{"shape":"Timestamp"},
        "LastModifiedTime":{"shape":"Timestamp"},
        "CreationTime":{"shape":"Timestamp"},
        "MonitoringScheduleArn":{"shape":"MonitoringScheduleArn"},
        "AutoMLJobArn":{"shape":"AutoMLJobArn"},
        "TrainingJobArn":{"shape":"TrainingJobArn"}
      }
    },
    "DescribeAppRequest":{
      "type":"structure",
      "required":[
        "AppType",
        "AppName"
      ],
      "members":{
        "DomainId":{"shape":"ResourceId"},
        "IdentityId":{"shape":"IdentityId"},
        "AppType":{"shape":"AppType"},
        "AppName":{"shape":"AppName"}
      }
    },
    "DescribeAppResponse":{
      "type":"structure",
      "members":{
        "DomainId":{"shape":"ResourceId"},
        "IdentityId":{"shape":"IdentityId"},
        "AppType":{"shape":"AppType"},
        "AppName":{"shape":"AppName"},
        "Status":{"shape":"AppStatus"},
        "ResourceSpec":{"shape":"ResourceSpec"},
        "EffectiveResourceSpec":{"shape":"ResourceSpec"},
        "LastHealthCheckTimestamp":{"shape":"Timestamp"},
        "LastUserActivityTimestamp":{"shape":"Timestamp"}
      }
    },
    "DescribeAutoMLJobRequest":{
      "type":"structure",
      "required":["AutoMLJobName"],
      "members":{
        "AutoMLJobName":{"shape":"AutoMLJobName"}
      }
    },
    "DescribeAutoMLJobResponse":{
      "type":"structure",
      "required":[
        "AutoMLJobName",
        "AutoMLJobArn",
        "InputDataConfig",
        "OutputDataConfig",
        "RoleArn",
        "JobConfig",
        "JobCreationTime",
        "JobLastModifiedTime",
        "AutoMLJobStatus",
        "AutoMLJobSecondaryStatus"
      ],
      "members":{
        "AutoMLJobName":{"shape":"AutoMLJobName"},
        "AutoMLJobArn":{"shape":"AutoMLJobArn"},
        "InputDataConfig":{"shape":"AutoMLInputDataConfig"},
        "OutputDataConfig":{"shape":"AutoMLOutputDataConfig"},
        "RoleArn":{"shape":"RoleArn"},
        "JobObjective":{"shape":"AutoMLJobObjective"},
        "ProblemType":{"shape":"ProblemType"},
        "JobConfig":{"shape":"AutoMLJobConfig"},
        "JobCreationTime":{"shape":"Timestamp"},
        "JobEndTime":{"shape":"Timestamp"},
        "JobLastModifiedTime":{"shape":"Timestamp"},
        "FailureReason":{"shape":"AutoMLFailureReason"},
        "TrialStatusCounters":{"shape":"TrialStatusCounters"},
        "BestTrial":{"shape":"AutoMLTrialSummary"},
        "AutoMLJobStatus":{"shape":"AutoMLJobStatus"},
        "AutoMLJobSecondaryStatus":{"shape":"AutoMLJobSecondaryStatus"},
        "ObjectiveStatusCounters":{"shape":"ObjectiveStatusCounters"},
        "DryRun":{"shape":"DryRun"},
        "AutoMLJobArtifacts":{"shape":"AutoMLJobArtifacts"},
        "ImageUrlOverrides":{
          "shape":"ImageUrlOverrides",
          "internalonly":true
        }
      }
    },
    "DescribeCodeRepositoryInput":{
      "type":"structure",
      "required":["CodeRepositoryName"],
      "members":{
        "CodeRepositoryName":{"shape":"EntityName"}
      }
    },
    "DescribeCodeRepositoryOutput":{
      "type":"structure",
      "required":[
        "CodeRepositoryName",
        "CodeRepositoryArn",
        "CreationTime",
        "LastModifiedTime"
      ],
      "members":{
        "CodeRepositoryName":{"shape":"EntityName"},
        "CodeRepositoryArn":{"shape":"CodeRepositoryArn"},
        "CreationTime":{"shape":"CreationTime"},
        "LastModifiedTime":{"shape":"LastModifiedTime"},
        "GitConfig":{"shape":"GitConfig"}
      }
    },
    "DescribeCompilationJobRequest":{
      "type":"structure",
      "required":["CompilationJobName"],
      "members":{
        "CompilationJobName":{"shape":"EntityName"}
      }
    },
    "DescribeCompilationJobResponse":{
      "type":"structure",
      "required":[
        "CompilationJobName",
        "CompilationJobArn",
        "CompilationJobStatus",
        "StoppingCondition",
        "CreationTime",
        "LastModifiedTime",
        "FailureReason",
        "ModelArtifacts",
        "RoleArn",
        "InputConfig",
        "OutputConfig"
      ],
      "members":{
        "CompilationJobName":{"shape":"EntityName"},
        "CompilationJobArn":{"shape":"CompilationJobArn"},
        "CompilationJobStatus":{"shape":"CompilationJobStatus"},
        "CompilationStartTime":{"shape":"Timestamp"},
        "CompilationEndTime":{"shape":"Timestamp"},
        "StoppingCondition":{"shape":"StoppingCondition"},
        "CreationTime":{"shape":"CreationTime"},
        "LastModifiedTime":{"shape":"LastModifiedTime"},
        "FailureReason":{"shape":"FailureReason"},
        "ModelArtifacts":{"shape":"ModelArtifacts"},
        "RoleArn":{"shape":"RoleArn"},
        "InputConfig":{"shape":"InputConfig"},
        "OutputConfig":{"shape":"OutputConfig"}
      }
    },
    "DescribeDomainRequest":{
      "type":"structure",
      "members":{
        "DomainId":{"shape":"ResourceId"},
        "IsDefaultDomain":{"shape":"IsDefaultDomain"}
      }
    },
    "DescribeDomainResponse":{
      "type":"structure",
      "members":{
        "DefaultSettings":{"shape":"UserSettings"},
        "DomainArn":{"shape":"String256"},
        "DomainPolicy":{"shape":"String2048"},
        "HomeEfsFileSystemId":{"shape":"ResourceId"},
        "IsDefaultDomain":{"shape":"IsDefaultDomain"},
        "KmsKeyId":{"shape":"KmsKeyId"},
        "SecurityGroups":{"shape":"SecurityGroupIds"},
        "Status":{"shape":"DomainStatus"},
        "SubnetIds":{"shape":"Subnets"},
        "Url":{"shape":"String1024"},
        "VpcId":{"shape":"VpcId"}
      }
    },
    "DescribeEndpointConfigInput":{
      "type":"structure",
      "required":["EndpointConfigName"],
      "members":{
        "EndpointConfigName":{
          "shape":"EndpointConfigName",
          "documentation":"<p>The name of the endpoint configuration.</p>"
        }
      }
    },
    "DescribeEndpointConfigOutput":{
      "type":"structure",
      "required":[
        "EndpointConfigName",
        "EndpointConfigArn",
        "ProductionVariants",
        "CreationTime"
      ],
      "members":{
        "EndpointConfigName":{
          "shape":"EndpointConfigName",
          "documentation":"<p>Name of the Amazon SageMaker endpoint configuration.</p>"
        },
        "EndpointConfigArn":{
          "shape":"EndpointConfigArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the endpoint configuration.</p>"
        },
        "ProductionVariants":{
          "shape":"ProductionVariantList",
          "documentation":"<p>An array of <code>ProductionVariant</code> objects, one for each model that you want to host at this endpoint.</p>"
        },
        "DataCaptureConfig":{
          "shape":"DataCaptureConfig",
          "internalonly":true
        },
        "KmsKeyId":{"shape":"KmsKeyId"},
        "CreationTime":{
          "shape":"Timestamp",
          "documentation":"<p>A timestamp that shows when the endpoint configuration was created.</p>"
        }
      }
    },
    "DescribeEndpointInput":{
      "type":"structure",
      "required":["EndpointName"],
      "members":{
        "EndpointName":{
          "shape":"EndpointName",
          "documentation":"<p>The name of the endpoint.</p>"
        }
      }
    },
    "DescribeEndpointOutput":{
      "type":"structure",
      "required":[
        "EndpointName",
        "EndpointArn",
        "EndpointConfigName",
        "EndpointStatus",
        "CreationTime",
        "LastModifiedTime"
      ],
      "members":{
        "EndpointName":{
          "shape":"EndpointName",
          "documentation":"<p>Name of the endpoint.</p>"
        },
        "EndpointArn":{
          "shape":"EndpointArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the endpoint.</p>"
        },
        "EndpointConfigName":{
          "shape":"EndpointConfigName",
          "documentation":"<p>The name of the endpoint configuration associated with this endpoint.</p>"
        },
        "ProductionVariants":{
          "shape":"ProductionVariantSummaryList",
          "documentation":"<p> An array of ProductionVariant objects, one for each model hosted behind this endpoint. </p>"
        },
        "DataCaptureConfig":{
          "shape":"DataCaptureConfigSummary",
          "internalonly":true
        },
        "EndpointStatus":{
          "shape":"EndpointStatus",
          "documentation":"<p>The status of the endpoint.</p>"
        },
        "FailureReason":{
          "shape":"FailureReason",
          "documentation":"<p>If the status of the endpoint is <code>Failed</code>, the reason why it failed. </p>"
        },
        "CreationTime":{
          "shape":"Timestamp",
          "documentation":"<p>A timestamp that shows when the endpoint was created.</p>"
        },
        "LastModifiedTime":{
          "shape":"Timestamp",
          "documentation":"<p>A timestamp that shows when the endpoint was last modified.</p>"
        }
      }
    },
    "DescribeEnvironmentRequest":{
      "type":"structure",
      "required":["EnvironmentName"],
      "members":{
        "EnvironmentName":{"shape":"EnvironmentName"}
      }
    },
    "DescribeEnvironmentResponse":{
      "type":"structure",
      "required":[
        "EnvironmentName",
        "EnvironmentArn",
        "CreationTime",
        "LastModifiedTime",
        "EnableNetworkIsolation",
        "ExpirationInDays",
        "Metadata",
        "KeepS3ArtifactsOnDelete",
        "S3ArtifactPath"
      ],
      "members":{
        "EnvironmentName":{"shape":"EnvironmentName"},
        "EnvironmentArn":{"shape":"EnvironmentArn"},
        "CreationTime":{"shape":"CreationTime"},
        "LastModifiedTime":{"shape":"LastModifiedTime"},
        "Repository":{"shape":"Repository"},
        "RoleArn":{"shape":"RoleArn"},
        "EnableNetworkIsolation":{"shape":"EnableNetworkIsolation"},
        "VpcConfig":{"shape":"VpcConfig"},
        "ExpirationInDays":{"shape":"ExpirationInDays"},
        "Metadata":{"shape":"Metadata"},
        "KeepS3ArtifactsOnDelete":{"shape":"KeepS3ArtifactsOnDelete"},
        "S3ArtifactPath":{"shape":"S3ArtifactPath"}
      }
    },
    "DescribeEnvironmentVersionRequest":{
      "type":"structure",
      "required":["EnvironmentName"],
      "members":{
        "EnvironmentName":{"shape":"EnvironmentName"},
        "EnvironmentVersionNumber":{"shape":"EnvironmentVersionNumber"},
        "EnvironmentVersionName":{"shape":"EnvironmentVersionName"}
      }
    },
    "DescribeEnvironmentVersionResponse":{
      "type":"structure",
      "required":[
        "EnvironmentName",
        "EnvironmentVersionNumber",
        "EnvironmentVersionStatus",
        "CreationTime",
        "LastModifiedTime",
        "EnvironmentVersionNames",
        "EnvironmentDefinitionLayers",
        "EnvironmentLayers",
        "Metadata"
      ],
      "members":{
        "EnvironmentName":{"shape":"EnvironmentName"},
        "EnvironmentVersionNumber":{"shape":"EnvironmentVersionNumber"},
        "EnvironmentVersionStatus":{"shape":"EnvironmentVersionStatus"},
        "StatusMessage":{"shape":"StatusMessage"},
        "CreationTime":{"shape":"CreationTime"},
        "LastModifiedTime":{"shape":"LastModifiedTime"},
        "EnvironmentVersionNames":{"shape":"EnvironmentVersionNames"},
        "EnvironmentDefinitionLayers":{"shape":"EnvironmentDefinitionLayers"},
        "EnvironmentLayers":{"shape":"EnvironmentLayers"},
        "Metadata":{"shape":"Metadata"}
      }
    },
    "DescribeExperimentRequest":{
      "type":"structure",
      "required":["ExperimentName"],
      "members":{
        "ExperimentName":{"shape":"ExperimentEntityName"}
      }
    },
    "DescribeExperimentResponse":{
      "type":"structure",
      "members":{
        "ExperimentName":{"shape":"ExperimentEntityName"},
        "ExperimentArn":{"shape":"ExperimentArn"},
        "Source":{"shape":"ExperimentSource"},
        "ExperimentDescription":{"shape":"ExperimentDescription"},
        "CreationTime":{"shape":"Timestamp"},
        "CreatedBy":{"shape":"UserContext"},
        "LastModifiedTime":{"shape":"Timestamp"},
        "LastModifiedBy":{"shape":"UserContext"}
      }
    },
    "DescribeFlowDefinitionRequest":{
      "type":"structure",
      "required":["FlowDefinitionName"],
      "members":{
        "FlowDefinitionName":{"shape":"FlowDefinitionName"}
      }
    },
    "DescribeFlowDefinitionResponse":{
      "type":"structure",
      "required":[
        "FlowDefinitionArn",
        "FlowDefinitionName",
        "FlowDefinitionStatus",
        "CreationTime",
        "HumanLoopConfig",
        "OutputConfig",
        "RoleArn"
      ],
      "members":{
        "FlowDefinitionArn":{"shape":"FlowDefinitionArn"},
        "FlowDefinitionName":{"shape":"FlowDefinitionName"},
        "FlowDefinitionStatus":{"shape":"FlowDefinitionStatus"},
        "CreationTime":{"shape":"Timestamp"},
        "HumanLoopActivationConfig":{"shape":"HumanLoopActivationConfig"},
        "HumanLoopConfig":{"shape":"HumanLoopConfig"},
        "OutputConfig":{"shape":"FlowDefinitionOutputConfig"},
        "RoleArn":{"shape":"RoleArn"}
      }
    },
    "DescribeHumanTaskUiRequest":{
      "type":"structure",
      "required":["HumanTaskUiName"],
      "members":{
        "HumanTaskUiName":{"shape":"HumanTaskUiName"}
      }
    },
    "DescribeHumanTaskUiResponse":{
      "type":"structure",
      "required":[
        "HumanTaskUiArn",
        "HumanTaskUiName",
        "CreationTime",
        "UiTemplate"
      ],
      "members":{
        "HumanTaskUiArn":{"shape":"HumanTaskUiArn"},
        "HumanTaskUiName":{"shape":"HumanTaskUiName"},
        "CreationTime":{"shape":"Timestamp"},
        "LastModifiedTime":{"shape":"Timestamp"},
        "UiTemplate":{"shape":"UiTemplateInfo"}
      }
    },
    "DescribeHyperParameterTuningJobRequest":{
      "type":"structure",
      "required":["HyperParameterTuningJobName"],
      "members":{
        "HyperParameterTuningJobName":{"shape":"HyperParameterTuningJobName"}
      }
    },
    "DescribeHyperParameterTuningJobResponse":{
      "type":"structure",
      "required":[
        "HyperParameterTuningJobName",
        "HyperParameterTuningJobArn",
        "HyperParameterTuningJobConfig",
        "HyperParameterTuningJobStatus",
        "CreationTime",
        "TrainingJobStatusCounters",
        "ObjectiveStatusCounters"
      ],
      "members":{
        "HyperParameterTuningJobName":{"shape":"HyperParameterTuningJobName"},
        "HyperParameterTuningJobArn":{"shape":"HyperParameterTuningJobArn"},
        "HyperParameterTuningJobConfig":{"shape":"HyperParameterTuningJobConfig"},
        "TrainingJobDefinition":{"shape":"HyperParameterTrainingJobDefinition"},
        "TrainingJobDefinitions":{
          "shape":"HyperParameterTrainingJobDefinitions",
          "internalonly":true
        },
        "HyperParameterTuningJobStatus":{"shape":"HyperParameterTuningJobStatus"},
        "CreationTime":{"shape":"Timestamp"},
        "HyperParameterTuningEndTime":{"shape":"Timestamp"},
        "LastModifiedTime":{"shape":"Timestamp"},
        "TrainingJobStatusCounters":{"shape":"TrainingJobStatusCounters"},
        "ObjectiveStatusCounters":{"shape":"ObjectiveStatusCounters"},
        "BestTrainingJob":{"shape":"HyperParameterTrainingJobSummary"},
        "OverallBestTrainingJob":{"shape":"HyperParameterTrainingJobSummary"},
        "WarmStartConfig":{"shape":"HyperParameterTuningJobWarmStartConfig"},
        "FailureReason":{"shape":"FailureReason"},
        "TuningJobCompletionReason":{
          "shape":"TuningJobCompletionReason",
          "internalonly":true
        }
      }
    },
    "DescribeInternalRequest":{
      "type":"structure",
      "required":[
        "Arn",
        "ExpectedObjectFullyQualifiedClassName"
      ],
      "members":{
        "Arn":{"shape":"String"},
        "ExpectedObjectFullyQualifiedClassName":{"shape":"String"}
      }
    },
    "DescribeInternalResponse":{
      "type":"structure",
      "members":{
        "Arn":{"shape":"String"},
        "ObjectFullyQualifiedClassName":{"shape":"String"},
        "ObjectJson":{"shape":"String"}
      }
    },
    "DescribeLabelingJobRequest":{
      "type":"structure",
      "required":["LabelingJobName"],
      "members":{
        "LabelingJobName":{"shape":"LabelingJobName"}
      }
    },
    "DescribeLabelingJobResponse":{
      "type":"structure",
      "required":[
        "LabelingJobStatus",
        "LabelCounters",
        "CreationTime",
        "LastModifiedTime",
        "JobReferenceCode",
        "LabelingJobName",
        "LabelingJobArn",
        "InputConfig",
        "OutputConfig",
        "RoleArn",
        "HumanTaskConfig"
      ],
      "members":{
        "LabelingJobStatus":{"shape":"LabelingJobStatus"},
        "LabelCounters":{"shape":"LabelCounters"},
        "FailureReason":{"shape":"FailureReason"},
        "CreationTime":{"shape":"Timestamp"},
        "LastModifiedTime":{"shape":"Timestamp"},
        "JobReferenceCode":{"shape":"JobReferenceCode"},
        "LabelingJobName":{"shape":"LabelingJobName"},
        "LabelingJobArn":{"shape":"LabelingJobArn"},
        "LabelAttributeName":{"shape":"LabelAttributeName"},
        "InputConfig":{"shape":"LabelingJobInputConfig"},
        "OutputConfig":{"shape":"LabelingJobOutputConfig"},
        "RoleArn":{"shape":"RoleArn"},
        "LabelCategoryConfigS3Uri":{"shape":"S3Uri"},
        "StoppingConditions":{"shape":"LabelingJobStoppingConditions"},
        "LabelingJobAlgorithmsConfig":{"shape":"LabelingJobAlgorithmsConfig"},
        "HumanTaskConfig":{"shape":"HumanTaskConfig"},
        "Tags":{"shape":"TagList"},
        "LabelingJobOutput":{"shape":"LabelingJobOutput"}
      }
    },
    "DescribeModelInput":{
      "type":"structure",
      "required":["ModelName"],
      "members":{
        "ModelName":{
          "shape":"ModelName",
          "documentation":"<p>The name of the model.</p>"
        }
      }
    },
    "DescribeModelOutput":{
      "type":"structure",
      "required":[
        "ModelName",
        "ExecutionRoleArn",
        "CreationTime",
        "ModelArn"
      ],
      "members":{
        "ModelName":{
          "shape":"ModelName",
          "documentation":"<p>Name of the Amazon SageMaker model.</p>"
        },
        "PrimaryContainer":{
          "shape":"ContainerDefinition",
          "documentation":"<p>The location of the primary inference code, associated artifacts, and custom environment map that the inference code uses when it is deployed in production. </p>"
        },
        "Containers":{"shape":"ContainerDefinitionList"},
        "ExecutionRoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the IAM role that you specified for the model.</p>"
        },
        "VpcConfig":{"shape":"VpcConfig"},
        "CreationTime":{
          "shape":"Timestamp",
          "documentation":"<p>A timestamp that shows when the model was created.</p>"
        },
        "ModelArn":{
          "shape":"ModelArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the model.</p>"
        },
        "EnableNetworkIsolation":{"shape":"Boolean"}
      }
    },
    "DescribeModelPackageInput":{
      "type":"structure",
      "required":["ModelPackageName"],
      "members":{
        "ModelPackageName":{"shape":"ArnOrName"}
      }
    },
    "DescribeModelPackageOutput":{
      "type":"structure",
      "required":[
        "ModelPackageName",
        "ModelPackageArn",
        "CreationTime",
        "ModelPackageStatus",
        "ModelPackageStatusDetails"
      ],
      "members":{
        "ModelPackageName":{"shape":"EntityName"},
        "ModelPackageArn":{"shape":"ModelPackageArn"},
        "ModelPackageDescription":{"shape":"EntityDescription"},
        "CreationTime":{"shape":"CreationTime"},
        "InferenceSpecification":{"shape":"InferenceSpecification"},
        "SourceAlgorithmSpecification":{"shape":"SourceAlgorithmSpecification"},
        "ValidationSpecification":{"shape":"ModelPackageValidationSpecification"},
        "ModelPackageStatus":{"shape":"ModelPackageStatus"},
        "ModelPackageStatusDetails":{"shape":"ModelPackageStatusDetails"},
        "CertifyForMarketplace":{"shape":"CertifyForMarketplace"}
      }
    },
    "DescribeMonitoringScheduleRequest":{
      "type":"structure",
      "required":["MonitoringScheduleName"],
      "members":{
        "MonitoringScheduleName":{"shape":"MonitoringScheduleName"}
      }
    },
    "DescribeMonitoringScheduleResponse":{
      "type":"structure",
      "required":[
        "MonitoringScheduleArn",
        "MonitoringScheduleName",
        "MonitoringScheduleStatus",
        "CreationTime",
        "LastModifiedTime",
        "MonitoringScheduleConfig"
      ],
      "members":{
        "MonitoringScheduleArn":{"shape":"MonitoringScheduleArn"},
        "MonitoringScheduleName":{"shape":"MonitoringScheduleName"},
        "MonitoringScheduleStatus":{"shape":"ScheduleStatus"},
        "CreationTime":{"shape":"Timestamp"},
        "LastModifiedTime":{"shape":"Timestamp"},
        "MonitoringScheduleConfig":{"shape":"MonitoringScheduleConfig"},
        "EndpointName":{"shape":"EndpointName"},
        "LastMonitoringExecutionSummary":{"shape":"LastMonitoringExecutionSummary"}
      }
    },
    "DescribeNotebookInstanceInput":{
      "type":"structure",
      "required":["NotebookInstanceName"],
      "members":{
        "NotebookInstanceName":{
          "shape":"NotebookInstanceName",
          "documentation":"<p>The name of the notebook instance that you want information about.</p>"
        }
      }
    },
    "DescribeNotebookInstanceLifecycleConfigInput":{
      "type":"structure",
      "required":["NotebookInstanceLifecycleConfigName"],
      "members":{
        "NotebookInstanceLifecycleConfigName":{"shape":"NotebookInstanceLifecycleConfigName"}
      }
    },
    "DescribeNotebookInstanceLifecycleConfigOutput":{
      "type":"structure",
      "members":{
        "NotebookInstanceLifecycleConfigArn":{"shape":"NotebookInstanceLifecycleConfigArn"},
        "NotebookInstanceLifecycleConfigName":{"shape":"NotebookInstanceLifecycleConfigName"},
        "OnCreate":{"shape":"NotebookInstanceLifecycleConfigList"},
        "OnStart":{"shape":"NotebookInstanceLifecycleConfigList"},
        "LastModifiedTime":{"shape":"LastModifiedTime"},
        "CreationTime":{"shape":"CreationTime"}
      }
    },
    "DescribeNotebookInstanceOutput":{
      "type":"structure",
      "members":{
        "NotebookInstanceArn":{
          "shape":"NotebookInstanceArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the notebook instance.</p>"
        },
        "NotebookInstanceName":{
          "shape":"NotebookInstanceName",
          "documentation":"<p> Name of the Amazon SageMaker notebook instance. </p>"
        },
        "NotebookInstanceStatus":{
          "shape":"NotebookInstanceStatus",
          "documentation":"<p>The status of the notebook instance.</p>"
        },
        "FailureReason":{
          "shape":"FailureReason",
          "documentation":"<p>If staus is failed, the reason it failed.</p>"
        },
        "Url":{
          "shape":"NotebookInstanceUrl",
          "documentation":"<p>The URL that you use to connect to the Jupyter notebook that is running in your notebook instance. </p>"
        },
        "InstanceType":{
          "shape":"InstanceType",
          "documentation":"<p>The type of ML compute instance running on the notebook instance.</p>"
        },
        "SubnetId":{
          "shape":"SubnetId",
          "documentation":"<p>The ID of the VPC subnet.</p>"
        },
        "SecurityGroups":{
          "shape":"SecurityGroupIds",
          "documentation":"<p>The IDs of the VPC security groups.</p>"
        },
        "RoleArn":{
          "shape":"RoleArn",
          "documentation":"<p> Amazon Resource Name (ARN) of the IAM role associated with the instance. </p>"
        },
        "KmsKeyId":{
          "shape":"KmsKeyId",
          "documentation":"<p> AWS KMS key ID Amazon SageMaker uses to encrypt data when storing it on the ML storage volume attached to the instance. </p>"
        },
        "NetworkInterfaceId":{
          "shape":"NetworkInterfaceId",
          "documentation":"<p> Network interface IDs that Amazon SageMaker created at the time of creating the instance. </p>"
        },
        "LastModifiedTime":{
          "shape":"LastModifiedTime",
          "documentation":"<p>A timestamp. Use this parameter to retrieve the time when the notebook instance was last modified. </p>"
        },
        "CreationTime":{
          "shape":"CreationTime",
          "documentation":"<p>A timestamp. Use this parameter to return the time when the notebook instance was created</p>"
        },
        "NotebookInstanceLifecycleConfigName":{"shape":"NotebookInstanceLifecycleConfigName"},
        "DirectInternetAccess":{"shape":"DirectInternetAccess"},
        "VolumeSizeInGB":{"shape":"NotebookInstanceVolumeSizeInGB"},
        "AcceleratorTypes":{"shape":"NotebookInstanceAcceleratorTypes"},
        "DefaultCodeRepository":{"shape":"CodeRepositoryNameOrUrl"},
        "AdditionalCodeRepositories":{"shape":"AdditionalCodeRepositoryNamesOrUrls"},
        "RootAccess":{"shape":"RootAccess"}
      }
    },
    "DescribeSubscribedWorkteamRequest":{
      "type":"structure",
      "required":["WorkteamArn"],
      "members":{
        "WorkteamArn":{"shape":"WorkteamArn"}
      }
    },
    "DescribeSubscribedWorkteamResponse":{
      "type":"structure",
      "required":["SubscribedWorkteam"],
      "members":{
        "SubscribedWorkteam":{"shape":"SubscribedWorkteam"}
      }
    },
    "DescribeTrainingJobRequest":{
      "type":"structure",
      "required":["TrainingJobName"],
      "members":{
        "TrainingJobName":{
          "shape":"TrainingJobName",
          "documentation":"<p>The name of the training job.</p>"
        },
        "DelegatedAccountId":{
          "shape":"String",
          "internalonly":true
        }
      }
    },
    "DescribeTrainingJobResponse":{
      "type":"structure",
      "required":[
        "TrainingJobName",
        "TrainingJobArn",
        "ModelArtifacts",
        "TrainingJobStatus",
        "SecondaryStatus",
        "AlgorithmSpecification",
        "ResourceConfig",
        "StoppingCondition",
        "CreationTime"
      ],
      "members":{
        "TrainingJobName":{
          "shape":"TrainingJobName",
          "documentation":"<p> Name of the model training job. </p>"
        },
        "TrainingJobArn":{
          "shape":"TrainingJobArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the training job.</p>"
        },
        "TuningJobArn":{"shape":"HyperParameterTuningJobArn"},
        "LabelingJobArn":{"shape":"LabelingJobArn"},
        "AutoMLJobArn":{
          "shape":"AutoMLJobArn",
          "internalonly":true
        },
        "ModelArtifacts":{
          "shape":"ModelArtifacts",
          "documentation":"<p>Information about the Amazon S3 location that is configured for storing model artifacts. </p>"
        },
        "TrainingJobOutput":{
          "shape":"TrainingJobOutput",
          "documentation":"<p>Information about the S3 location that is configured for storing optional output. </p>",
          "internalonly":true
        },
        "TrainingJobStatus":{
          "shape":"TrainingJobStatus",
          "documentation":"<p>The status of the training job. </p> <p>For the <code>InProgress</code> status, Amazon SageMaker can return these secondary statuses:</p> <ul> <li> <p>Starting - Preparing for training.</p> </li> <li> <p>Downloading - Optional stage for algorithms that support File training input mode. It indicates data is being downloaded to ML storage volumes.</p> </li> <li> <p>Training - Training is in progress.</p> </li> <li> <p>Uploading - Training is complete and model upload is in progress.</p> </li> </ul> <p>For the <code>Stopped</code> training status, Amazon SageMaker can return these secondary statuses:</p> <ul> <li> <p>MaxRuntimeExceeded - Job stopped as a result of maximum allowed runtime exceeded.</p> </li> </ul>"
        },
        "SecondaryStatus":{
          "shape":"SecondaryStatus",
          "documentation":"<p> Provides granular information about the system state. For more information, see <code>TrainingJobStatus</code>. </p>"
        },
        "FailureReason":{
          "shape":"FailureReason",
          "documentation":"<p>If the training job failed, the reason it failed. </p>"
        },
        "HyperParameters":{
          "shape":"HyperParameters",
          "documentation":"<p>Algorithm-specific parameters. </p>"
        },
        "AlgorithmSpecification":{
          "shape":"AlgorithmSpecification",
          "documentation":"<p>Information about the algorithm used for training, and algorithm metadata. </p>"
        },
        "RoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The AWS Identity and Access Management (IAM) role configured for the training job. </p>"
        },
        "InputDataConfig":{
          "shape":"InputDataConfig",
          "documentation":"<p>An array of <code>Channel</code> objects that describes each data input channel. </p>"
        },
        "OutputDataConfig":{
          "shape":"OutputDataConfig",
          "documentation":"<p>The S3 path where model artifacts that you configured when creating the job are stored. Amazon SageMaker creates subfolders for model artifacts. </p>"
        },
        "ResourceConfig":{
          "shape":"ResourceConfig",
          "documentation":"<p>Resources, including ML compute instances and ML storage volumes, that are configured for model training. </p>"
        },
        "VpcConfig":{"shape":"VpcConfig"},
        "StoppingCondition":{
          "shape":"StoppingCondition",
          "documentation":"<p>The condition under which to stop the training job. </p>"
        },
        "CreationTime":{
          "shape":"Timestamp",
          "documentation":"<p>A timestamp that indicates when the training job was created.</p>"
        },
        "TrainingStartTime":{
          "shape":"Timestamp",
          "documentation":"<p>A timestamp that indicates when training started.</p>"
        },
        "TrainingEndTime":{
          "shape":"Timestamp",
          "documentation":"<p>A timestamp that indicates when model training ended.</p>"
        },
        "LastModifiedTime":{
          "shape":"Timestamp",
          "documentation":"<p>A timestamp that indicates when the status of the training job was last modified.</p>"
        },
        "SecondaryStatusTransitions":{"shape":"SecondaryStatusTransitions"},
        "FinalMetricDataList":{"shape":"FinalMetricDataList"},
        "EnableNetworkIsolation":{"shape":"Boolean"},
        "EnableInterContainerTrafficEncryption":{"shape":"Boolean"},
        "EnableManagedSpotTraining":{"shape":"Boolean"},
        "CheckpointConfig":{"shape":"CheckpointConfig"},
        "TrainingTimeInSeconds":{"shape":"TrainingTimeInSeconds"},
        "BillableTimeInSeconds":{"shape":"BillableTimeInSeconds"},
        "DebugConfig":{
          "shape":"DebugConfig",
          "internalonly":true
        },
        "RuleMonitoringStatuses":{
          "shape":"RuleMonitoringStatuses",
          "internalonly":true
        },
        "ExperimentConfig":{
          "shape":"ExperimentConfig",
          "internalonly":true
        }
      }
    },
    "DescribeTransformJobRequest":{
      "type":"structure",
      "required":["TransformJobName"],
      "members":{
        "TransformJobName":{"shape":"TransformJobName"}
      }
    },
    "DescribeTransformJobResponse":{
      "type":"structure",
      "required":[
        "TransformJobName",
        "TransformJobArn",
        "TransformJobStatus",
        "ModelName",
        "TransformInput",
        "TransformResources",
        "CreationTime"
      ],
      "members":{
        "TransformJobName":{"shape":"TransformJobName"},
        "TransformJobArn":{"shape":"TransformJobArn"},
        "TransformJobStatus":{"shape":"TransformJobStatus"},
        "FailureReason":{"shape":"FailureReason"},
        "ModelName":{"shape":"ModelName"},
        "MaxConcurrentTransforms":{"shape":"MaxConcurrentTransforms"},
        "MaxPayloadInMB":{"shape":"MaxPayloadInMB"},
        "BatchStrategy":{"shape":"BatchStrategy"},
        "Environment":{"shape":"TransformEnvironmentMap"},
        "TransformInput":{"shape":"TransformInput"},
        "TransformOutput":{"shape":"TransformOutput"},
        "TransformResources":{"shape":"TransformResources"},
        "CreationTime":{"shape":"Timestamp"},
        "TransformStartTime":{"shape":"Timestamp"},
        "TransformEndTime":{"shape":"Timestamp"},
        "LabelingJobArn":{"shape":"LabelingJobArn"},
        "AutoMLJobArn":{
          "shape":"AutoMLJobArn",
          "internalonly":true
        },
        "TransformJobProgress":{
          "shape":"TransformJobProgress",
          "internalonly":true
        },
        "DataProcessing":{"shape":"DataProcessing"},
        "ExperimentConfig":{
          "shape":"ExperimentConfig",
          "internalonly":true
        }
      }
    },
    "DescribeTrialComponentRequest":{
      "type":"structure",
      "required":["TrialComponentName"],
      "members":{
        "TrialComponentName":{"shape":"ExperimentEntityName"}
      }
    },
    "DescribeTrialComponentResponse":{
      "type":"structure",
      "members":{
        "TrialComponentName":{"shape":"ExperimentEntityName"},
        "TrialComponentArn":{"shape":"TrialComponentArn"},
        "TrialComponentDisplayName":{"shape":"ExperimentEntityName"},
        "Source":{"shape":"TrialComponentSource"},
        "TrialComponentStatus":{"shape":"TrialComponentStatus"},
        "StartTime":{"shape":"Timestamp"},
        "EndTime":{"shape":"Timestamp"},
        "CreationTime":{"shape":"Timestamp"},
        "CreatedBy":{"shape":"UserContext"},
        "LastModifiedTime":{"shape":"Timestamp"},
        "LastModifiedBy":{"shape":"UserContext"},
        "Parameters":{"shape":"TrialComponentParameters"},
        "InputArtifacts":{"shape":"TrialComponentArtifacts"},
        "OutputArtifacts":{"shape":"TrialComponentArtifacts"},
        "Metrics":{"shape":"TrialComponentMetricSummaries"}
      }
    },
    "DescribeTrialRequest":{
      "type":"structure",
      "required":["TrialName"],
      "members":{
        "TrialName":{"shape":"ExperimentEntityName"}
      }
    },
    "DescribeTrialResponse":{
      "type":"structure",
      "members":{
        "TrialName":{"shape":"ExperimentEntityName"},
        "TrialArn":{"shape":"TrialArn"},
        "ExperimentName":{"shape":"ExperimentEntityName"},
        "Source":{"shape":"TrialSource"},
        "CreationTime":{"shape":"Timestamp"},
        "CreatedBy":{"shape":"UserContext"},
        "LastModifiedTime":{"shape":"Timestamp"},
        "LastModifiedBy":{"shape":"UserContext"}
      }
    },
    "DescribeUserProfileRequest":{
      "type":"structure",
      "members":{
        "DomainId":{"shape":"ResourceId"},
        "IdentityId":{"shape":"IdentityId"}
      }
    },
    "DescribeUserProfileResponse":{
      "type":"structure",
      "members":{
        "EfsUid":{"shape":"EfsUid"},
        "IdentityId":{"shape":"IdentityId"},
        "Status":{"shape":"UserStatus"},
        "UserPolicy":{"shape":"String2048"},
        "UserSettings":{"shape":"UserSettings"}
      }
    },
    "DescribeWorkforceRequest":{
      "type":"structure",
      "required":["WorkforceName"],
      "members":{
        "WorkforceName":{"shape":"WorkforceName"}
      }
    },
    "DescribeWorkforceResponse":{
      "type":"structure",
      "required":["Workforce"],
      "members":{
        "Workforce":{"shape":"Workforce"}
      }
    },
    "DescribeWorkteamRequest":{
      "type":"structure",
      "required":["WorkteamName"],
      "members":{
        "WorkteamName":{"shape":"WorkteamName"}
      }
    },
    "DescribeWorkteamResponse":{
      "type":"structure",
      "required":["Workteam"],
      "members":{
        "Workteam":{"shape":"Workteam"}
      }
    },
    "DesiredWeightAndCapacity":{
      "type":"structure",
      "required":["VariantName"],
      "members":{
        "VariantName":{
          "shape":"VariantName",
          "documentation":"<p>The name of the variant to update.</p>"
        },
        "DesiredWeight":{
          "shape":"VariantWeight",
          "documentation":"<p>The variant's weight.</p>"
        },
        "DesiredInstanceCount":{
          "shape":"TaskCount",
          "documentation":"<p>The variant's capacity.</p>"
        }
      },
      "documentation":"<p>Specifies weight and capacity values for a production variant.</p>"
    },
    "DesiredWeightAndCapacityList":{
      "type":"list",
      "member":{"shape":"DesiredWeightAndCapacity"},
      "min":1
    },
    "DestinationS3Uri":{
      "type":"string",
      "max":512,
      "pattern":"^(https|s3)://([^/])/?(.*)$"
    },
    "DetailedAlgorithmStatus":{
      "type":"string",
      "enum":[
        "NotStarted",
        "InProgress",
        "Completed",
        "Failed"
      ]
    },
    "DetailedModelPackageStatus":{
      "type":"string",
      "enum":[
        "NotStarted",
        "InProgress",
        "Completed",
        "Failed"
      ]
    },
    "DirectInternetAccess":{
      "type":"string",
      "enum":[
        "Enabled",
        "Disabled"
      ]
    },
    "DirectoryPath":{
      "type":"string",
      "max":4096,
      "pattern":".*"
    },
    "DisassociateAdditionalCodeRepositories":{"type":"boolean"},
    "DisassociateDefaultCodeRepository":{"type":"boolean"},
    "DisassociateNotebookInstanceAcceleratorTypes":{"type":"boolean"},
    "DisassociateNotebookInstanceLifecycleConfig":{"type":"boolean"},
    "DisassociateTrialComponentRequest":{
      "type":"structure",
      "required":[
        "TrialComponentName",
        "TrialName"
      ],
      "members":{
        "TrialComponentName":{"shape":"ExperimentEntityName"},
        "TrialName":{"shape":"ExperimentEntityName"},
        "DelegatedAccountId":{
          "shape":"String",
          "internalonly":true
        }
      }
    },
    "DisassociateTrialComponentResponse":{
      "type":"structure",
      "members":{
        "TrialComponentArn":{"shape":"TrialComponentArn"},
        "TrialArn":{"shape":"TrialArn"}
      }
    },
    "Dollars":{
      "type":"integer",
      "max":1,
      "min":0
    },
    "DomainDetails":{
      "type":"structure",
      "members":{
        "DefaultSettings":{"shape":"UserSettings"},
        "DomainArn":{"shape":"String256"},
        "IsDefaultDomain":{"shape":"IsDefaultDomain"},
        "Status":{"shape":"DomainStatus"},
        "SubnetIds":{"shape":"Subnets"},
        "Url":{"shape":"String1024"},
        "VpcId":{"shape":"VpcId"}
      }
    },
    "DomainList":{
      "type":"list",
      "member":{"shape":"DomainDetails"}
    },
    "DomainStatus":{
      "type":"string",
      "enum":[
        "Deleting",
        "Failed",
        "InService",
        "Pending"
      ]
    },
    "DoubleParameterValue":{"type":"double"},
    "DryRun":{"type":"boolean"},
    "DryRunNotebookLocation":{"type":"string"},
    "EfsUid":{
      "type":"string",
      "max":10,
      "pattern":"\\d+"
    },
    "EnableCapture":{"type":"boolean"},
    "EnableNetworkIsolation":{"type":"boolean"},
    "EndpointArn":{
      "type":"string",
      "max":2048,
      "min":20,
      "pattern":"arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:endpoint/.*"
    },
    "EndpointConfigArn":{
      "type":"string",
      "max":2048,
      "min":20,
      "pattern":"arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:endpoint-config/.*"
    },
    "EndpointConfigName":{
      "type":"string",
      "max":63,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    },
    "EndpointConfigNameContains":{
      "type":"string",
      "max":63,
      "pattern":"[a-zA-Z0-9-]+"
    },
    "EndpointConfigSortKey":{
      "type":"string",
      "enum":[
        "Name",
        "CreationTime"
      ]
    },
    "EndpointConfigSummary":{
      "type":"structure",
      "required":[
        "EndpointConfigName",
        "EndpointConfigArn",
        "CreationTime"
      ],
      "members":{
        "EndpointConfigName":{
          "shape":"EndpointConfigName",
          "documentation":"<p>The name of the endpoint configuration.</p>"
        },
        "EndpointConfigArn":{
          "shape":"EndpointConfigArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the endpoint configuration.</p>"
        },
        "CreationTime":{
          "shape":"Timestamp",
          "documentation":"<p>A timestamp that shows when the endpoint configuration was created.</p>"
        }
      },
      "documentation":"<p>Provides summary information for an endpoint configuration.</p>"
    },
    "EndpointConfigSummaryList":{
      "type":"list",
      "member":{"shape":"EndpointConfigSummary"}
    },
    "EndpointInput":{
      "type":"structure",
      "required":[
        "EndpointName",
        "LocalPath"
      ],
      "members":{
        "EndpointName":{"shape":"EndpointName"},
        "LocalPath":{"shape":"AnalyticsLocalPath"},
        "S3DownloadMode":{"shape":"AnalyticsS3DownloadMode"},
        "S3InputMode":{"shape":"AnalyticsS3InputMode"},
        "S3DataDistributionType":{"shape":"AnalyticsS3DataDistributionType"}
      }
    },
    "EndpointName":{
      "type":"string",
      "max":63,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    },
    "EndpointNameContains":{
      "type":"string",
      "max":63,
      "pattern":"[a-zA-Z0-9-]+"
    },
    "EndpointSortKey":{
      "type":"string",
      "enum":[
        "Name",
        "CreationTime",
        "Status"
      ]
    },
    "EndpointStatus":{
      "type":"string",
      "enum":[
        "OutOfService",
        "Creating",
        "Updating",
        "SystemUpdating",
        "RollingBack",
        "InService",
        "Deleting",
        "Failed"
      ]
    },
    "EndpointSummary":{
      "type":"structure",
      "required":[
        "EndpointName",
        "EndpointArn",
        "CreationTime",
        "LastModifiedTime",
        "EndpointStatus"
      ],
      "members":{
        "EndpointName":{
          "shape":"EndpointName",
          "documentation":"<p>The name of the endpoint.</p>"
        },
        "EndpointArn":{
          "shape":"EndpointArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the endpoint.</p>"
        },
        "CreationTime":{
          "shape":"Timestamp",
          "documentation":"<p>A timestamp that shows when the endpoint was created.</p>"
        },
        "LastModifiedTime":{
          "shape":"Timestamp",
          "documentation":"<p>A timestamp that shows when the endpoint was last modified.</p>"
        },
        "EndpointStatus":{
          "shape":"EndpointStatus",
          "documentation":"<p>The status of the endpoint.</p>"
        }
      },
      "documentation":"<p>Provides summary information for an endpoint.</p>"
    },
    "EndpointSummaryList":{
      "type":"list",
      "member":{"shape":"EndpointSummary"}
    },
    "EnsembledModelLocation":{"type":"string"},
    "EntityDescription":{
      "type":"string",
      "max":1024,
      "pattern":"[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*"
    },
    "EntityName":{
      "type":"string",
      "max":63,
      "min":1,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*$"
    },
    "EnvironmentArn":{"type":"string"},
    "EnvironmentDefinitionLayer":{
      "type":"structure",
      "required":["LayerType"],
      "members":{
        "LayerType":{"shape":"EnvironmentDefinitionLayerType"},
        "LocationUri":{"shape":"LocationUri"},
        "EnvironmentVersionArn":{"shape":"EnvironmentVersionArn"},
        "Content":{"shape":"Content"}
      }
    },
    "EnvironmentDefinitionLayerType":{
      "type":"string",
      "enum":[
        "IMAGE_REF",
        "DOCKER_FILE",
        "ENVIRONMENT_VERSION_REF",
        "LAYER",
        "FILE",
        "SOURCE",
        "JSON"
      ]
    },
    "EnvironmentDefinitionLayers":{
      "type":"list",
      "member":{"shape":"EnvironmentDefinitionLayer"}
    },
    "EnvironmentKey":{
      "type":"string",
      "max":1024,
      "pattern":"[a-zA-Z_][a-zA-Z0-9_]*"
    },
    "EnvironmentLayer":{
      "type":"structure",
      "required":["LayerType"],
      "members":{
        "LayerType":{"shape":"EnvironmentLayerType"},
        "LocationUri":{"shape":"LocationUri"},
        "EnvironmentVersionArn":{"shape":"EnvironmentVersionArn"},
        "Content":{"shape":"Content"},
        "LayerStatus":{"shape":"LayerStatus"}
      }
    },
    "EnvironmentLayerType":{
      "type":"string",
      "enum":[
        "IMAGE_REF",
        "ENVIRONMENT_VERSION_REF",
        "LAYER",
        "IMAGE_CONFIG"
      ]
    },
    "EnvironmentLayers":{
      "type":"list",
      "member":{"shape":"EnvironmentLayer"}
    },
    "EnvironmentMap":{
      "type":"map",
      "key":{"shape":"EnvironmentKey"},
      "value":{"shape":"EnvironmentValue"},
      "max":16
    },
    "EnvironmentName":{
      "type":"string",
      "max":63,
      "min":1,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    },
    "EnvironmentSortBy":{
      "type":"string",
      "enum":[
        "CREATE_TIME",
        "ENVIRONMENT_NAME"
      ]
    },
    "EnvironmentSortOrder":{
      "type":"string",
      "enum":[
        "ASCENDING",
        "DESCENDING"
      ]
    },
    "EnvironmentSummaries":{
      "type":"list",
      "member":{"shape":"EnvironmentSummary"}
    },
    "EnvironmentSummary":{
      "type":"structure",
      "members":{
        "CreationTime":{"shape":"CreationTime"},
        "LastModifiedTime":{"shape":"LastModifiedTime"},
        "EnvironmentArn":{"shape":"EnvironmentArn"},
        "EnvironmentName":{"shape":"EnvironmentName"},
        "Metadata":{"shape":"Metadata"}
      }
    },
    "EnvironmentValue":{
      "type":"string",
      "max":1024,
      "pattern":"[\\S\\s]*"
    },
    "EnvironmentVersionArn":{"type":"string"},
    "EnvironmentVersionName":{"type":"string"},
    "EnvironmentVersionNameContains":{"type":"string"},
    "EnvironmentVersionNames":{
      "type":"list",
      "member":{"shape":"EnvironmentVersionName"}
    },
    "EnvironmentVersionNumber":{"type":"integer"},
    "EnvironmentVersionSortBy":{
      "type":"string",
      "enum":[
        "CREATE_TIME",
        "ENVIRONMENT_VERSION_ID"
      ]
    },
    "EnvironmentVersionSortOrder":{
      "type":"string",
      "enum":[
        "ASCENDING",
        "DESCENDING"
      ]
    },
    "EnvironmentVersionStatus":{
      "type":"string",
      "enum":[
        "DEFINED",
        "BUILDING",
        "BUILT",
        "BUILD_FAILED",
        "PUBLISHING",
        "PUBLISHED",
        "PUBLISH_FAILED"
      ]
    },
    "EnvironmentVersionSummaries":{
      "type":"list",
      "member":{"shape":"EnvironmentVersionSummary"}
    },
    "EnvironmentVersionSummary":{
      "type":"structure",
      "members":{
        "CreationTime":{"shape":"CreationTime"},
        "LastModifiedTime":{"shape":"LastModifiedTime"},
        "EnvironmentVersionNumber":{"shape":"EnvironmentVersionNumber"},
        "EnvironmentVersionArn":{"shape":"EnvironmentVersionArn"},
        "EnvironmentVersionNames":{"shape":"EnvironmentVersionNames"},
        "Metadata":{"shape":"Metadata"}
      }
    },
    "ExecutionStatus":{
      "type":"string",
      "enum":[
        "Pending",
        "CompletedWithoutIssues",
        "CompletedWithIssues",
        "InProgress",
        "Failed",
        "Stopping",
        "Stopped"
      ]
    },
    "ExitMessage":{
      "type":"string",
      "max":1024,
      "pattern":".*"
    },
    "Experiment":{
      "type":"structure",
      "members":{
        "ExperimentName":{"shape":"ExperimentEntityName"},
        "ExperimentArn":{"shape":"ExperimentArn"},
        "Source":{"shape":"ExperimentSource"},
        "ExperimentDescription":{"shape":"ExperimentDescription"},
        "CreationTime":{"shape":"Timestamp"},
        "CreatedBy":{"shape":"UserContext"},
        "LastModifiedTime":{"shape":"Timestamp"},
        "LastModifiedBy":{"shape":"UserContext"},
        "Tags":{"shape":"TagList"}
      },
      "internalonly":true
    },
    "ExperimentArn":{
      "type":"string",
      "pattern":"arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:experiment/.*"
    },
    "ExperimentConfig":{
      "type":"structure",
      "members":{
        "ExperimentName":{"shape":"ExperimentConfigName"},
        "TrialName":{"shape":"ExperimentConfigName"},
        "TrialComponentDisplayName":{"shape":"ExperimentConfigName"}
      }
    },
    "ExperimentConfigName":{
      "type":"string",
      "max":64,
      "min":1,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    },
    "ExperimentDescription":{
      "type":"string",
      "max":3072,
      "pattern":".*"
    },
    "ExperimentEntityName":{
      "type":"string",
      "max":63,
      "min":1,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    },
    "ExperimentSource":{
      "type":"structure",
      "required":["SourceArn"],
      "members":{
        "SourceArn":{"shape":"ExperimentSourceArn"}
      }
    },
    "ExperimentSourceArn":{
      "type":"string",
      "pattern":"arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:.*"
    },
    "ExperimentSummaries":{
      "type":"list",
      "member":{"shape":"ExperimentSummary"}
    },
    "ExperimentSummary":{
      "type":"structure",
      "members":{
        "ExperimentArn":{"shape":"ExperimentArn"},
        "ExperimentName":{"shape":"ExperimentEntityName"},
        "CreationTime":{"shape":"Timestamp"},
        "LastModifiedTime":{"shape":"Timestamp"}
      }
    },
    "ExpirationInDays":{"type":"integer"},
    "ExportAutoMLTrialToModelRequest":{
      "type":"structure",
      "required":[
        "AutoMLJobName",
        "TrialIdentifier",
        "ModelName"
      ],
      "members":{
        "AutoMLJobName":{"shape":"AutoMLJobName"},
        "TrialIdentifier":{"shape":"TrialIdentifier"},
        "ModelName":{"shape":"ModelName"}
      }
    },
    "ExportAutoMLTrialToModelResponse":{
      "type":"structure",
      "required":["ModelArn"],
      "members":{
        "ModelArn":{"shape":"ModelArn"}
      }
    },
    "FailedObjects":{
      "type":"long",
      "min":0
    },
    "FailureReason":{
      "type":"string",
      "max":1024
    },
    "FasCredentials":{
      "type":"string",
      "sensitive":true
    },
    "FileSystemAccessMode":{
      "type":"string",
      "enum":[
        "rw",
        "ro"
      ]
    },
    "FileSystemDataSource":{
      "type":"structure",
      "required":[
        "FileSystemId",
        "FileSystemAccessMode",
        "FileSystemType",
        "DirectoryPath"
      ],
      "members":{
        "FileSystemId":{"shape":"FileSystemId"},
        "FileSystemAccessMode":{"shape":"FileSystemAccessMode"},
        "FileSystemType":{"shape":"FileSystemType"},
        "DirectoryPath":{"shape":"DirectoryPath"}
      }
    },
    "FileSystemId":{
      "type":"string",
      "min":11,
      "pattern":".*"
    },
    "FileSystemType":{
      "type":"string",
      "enum":[
        "EFS",
        "FSxLustre"
      ]
    },
    "Filter":{
      "type":"structure",
      "required":["Name"],
      "members":{
        "Name":{"shape":"ResourcePropertyName"},
        "Operator":{"shape":"Operator"},
        "Value":{"shape":"FilterValue"}
      }
    },
    "FilterList":{
      "type":"list",
      "member":{"shape":"Filter"},
      "max":20,
      "min":1
    },
    "FilterValue":{
      "type":"string",
      "max":1024,
      "min":1,
      "pattern":".+"
    },
    "FinalAutoMLJobObjectiveMetric":{
      "type":"structure",
      "required":[
        "MetricName",
        "Value"
      ],
      "members":{
        "Type":{"shape":"AutoMLJobObjectiveType"},
        "MetricName":{"shape":"MetricName"},
        "Value":{"shape":"MetricValue"}
      }
    },
    "FinalHyperParameterTuningJobObjectiveMetric":{
      "type":"structure",
      "required":[
        "MetricName",
        "Value"
      ],
      "members":{
        "Type":{"shape":"HyperParameterTuningJobObjectiveType"},
        "MetricName":{"shape":"MetricName"},
        "Value":{"shape":"MetricValue"}
      }
    },
    "FinalMetricDataList":{
      "type":"list",
      "member":{"shape":"MetricData"},
      "max":40,
      "min":0
    },
    "Float":{"type":"float"},
    "FlowDefinitionArn":{
      "type":"string",
      "max":1024,
      "pattern":"arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:flow-definition/.*"
    },
    "FlowDefinitionName":{
      "type":"string",
      "max":63,
      "min":1,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    },
    "FlowDefinitionOutputConfig":{
      "type":"structure",
      "required":["S3OutputPath"],
      "members":{
        "S3OutputPath":{"shape":"S3Uri"},
        "KmsKeyId":{"shape":"KmsKeyId"}
      }
    },
    "FlowDefinitionStatus":{
      "type":"string",
      "enum":[
        "Initializing",
        "Active",
        "Failed"
      ]
    },
    "FlowDefinitionSummaries":{
      "type":"list",
      "member":{"shape":"FlowDefinitionSummary"}
    },
    "FlowDefinitionSummary":{
      "type":"structure",
      "required":[
        "FlowDefinitionName",
        "FlowDefinitionArn",
        "FlowDefinitionStatus",
        "CreationTime"
      ],
      "members":{
        "FlowDefinitionName":{"shape":"FlowDefinitionName"},
        "FlowDefinitionArn":{"shape":"FlowDefinitionArn"},
        "FlowDefinitionStatus":{"shape":"FlowDefinitionStatus"},
        "CreationTime":{"shape":"Timestamp"},
        "LastModifiedTime":{"shape":"Timestamp"},
        "FailureReason":{"shape":"FailureReason"}
      }
    },
    "FlowDefinitionTaskAvailabilityLifetimeInSeconds":{
      "type":"integer",
      "max":864000,
      "min":1
    },
    "FlowDefinitionTaskCount":{
      "type":"integer",
      "max":9,
      "min":1
    },
    "FlowDefinitionTaskDescription":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":".+"
    },
    "FlowDefinitionTaskKeyword":{
      "type":"string",
      "max":30,
      "min":1,
      "pattern":"^[A-Za-z0-9]+( [A-Za-z0-9]+)*$"
    },
    "FlowDefinitionTaskKeywords":{
      "type":"list",
      "member":{"shape":"FlowDefinitionTaskKeyword"},
      "max":5,
      "min":1
    },
    "FlowDefinitionTaskTimeLimitInSeconds":{
      "type":"integer",
      "max":28800,
      "min":30
    },
    "FlowDefinitionTaskTitle":{
      "type":"string",
      "max":128,
      "min":1,
      "pattern":"^[\\t\\n\\r -\\uD7FF\\uE000-\\uFFFD]*$"
    },
    "Framework":{
      "type":"string",
      "enum":[
        "TENSORFLOW",
        "MXNET",
        "ONNX",
        "PYTORCH",
        "XGBOOST"
      ]
    },
    "GetSearchSuggestionsRequest":{
      "type":"structure",
      "required":["Resource"],
      "members":{
        "Resource":{"shape":"ResourceType"},
        "SuggestionQuery":{"shape":"SuggestionQuery"}
      }
    },
    "GetSearchSuggestionsResponse":{
      "type":"structure",
      "members":{
        "PropertyNameSuggestions":{"shape":"PropertyNameSuggestionList"}
      }
    },
    "GitConfig":{
      "type":"structure",
      "required":["RepositoryUrl"],
      "members":{
        "RepositoryUrl":{"shape":"GitConfigUrl"},
        "Branch":{"shape":"Branch"},
        "SecretArn":{"shape":"SecretArn"}
      }
    },
    "GitConfigForUpdate":{
      "type":"structure",
      "members":{
        "SecretArn":{"shape":"SecretArn"}
      }
    },
    "GitConfigUrl":{
      "type":"string",
      "pattern":"^https://([^/]+)/?(.*)$"
    },
    "GlobalIdleTimeoutInMinutes":{"type":"integer"},
    "HumanLoopActivationConditions":{
      "type":"string",
      "max":10240
    },
    "HumanLoopActivationConditionsConfig":{
      "type":"structure",
      "required":["HumanLoopActivationConditions"],
      "members":{
        "HumanLoopActivationConditions":{"shape":"HumanLoopActivationConditions"}
      }
    },
    "HumanLoopActivationConfig":{
      "type":"structure",
      "required":["HumanLoopRequestSource"],
      "members":{
        "HumanLoopRequestSource":{"shape":"HumanLoopRequestSource"},
        "HumanLoopActivationConditionsConfig":{"shape":"HumanLoopActivationConditionsConfig"}
      }
    },
    "HumanLoopConfig":{
      "type":"structure",
      "required":[
        "WorkteamArn",
        "HumanTaskUiArn",
        "TaskTitle",
        "TaskDescription",
        "TaskCount"
      ],
      "members":{
        "WorkteamArn":{"shape":"WorkteamArn"},
        "HumanTaskUiArn":{"shape":"HumanTaskUiArn"},
        "TaskTitle":{"shape":"FlowDefinitionTaskTitle"},
        "TaskDescription":{"shape":"FlowDefinitionTaskDescription"},
        "TaskCount":{"shape":"FlowDefinitionTaskCount"},
        "TaskAvailabilityLifetimeInSeconds":{"shape":"FlowDefinitionTaskAvailabilityLifetimeInSeconds"},
        "TaskTimeLimitInSeconds":{"shape":"FlowDefinitionTaskTimeLimitInSeconds"},
        "TaskKeywords":{"shape":"FlowDefinitionTaskKeywords"}
      }
    },
    "HumanLoopRequestSource":{
      "type":"structure",
      "required":["AwsManagedHumanLoopRequestSource"],
      "members":{
        "AwsManagedHumanLoopRequestSource":{"shape":"AwsManagedHumanLoopRequestSource"}
      }
    },
    "HumanTaskConfig":{
      "type":"structure",
      "required":[
        "WorkteamArn",
        "UiConfig",
        "PreHumanTaskLambdaArn",
        "TaskTitle",
        "TaskDescription",
        "NumberOfHumanWorkersPerDataObject",
        "TaskTimeLimitInSeconds",
        "AnnotationConsolidationConfig"
      ],
      "members":{
        "WorkteamArn":{"shape":"WorkteamArn"},
        "UiConfig":{"shape":"UiConfig"},
        "PreHumanTaskLambdaArn":{"shape":"LambdaFunctionArn"},
        "TaskKeywords":{"shape":"TaskKeywords"},
        "TaskTitle":{"shape":"TaskTitle"},
        "TaskDescription":{"shape":"TaskDescription"},
        "NumberOfHumanWorkersPerDataObject":{"shape":"NumberOfHumanWorkersPerDataObject"},
        "TaskTimeLimitInSeconds":{"shape":"TaskTimeLimitInSeconds"},
        "TaskAvailabilityLifetimeInSeconds":{"shape":"TaskAvailabilityLifetimeInSeconds"},
        "MaxConcurrentTaskCount":{"shape":"MaxConcurrentTaskCount"},
        "AnnotationConsolidationConfig":{"shape":"AnnotationConsolidationConfig"},
        "PublicWorkforceTaskPrice":{"shape":"PublicWorkforceTaskPrice"}
      }
    },
    "HumanTaskUiArn":{
      "type":"string",
      "max":1024,
      "pattern":"arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:human-task-ui/.*"
    },
    "HumanTaskUiName":{
      "type":"string",
      "max":63,
      "min":1,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    },
    "HumanTaskUiSummaries":{
      "type":"list",
      "member":{"shape":"HumanTaskUiSummary"}
    },
    "HumanTaskUiSummary":{
      "type":"structure",
      "required":[
        "HumanTaskUiName",
        "HumanTaskUiArn",
        "CreationTime",
        "LastModifiedTime"
      ],
      "members":{
        "HumanTaskUiName":{"shape":"HumanTaskUiName"},
        "HumanTaskUiArn":{"shape":"HumanTaskUiArn"},
        "CreationTime":{"shape":"Timestamp"},
        "LastModifiedTime":{"shape":"Timestamp"}
      }
    },
    "HyperParameterAlgorithmSpecification":{
      "type":"structure",
      "required":["TrainingInputMode"],
      "members":{
        "TrainingImage":{"shape":"AlgorithmImage"},
        "TrainingInputMode":{"shape":"TrainingInputMode"},
        "AlgorithmName":{"shape":"ArnOrName"},
        "MetricDefinitions":{"shape":"MetricDefinitionList"}
      }
    },
    "HyperParameterScalingType":{
      "type":"string",
      "enum":[
        "Auto",
        "Linear",
        "Logarithmic",
        "ReverseLogarithmic"
      ]
    },
    "HyperParameterSpecification":{
      "type":"structure",
      "required":[
        "Name",
        "Type"
      ],
      "members":{
        "Name":{"shape":"ParameterName"},
        "Description":{"shape":"EntityDescription"},
        "Type":{"shape":"ParameterType"},
        "Range":{"shape":"ParameterRange"},
        "IsTunable":{"shape":"Boolean"},
        "IsRequired":{"shape":"Boolean"},
        "DefaultValue":{"shape":"ParameterValue"},
        "DefaultScalingType":{
          "shape":"ParameterScalingType",
          "internalonly":true
        }
      }
    },
    "HyperParameterSpecifications":{
      "type":"list",
      "member":{"shape":"HyperParameterSpecification"},
      "max":100,
      "min":0
    },
    "HyperParameterTrainingJobDefinition":{
      "type":"structure",
      "required":[
        "AlgorithmSpecification",
        "RoleArn",
        "OutputDataConfig",
        "ResourceConfig",
        "StoppingCondition"
      ],
      "members":{
        "DefinitionName":{
          "shape":"HyperParameterTrainingJobDefinitionName",
          "internalonly":true
        },
        "TuningObjective":{
          "shape":"HyperParameterTuningJobObjective",
          "internalonly":true
        },
        "HyperParameterRanges":{
          "shape":"ParameterRanges",
          "internalonly":true
        },
        "StaticHyperParameters":{"shape":"HyperParameters"},
        "AlgorithmSpecification":{"shape":"HyperParameterAlgorithmSpecification"},
        "RoleArn":{"shape":"RoleArn"},
        "InputDataConfig":{"shape":"InputDataConfig"},
        "VpcConfig":{"shape":"VpcConfig"},
        "OutputDataConfig":{"shape":"OutputDataConfig"},
        "ResourceConfig":{"shape":"ResourceConfig"},
        "StoppingCondition":{"shape":"StoppingCondition"},
        "EnableNetworkIsolation":{"shape":"Boolean"},
        "EnableInterContainerTrafficEncryption":{"shape":"Boolean"},
        "EnableManagedSpotTraining":{"shape":"Boolean"},
        "CheckpointConfig":{"shape":"CheckpointConfig"}
      }
    },
    "HyperParameterTrainingJobDefinitionName":{
      "type":"string",
      "max":64,
      "min":1,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    },
    "HyperParameterTrainingJobDefinitions":{
      "type":"list",
      "member":{"shape":"HyperParameterTrainingJobDefinition"},
      "max":10,
      "min":1
    },
    "HyperParameterTrainingJobInstancePool":{
      "type":"structure",
      "required":[
        "InstanceType",
        "PoolSize"
      ],
      "members":{
        "InstanceType":{"shape":"TrainingInstanceType"},
        "PoolSize":{"shape":"TrainingInstanceCount"}
      }
    },
    "HyperParameterTrainingJobInstancePools":{
      "type":"list",
      "member":{"shape":"HyperParameterTrainingJobInstancePool"},
      "max":10,
      "min":1
    },
    "HyperParameterTrainingJobSummaries":{
      "type":"list",
      "member":{"shape":"HyperParameterTrainingJobSummary"}
    },
    "HyperParameterTrainingJobSummary":{
      "type":"structure",
      "required":[
        "TrainingJobName",
        "TrainingJobArn",
        "CreationTime",
        "TrainingJobStatus",
        "TunedHyperParameters"
      ],
      "members":{
        "TrainingJobDefinitionName":{
          "shape":"HyperParameterTrainingJobDefinitionName",
          "internalonly":true
        },
        "TrainingJobName":{"shape":"TrainingJobName"},
        "TrainingJobArn":{"shape":"TrainingJobArn"},
        "TuningJobName":{"shape":"HyperParameterTuningJobName"},
        "CreationTime":{"shape":"Timestamp"},
        "TrainingStartTime":{"shape":"Timestamp"},
        "TrainingEndTime":{"shape":"Timestamp"},
        "TrainingJobStatus":{"shape":"TrainingJobStatus"},
        "TunedHyperParameters":{"shape":"HyperParameters"},
        "FailureReason":{"shape":"FailureReason"},
        "FinalHyperParameterTuningJobObjectiveMetric":{"shape":"FinalHyperParameterTuningJobObjectiveMetric"},
        "ObjectiveStatus":{"shape":"ObjectiveStatus"}
      }
    },
    "HyperParameterTuningJobArn":{
      "type":"string",
      "max":256,
      "pattern":"arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:hyper-parameter-tuning-job/.*"
    },
    "HyperParameterTuningJobConfig":{
      "type":"structure",
      "required":[
        "Strategy",
        "ResourceLimits"
      ],
      "members":{
        "Strategy":{"shape":"HyperParameterTuningJobStrategyType"},
        "HyperParameterTuningJobObjective":{"shape":"HyperParameterTuningJobObjective"},
        "ResourceLimits":{"shape":"ResourceLimits"},
        "ParameterRanges":{"shape":"ParameterRanges"},
        "TrainingJobEarlyStoppingType":{"shape":"TrainingJobEarlyStoppingType"},
        "TrainingJobInstancePools":{
          "shape":"HyperParameterTrainingJobInstancePools",
          "internalonly":true
        },
        "TuningJobCompletionCriteria":{
          "shape":"TuningJobCompletionCriteria",
          "internalonly":true
        }
      }
    },
    "HyperParameterTuningJobName":{
      "type":"string",
      "max":32,
      "min":1,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    },
    "HyperParameterTuningJobObjective":{
      "type":"structure",
      "required":[
        "Type",
        "MetricName"
      ],
      "members":{
        "Type":{"shape":"HyperParameterTuningJobObjectiveType"},
        "MetricName":{"shape":"MetricName"}
      }
    },
    "HyperParameterTuningJobObjectiveType":{
      "type":"string",
      "enum":[
        "Maximize",
        "Minimize"
      ]
    },
    "HyperParameterTuningJobObjectives":{
      "type":"list",
      "member":{"shape":"HyperParameterTuningJobObjective"}
    },
    "HyperParameterTuningJobSortByOptions":{
      "type":"string",
      "enum":[
        "Name",
        "Status",
        "CreationTime"
      ]
    },
    "HyperParameterTuningJobStatus":{
      "type":"string",
      "enum":[
        "Completed",
        "InProgress",
        "Failed",
        "Stopped",
        "Stopping"
      ]
    },
    "HyperParameterTuningJobStrategyType":{
      "type":"string",
      "enum":[
        "Bayesian",
        "Random"
      ]
    },
    "HyperParameterTuningJobSummaries":{
      "type":"list",
      "member":{"shape":"HyperParameterTuningJobSummary"}
    },
    "HyperParameterTuningJobSummary":{
      "type":"structure",
      "required":[
        "HyperParameterTuningJobName",
        "HyperParameterTuningJobArn",
        "HyperParameterTuningJobStatus",
        "Strategy",
        "CreationTime",
        "TrainingJobStatusCounters",
        "ObjectiveStatusCounters"
      ],
      "members":{
        "HyperParameterTuningJobName":{"shape":"HyperParameterTuningJobName"},
        "HyperParameterTuningJobArn":{"shape":"HyperParameterTuningJobArn"},
        "HyperParameterTuningJobStatus":{"shape":"HyperParameterTuningJobStatus"},
        "Strategy":{"shape":"HyperParameterTuningJobStrategyType"},
        "CreationTime":{"shape":"Timestamp"},
        "HyperParameterTuningEndTime":{"shape":"Timestamp"},
        "LastModifiedTime":{"shape":"Timestamp"},
        "TrainingJobStatusCounters":{"shape":"TrainingJobStatusCounters"},
        "ObjectiveStatusCounters":{"shape":"ObjectiveStatusCounters"},
        "ResourceLimits":{"shape":"ResourceLimits"}
      }
    },
    "HyperParameterTuningJobWarmStartConfig":{
      "type":"structure",
      "required":[
        "ParentHyperParameterTuningJobs",
        "WarmStartType"
      ],
      "members":{
        "ParentHyperParameterTuningJobs":{"shape":"ParentHyperParameterTuningJobs"},
        "WarmStartType":{"shape":"HyperParameterTuningJobWarmStartType"}
      }
    },
    "HyperParameterTuningJobWarmStartType":{
      "type":"string",
      "enum":[
        "IdenticalDataAndAlgorithm",
        "TransferLearning"
      ]
    },
    "HyperParameters":{
      "type":"map",
      "key":{"shape":"ParameterKey"},
      "value":{"shape":"ParameterValue"},
      "max":100,
      "min":0
    },
    "IdentityId":{
      "type":"string",
      "max":32
    },
    "Image":{
      "type":"string",
      "max":255,
      "pattern":"[\\S]+"
    },
    "ImageDigest":{
      "type":"string",
      "max":72,
      "pattern":"^[Ss][Hh][Aa]256:[0-9a-fA-F]{64}$"
    },
    "ImageUri":{
      "type":"string",
      "max":255,
      "pattern":".*"
    },
    "ImageUrlOverrides":{
      "type":"structure",
      "members":{
        "DataBuilderImageUrl":{"shape":"AlgorithmImage"},
        "PipelineRecommenderImageUrl":{"shape":"AlgorithmImage"}
      }
    },
    "InferenceSpecification":{
      "type":"structure",
      "required":[
        "Containers",
        "SupportedTransformInstanceTypes",
        "SupportedRealtimeInferenceInstanceTypes",
        "SupportedContentTypes",
        "SupportedResponseMIMETypes"
      ],
      "members":{
        "Containers":{"shape":"ModelPackageContainerDefinitionList"},
        "SupportedTransformInstanceTypes":{"shape":"TransformInstanceTypes"},
        "SupportedRealtimeInferenceInstanceTypes":{"shape":"RealtimeInferenceInstanceTypes"},
        "SupportedContentTypes":{"shape":"ContentTypes"},
        "SupportedResponseMIMETypes":{"shape":"ResponseMIMETypes"}
      }
    },
    "InputConfig":{
      "type":"structure",
      "required":[
        "S3Uri",
        "DataInputConfig",
        "Framework"
      ],
      "members":{
        "S3Uri":{"shape":"S3Uri"},
        "DataInputConfig":{"shape":"DataInputConfig"},
        "Framework":{"shape":"Framework"}
      }
    },
    "InputDataConfig":{
      "type":"list",
      "member":{"shape":"Channel"},
      "max":20,
      "min":1
    },
    "InputModes":{
      "type":"list",
      "member":{"shape":"TrainingInputMode"},
      "min":1
    },
    "InstanceType":{
      "type":"string",
      "enum":[
        "ml.t2.medium",
        "ml.t2.large",
        "ml.t2.xlarge",
        "ml.t2.2xlarge",
        "ml.t3.medium",
        "ml.t3.large",
        "ml.t3.xlarge",
        "ml.t3.2xlarge",
        "ml.m4.xlarge",
        "ml.m4.2xlarge",
        "ml.m4.4xlarge",
        "ml.m4.10xlarge",
        "ml.m4.16xlarge",
        "ml.m5.xlarge",
        "ml.m5.2xlarge",
        "ml.m5.4xlarge",
        "ml.m5.12xlarge",
        "ml.m5.24xlarge",
        "ml.c4.xlarge",
        "ml.c4.2xlarge",
        "ml.c4.4xlarge",
        "ml.c4.8xlarge",
        "ml.c5.xlarge",
        "ml.c5.2xlarge",
        "ml.c5.4xlarge",
        "ml.c5.9xlarge",
        "ml.c5.18xlarge",
        "ml.c5d.xlarge",
        "ml.c5d.2xlarge",
        "ml.c5d.4xlarge",
        "ml.c5d.9xlarge",
        "ml.c5d.18xlarge",
        "ml.p2.xlarge",
        "ml.p2.8xlarge",
        "ml.p2.16xlarge",
        "ml.p3.2xlarge",
        "ml.p3.8xlarge",
        "ml.p3.16xlarge"
      ]
    },
    "Integer":{"type":"integer"},
    "IntegerParameterRange":{
      "type":"structure",
      "required":[
        "Name",
        "MinValue",
        "MaxValue"
      ],
      "members":{
        "Name":{"shape":"ParameterKey"},
        "MinValue":{"shape":"ParameterValue"},
        "MaxValue":{"shape":"ParameterValue"},
        "ScalingType":{"shape":"HyperParameterScalingType"}
      }
    },
    "IntegerParameterRangeSpecification":{
      "type":"structure",
      "required":[
        "MinValue",
        "MaxValue"
      ],
      "members":{
        "MinValue":{"shape":"ParameterValue"},
        "MaxValue":{"shape":"ParameterValue"}
      }
    },
    "IntegerParameterRanges":{
      "type":"list",
      "member":{"shape":"IntegerParameterRange"},
      "max":20,
      "min":0
    },
    "InterpretedModelLocation":{"type":"string"},
    "IsDefaultDomain":{"type":"boolean"},
    "JobReferenceCode":{
      "type":"string",
      "min":1,
      "pattern":".+"
    },
    "JobReferenceCodeContains":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":".+"
    },
    "JoinSource":{
      "type":"string",
      "enum":[
        "Input",
        "None"
      ]
    },
    "JsonContentType":{
      "type":"string",
      "min":1,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*\\/[a-zA-Z0-9](-*[a-zA-Z0-9.])*"
    },
    "JsonContentTypes":{
      "type":"list",
      "member":{"shape":"JsonContentType"},
      "max":10,
      "min":1
    },
    "JsonPath":{
      "type":"string",
      "max":63,
      "min":0
    },
    "KeepS3ArtifactsOnDelete":{"type":"boolean"},
    "KmsKeyId":{
      "type":"string",
      "max":2048,
      "pattern":".*"
    },
    "LabelAttributeName":{
      "type":"string",
      "max":127,
      "min":1,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    },
    "LabelCounter":{
      "type":"integer",
      "min":0
    },
    "LabelCounters":{
      "type":"structure",
      "members":{
        "TotalLabeled":{"shape":"LabelCounter"},
        "HumanLabeled":{"shape":"LabelCounter"},
        "MachineLabeled":{"shape":"LabelCounter"},
        "FailedNonRetryableError":{"shape":"LabelCounter"},
        "Unlabeled":{"shape":"LabelCounter"}
      }
    },
    "LabelCountersForWorkteam":{
      "type":"structure",
      "members":{
        "HumanLabeled":{"shape":"LabelCounter"},
        "PendingHuman":{"shape":"LabelCounter"},
        "Total":{"shape":"LabelCounter"}
      }
    },
    "LabelingJobAlgorithmSpecificationArn":{
      "type":"string",
      "max":2048,
      "pattern":"arn:.*"
    },
    "LabelingJobAlgorithmsConfig":{
      "type":"structure",
      "required":["LabelingJobAlgorithmSpecificationArn"],
      "members":{
        "LabelingJobAlgorithmSpecificationArn":{"shape":"LabelingJobAlgorithmSpecificationArn"},
        "InitialActiveLearningModelArn":{"shape":"ModelArn"},
        "LabelingJobResourceConfig":{"shape":"LabelingJobResourceConfig"}
      }
    },
    "LabelingJobArn":{
      "type":"string",
      "max":2048,
      "pattern":"arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:labeling-job/.*"
    },
    "LabelingJobDataAttributes":{
      "type":"structure",
      "members":{
        "ContentClassifiers":{"shape":"ContentClassifiers"}
      }
    },
    "LabelingJobDataSource":{
      "type":"structure",
      "required":["S3DataSource"],
      "members":{
        "S3DataSource":{"shape":"LabelingJobS3DataSource"}
      }
    },
    "LabelingJobForWorkteamSummary":{
      "type":"structure",
      "required":[
        "JobReferenceCode",
        "WorkRequesterAccountId",
        "CreationTime"
      ],
      "members":{
        "LabelingJobName":{"shape":"LabelingJobName"},
        "JobReferenceCode":{"shape":"JobReferenceCode"},
        "WorkRequesterAccountId":{"shape":"AccountId"},
        "CreationTime":{"shape":"Timestamp"},
        "LabelCounters":{"shape":"LabelCountersForWorkteam"},
        "NumberOfHumanWorkersPerDataObject":{"shape":"NumberOfHumanWorkersPerDataObject"}
      }
    },
    "LabelingJobForWorkteamSummaryList":{
      "type":"list",
      "member":{"shape":"LabelingJobForWorkteamSummary"}
    },
    "LabelingJobInputConfig":{
      "type":"structure",
      "required":["DataSource"],
      "members":{
        "DataSource":{"shape":"LabelingJobDataSource"},
        "DataAttributes":{"shape":"LabelingJobDataAttributes"}
      }
    },
    "LabelingJobName":{
      "type":"string",
      "max":63,
      "min":1,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    },
    "LabelingJobOutput":{
      "type":"structure",
      "required":["OutputDatasetS3Uri"],
      "members":{
        "OutputDatasetS3Uri":{"shape":"S3Uri"},
        "FinalActiveLearningModelArn":{"shape":"ModelArn"}
      }
    },
    "LabelingJobOutputConfig":{
      "type":"structure",
      "required":["S3OutputPath"],
      "members":{
        "S3OutputPath":{"shape":"S3Uri"},
        "KmsKeyId":{"shape":"KmsKeyId"}
      }
    },
    "LabelingJobResourceConfig":{
      "type":"structure",
      "members":{
        "VolumeKmsKeyId":{"shape":"KmsKeyId"}
      }
    },
    "LabelingJobS3DataSource":{
      "type":"structure",
      "required":["ManifestS3Uri"],
      "members":{
        "ManifestS3Uri":{"shape":"S3Uri"}
      }
    },
    "LabelingJobStatus":{
      "type":"string",
      "enum":[
        "InProgress",
        "Completed",
        "Failed",
        "Stopping",
        "Stopped"
      ]
    },
    "LabelingJobStoppingConditions":{
      "type":"structure",
      "members":{
        "MaxHumanLabeledObjectCount":{"shape":"MaxHumanLabeledObjectCount"},
        "MaxPercentageOfInputDatasetLabeled":{"shape":"MaxPercentageOfInputDatasetLabeled"}
      }
    },
    "LabelingJobSummary":{
      "type":"structure",
      "required":[
        "LabelingJobName",
        "LabelingJobArn",
        "CreationTime",
        "LastModifiedTime",
        "LabelingJobStatus",
        "LabelCounters",
        "WorkteamArn",
        "PreHumanTaskLambdaArn"
      ],
      "members":{
        "LabelingJobName":{"shape":"LabelingJobName"},
        "LabelingJobArn":{"shape":"LabelingJobArn"},
        "CreationTime":{"shape":"Timestamp"},
        "LastModifiedTime":{"shape":"Timestamp"},
        "LabelingJobStatus":{"shape":"LabelingJobStatus"},
        "LabelCounters":{"shape":"LabelCounters"},
        "WorkteamArn":{"shape":"WorkteamArn"},
        "PreHumanTaskLambdaArn":{"shape":"LambdaFunctionArn"},
        "AnnotationConsolidationLambdaArn":{"shape":"LambdaFunctionArn"},
        "FailureReason":{"shape":"FailureReason"},
        "LabelingJobOutput":{"shape":"LabelingJobOutput"},
        "InputConfig":{"shape":"LabelingJobInputConfig"}
      }
    },
    "LabelingJobSummaryList":{
      "type":"list",
      "member":{"shape":"LabelingJobSummary"}
    },
    "LambdaFunctionArn":{
      "type":"string",
      "max":2048,
      "pattern":"arn:aws[a-z\\-]*:lambda:[a-z]{2}-[a-z]+-\\d{1}:\\d{12}:function:[a-zA-Z0-9-_\\.]+(:(\\$LATEST|[a-zA-Z0-9-_]+))?"
    },
    "LastModifiedTime":{"type":"timestamp"},
    "LastModifiedTimeAfter":{"type":"timestamp"},
    "LastModifiedTimeBefore":{"type":"timestamp"},
    "LastMonitoringExecutionSummary":{
      "type":"structure",
      "required":[
        "ScheduledTime",
        "CreationTime",
        "LastModifiedTime",
        "MonitoringExecutionStatus"
      ],
      "members":{
        "ScheduledTime":{"shape":"Timestamp"},
        "CreationTime":{"shape":"Timestamp"},
        "LastModifiedTime":{"shape":"Timestamp"},
        "MonitoringExecutionStatus":{"shape":"ExecutionStatus"},
        "AnalyticsJobArn":{"shape":"AnalyticsJobArn"}
      }
    },
    "LayerStatus":{
      "type":"string",
      "enum":[
        "BUILT",
        "BUILD_FAILED",
        "PUBLISHING",
        "PUBLISHED",
        "PUBLISH_FAILED"
      ]
    },
    "ListAlgorithmsInput":{
      "type":"structure",
      "members":{
        "CreationTimeAfter":{"shape":"CreationTime"},
        "CreationTimeBefore":{"shape":"CreationTime"},
        "MaxResults":{"shape":"MaxResults"},
        "NameContains":{"shape":"NameContains"},
        "NextToken":{"shape":"NextToken"},
        "SortBy":{"shape":"AlgorithmSortBy"},
        "SortOrder":{"shape":"SortOrder"}
      }
    },
    "ListAlgorithmsOutput":{
      "type":"structure",
      "required":["AlgorithmSummaryList"],
      "members":{
        "AlgorithmSummaryList":{"shape":"AlgorithmSummaryList"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListAnalyticsJobsRequest":{
      "type":"structure",
      "members":{
        "CreationTimeAfter":{"shape":"Timestamp"},
        "CreationTimeBefore":{"shape":"Timestamp"},
        "LastModifiedTimeAfter":{"shape":"Timestamp"},
        "LastModifiedTimeBefore":{"shape":"Timestamp"},
        "NameContains":{"shape":"String"},
        "StatusEquals":{"shape":"AnalyticsJobStatus"},
        "SortBy":{"shape":"SortBy"},
        "SortOrder":{"shape":"SortOrder"},
        "NextToken":{"shape":"NextToken"},
        "MaxResults":{
          "shape":"MaxResults",
          "box":true
        }
      }
    },
    "ListAnalyticsJobsResponse":{
      "type":"structure",
      "required":["AnalyticsJobSummaries"],
      "members":{
        "AnalyticsJobSummaries":{"shape":"AnalyticsJobSummaries"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListAppsRequest":{
      "type":"structure",
      "members":{
        "NextToken":{"shape":"NextToken"},
        "MaxResults":{"shape":"MaxResults"},
        "SortOrder":{"shape":"SortOrder"},
        "SortBy":{"shape":"AppSortKey"},
        "LastUserActivityBefore":{"shape":"Timestamp"},
        "LastUserActivityAfter":{"shape":"Timestamp"},
        "DomainIdEquals":{"shape":"ResourceId"},
        "IdentityIdEquals":{"shape":"IdentityId"},
        "AppTypeEquals":{"shape":"AppType"},
        "AppNameContains":{"shape":"AppName"},
        "StatusEquals":{"shape":"AppStatus"}
      }
    },
    "ListAppsResponse":{
      "type":"structure",
      "members":{
        "Apps":{"shape":"AppList"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListAutoMLJobsRequest":{
      "type":"structure",
      "members":{
        "CreationTimeAfter":{"shape":"Timestamp"},
        "CreationTimeBefore":{"shape":"Timestamp"},
        "LastModifiedTimeAfter":{"shape":"Timestamp"},
        "LastModifiedTimeBefore":{"shape":"Timestamp"},
        "NameContains":{"shape":"AutoMLNameContains"},
        "StatusEquals":{"shape":"AutoMLJobStatus"},
        "SortOrder":{"shape":"AutoMLSortOrder"},
        "SortBy":{"shape":"AutoMLSortBy"},
        "MaxResults":{
          "shape":"AutoMLMaxResults",
          "box":true
        },
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListAutoMLJobsResponse":{
      "type":"structure",
      "required":["AutoMLJobSummaries"],
      "members":{
        "AutoMLJobSummaries":{"shape":"AutoMLJobSummaries"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListCodeRepositoriesInput":{
      "type":"structure",
      "members":{
        "CreationTimeAfter":{"shape":"CreationTime"},
        "CreationTimeBefore":{"shape":"CreationTime"},
        "LastModifiedTimeAfter":{"shape":"Timestamp"},
        "LastModifiedTimeBefore":{"shape":"Timestamp"},
        "MaxResults":{"shape":"MaxResults"},
        "NameContains":{"shape":"CodeRepositoryNameContains"},
        "NextToken":{"shape":"NextToken"},
        "SortBy":{"shape":"CodeRepositorySortBy"},
        "SortOrder":{"shape":"CodeRepositorySortOrder"}
      }
    },
    "ListCodeRepositoriesOutput":{
      "type":"structure",
      "required":["CodeRepositorySummaryList"],
      "members":{
        "CodeRepositorySummaryList":{"shape":"CodeRepositorySummaryList"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListCompilationJobsRequest":{
      "type":"structure",
      "members":{
        "NextToken":{"shape":"NextToken"},
        "MaxResults":{
          "shape":"MaxResults",
          "box":true
        },
        "CreationTimeAfter":{"shape":"CreationTime"},
        "CreationTimeBefore":{"shape":"CreationTime"},
        "LastModifiedTimeAfter":{"shape":"LastModifiedTime"},
        "LastModifiedTimeBefore":{"shape":"LastModifiedTime"},
        "NameContains":{"shape":"NameContains"},
        "StatusEquals":{"shape":"CompilationJobStatus"},
        "SortBy":{"shape":"ListCompilationJobsSortBy"},
        "SortOrder":{"shape":"SortOrder"}
      }
    },
    "ListCompilationJobsResponse":{
      "type":"structure",
      "required":["CompilationJobSummaries"],
      "members":{
        "CompilationJobSummaries":{"shape":"CompilationJobSummaries"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListCompilationJobsSortBy":{
      "type":"string",
      "enum":[
        "Name",
        "CreationTime",
        "Status"
      ]
    },
    "ListComponentJobsForAutoMLJobRequest":{
      "type":"structure",
      "required":["AutoMLJobName"],
      "members":{
        "AutoMLJobName":{"shape":"AutoMLJobName"},
        "StatusEquals":{"shape":"ComponentJobStatus"},
        "SortBy":{"shape":"AutoMLSortBy"},
        "SortOrder":{"shape":"AutoMLSortOrder"},
        "MaxResults":{
          "shape":"AutoMLMaxResults",
          "box":true
        },
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListComponentJobsForAutoMLJobResponse":{
      "type":"structure",
      "required":["ComponentJobSummaries"],
      "members":{
        "ComponentJobSummaries":{"shape":"ComponentJobSummaries"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListDomainsRequest":{
      "type":"structure",
      "members":{
        "NextToken":{"shape":"NextToken"},
        "MaxResults":{"shape":"MaxResults"}
      }
    },
    "ListDomainsResponse":{
      "type":"structure",
      "members":{
        "Domains":{"shape":"DomainList"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListEndpointConfigsInput":{
      "type":"structure",
      "members":{
        "SortBy":{
          "shape":"EndpointConfigSortKey",
          "documentation":"<p>The field to sort results by. The default is <code>CreationTime</code>.</p>"
        },
        "SortOrder":{
          "shape":"OrderKey",
          "documentation":"<p>The sort order for results. The default is <code>Ascending</code>.</p>"
        },
        "NextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>If the result of the previous <code>ListEndpointConfig</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of endpoint configurations, use the token in the next request. </p>"
        },
        "MaxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of training jobs to return in the response.</p>"
        },
        "NameContains":{
          "shape":"EndpointConfigNameContains",
          "documentation":"<p>A string in the endpoint configuration name. This filter returns only endpoint configurations whose name contains the specified string. </p>"
        },
        "CreationTimeBefore":{
          "shape":"Timestamp",
          "documentation":"<p>A filter that returns only endpoint configurations created before the specified time (timestamp).</p>"
        },
        "CreationTimeAfter":{
          "shape":"Timestamp",
          "documentation":"<p>A filter that returns only endpoint configurations created after the specified time (timestamp).</p>"
        }
      }
    },
    "ListEndpointConfigsOutput":{
      "type":"structure",
      "required":["EndpointConfigs"],
      "members":{
        "EndpointConfigs":{
          "shape":"EndpointConfigSummaryList",
          "documentation":"<p>An array of endpoint configurations.</p>"
        },
        "NextToken":{
          "shape":"PaginationToken",
          "documentation":"<p> If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of endpoint configurations, use it in the subsequent request </p>"
        }
      }
    },
    "ListEndpointsInput":{
      "type":"structure",
      "members":{
        "SortBy":{
          "shape":"EndpointSortKey",
          "documentation":"<p>Sorts the list of results. The default is <code>CreationTime</code>.</p>"
        },
        "SortOrder":{
          "shape":"OrderKey",
          "documentation":"<p>The sort order for results. The default is <code>Ascending</code>.</p>"
        },
        "NextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>If the result of a <code>ListEndpoints</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of endpoints, use the token in the next request.</p>"
        },
        "MaxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of endpoints to return in the response.</p>"
        },
        "NameContains":{
          "shape":"EndpointNameContains",
          "documentation":"<p>A string in endpoint names. This filter returns only endpoints whose name contains the specified string.</p>"
        },
        "CreationTimeBefore":{
          "shape":"Timestamp",
          "documentation":"<p>A filter that returns only endpoints that were created before the specified time (timestamp).</p>"
        },
        "CreationTimeAfter":{
          "shape":"Timestamp",
          "documentation":"<p>A filter that returns only endpoints that were created after the specified time (timestamp).</p>"
        },
        "LastModifiedTimeBefore":{
          "shape":"Timestamp",
          "documentation":"<p> A filter that returns only endpoints that were modified before the specified timestamp. </p>"
        },
        "LastModifiedTimeAfter":{
          "shape":"Timestamp",
          "documentation":"<p> A filter that returns only endpoints that were modified after the specified timestamp. </p>"
        },
        "StatusEquals":{
          "shape":"EndpointStatus",
          "documentation":"<p> A filter that returns only endpoints with the specified status. </p>"
        }
      }
    },
    "ListEndpointsOutput":{
      "type":"structure",
      "required":["Endpoints"],
      "members":{
        "Endpoints":{
          "shape":"EndpointSummaryList",
          "documentation":"<p> An array or endpoint objects. </p>"
        },
        "NextToken":{
          "shape":"PaginationToken",
          "documentation":"<p> If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of training jobs, use it in the subsequent request. </p>"
        }
      }
    },
    "ListEnvironmentVersionsRequest":{
      "type":"structure",
      "required":["EnvironmentName"],
      "members":{
        "EnvironmentName":{"shape":"EnvironmentName"},
        "CreationTimeAfter":{"shape":"CreationTimeAfter"},
        "CreationTimeBefore":{"shape":"CreationTimeBefore"},
        "LastModifiedTimeAfter":{"shape":"LastModifiedTimeAfter"},
        "LastModifiedTimeBefore":{"shape":"LastModifiedTimeBefore"},
        "MaxResults":{"shape":"MaxResults"},
        "MetadataContainsKey":{"shape":"MetadataContainsKey"},
        "EnvironmentVersionNameContains":{"shape":"EnvironmentVersionNameContains"},
        "NextToken":{"shape":"NextToken"},
        "SortBy":{"shape":"EnvironmentVersionSortBy"},
        "SortOrder":{"shape":"EnvironmentVersionSortOrder"}
      }
    },
    "ListEnvironmentVersionsResponse":{
      "type":"structure",
      "required":["EnvironmentVersionSummaries"],
      "members":{
        "NextToken":{"shape":"NextToken"},
        "EnvironmentVersionSummaries":{"shape":"EnvironmentVersionSummaries"}
      }
    },
    "ListEnvironmentsRequest":{
      "type":"structure",
      "members":{
        "CreationTimeAfter":{"shape":"CreationTimeAfter"},
        "CreationTimeBefore":{"shape":"CreationTimeBefore"},
        "LastModifiedTimeAfter":{"shape":"LastModifiedTimeAfter"},
        "LastModifiedTimeBefore":{"shape":"LastModifiedTimeBefore"},
        "MaxResults":{"shape":"MaxResults"},
        "MetadataContainsKey":{"shape":"MetadataContainsKey"},
        "NameContains":{"shape":"NameContains"},
        "NextToken":{"shape":"NextToken"},
        "SortBy":{"shape":"EnvironmentSortBy"},
        "SortOrder":{"shape":"EnvironmentSortOrder"}
      }
    },
    "ListEnvironmentsResponse":{
      "type":"structure",
      "required":["EnvironmentSummaries"],
      "members":{
        "NextToken":{"shape":"NextToken"},
        "EnvironmentSummaries":{"shape":"EnvironmentSummaries"}
      }
    },
    "ListExperimentsRequest":{
      "type":"structure",
      "members":{
        "CreatedAfter":{"shape":"Timestamp"},
        "CreatedBefore":{"shape":"Timestamp"},
        "SortBy":{"shape":"SortExperimentsBy"},
        "SortOrder":{"shape":"SortOrder"},
        "NextToken":{"shape":"NextToken"},
        "MaxResults":{"shape":"MaxResults"}
      }
    },
    "ListExperimentsResponse":{
      "type":"structure",
      "members":{
        "ExperimentSummaries":{"shape":"ExperimentSummaries"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListFlowDefinitionsRequest":{
      "type":"structure",
      "members":{
        "CreationTimeAfter":{"shape":"Timestamp"},
        "CreationTimeBefore":{"shape":"Timestamp"},
        "LastModifiedTimeAfter":{"shape":"Timestamp"},
        "LastModifiedTimeBefore":{"shape":"Timestamp"},
        "NameContains":{"shape":"FlowDefinitionName"},
        "StatusEquals":{"shape":"FlowDefinitionStatus"},
        "SortBy":{"shape":"SortBy"},
        "SortOrder":{"shape":"SortOrder"},
        "NextToken":{"shape":"NextToken"},
        "MaxResults":{
          "shape":"MaxResults",
          "box":true
        }
      }
    },
    "ListFlowDefinitionsResponse":{
      "type":"structure",
      "required":["FlowDefinitionSummaries"],
      "members":{
        "FlowDefinitionSummaries":{"shape":"FlowDefinitionSummaries"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListHumanTaskUisRequest":{
      "type":"structure",
      "members":{
        "CreationTimeAfter":{"shape":"Timestamp"},
        "CreationTimeBefore":{"shape":"Timestamp"},
        "LastModifiedTimeAfter":{"shape":"Timestamp"},
        "LastModifiedTimeBefore":{"shape":"Timestamp"},
        "NameContains":{"shape":"HumanTaskUiName"},
        "SortBy":{"shape":"SortBy"},
        "SortOrder":{"shape":"SortOrder"},
        "NextToken":{"shape":"NextToken"},
        "MaxResults":{
          "shape":"MaxResults",
          "box":true
        }
      }
    },
    "ListHumanTaskUisResponse":{
      "type":"structure",
      "required":["HumanTaskUiSummaries"],
      "members":{
        "HumanTaskUiSummaries":{"shape":"HumanTaskUiSummaries"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListHyperParameterTuningJobsRequest":{
      "type":"structure",
      "members":{
        "NextToken":{"shape":"NextToken"},
        "MaxResults":{
          "shape":"MaxResults",
          "box":true
        },
        "SortBy":{"shape":"HyperParameterTuningJobSortByOptions"},
        "SortOrder":{"shape":"SortOrder"},
        "NameContains":{"shape":"NameContains"},
        "CreationTimeAfter":{"shape":"Timestamp"},
        "CreationTimeBefore":{"shape":"Timestamp"},
        "LastModifiedTimeAfter":{"shape":"Timestamp"},
        "LastModifiedTimeBefore":{"shape":"Timestamp"},
        "StatusEquals":{"shape":"HyperParameterTuningJobStatus"}
      }
    },
    "ListHyperParameterTuningJobsResponse":{
      "type":"structure",
      "required":["HyperParameterTuningJobSummaries"],
      "members":{
        "HyperParameterTuningJobSummaries":{"shape":"HyperParameterTuningJobSummaries"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListLabelingJobsForWorkteamRequest":{
      "type":"structure",
      "required":["WorkteamArn"],
      "members":{
        "WorkteamArn":{"shape":"WorkteamArn"},
        "MaxResults":{"shape":"MaxResults"},
        "NextToken":{"shape":"NextToken"},
        "CreationTimeAfter":{"shape":"Timestamp"},
        "CreationTimeBefore":{"shape":"Timestamp"},
        "JobReferenceCodeContains":{"shape":"JobReferenceCodeContains"},
        "SortBy":{"shape":"ListLabelingJobsForWorkteamSortByOptions"},
        "SortOrder":{"shape":"SortOrder"}
      }
    },
    "ListLabelingJobsForWorkteamResponse":{
      "type":"structure",
      "required":["LabelingJobSummaryList"],
      "members":{
        "LabelingJobSummaryList":{"shape":"LabelingJobForWorkteamSummaryList"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListLabelingJobsForWorkteamSortByOptions":{
      "type":"string",
      "enum":["CreationTime"]
    },
    "ListLabelingJobsRequest":{
      "type":"structure",
      "members":{
        "CreationTimeAfter":{"shape":"Timestamp"},
        "CreationTimeBefore":{"shape":"Timestamp"},
        "LastModifiedTimeAfter":{"shape":"Timestamp"},
        "LastModifiedTimeBefore":{"shape":"Timestamp"},
        "MaxResults":{"shape":"MaxResults"},
        "NextToken":{"shape":"NextToken"},
        "NameContains":{"shape":"NameContains"},
        "SortBy":{"shape":"SortBy"},
        "SortOrder":{"shape":"SortOrder"},
        "StatusEquals":{"shape":"LabelingJobStatus"}
      }
    },
    "ListLabelingJobsResponse":{
      "type":"structure",
      "members":{
        "LabelingJobSummaryList":{"shape":"LabelingJobSummaryList"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListModelPackagesInput":{
      "type":"structure",
      "members":{
        "CreationTimeAfter":{"shape":"CreationTime"},
        "CreationTimeBefore":{"shape":"CreationTime"},
        "MaxResults":{"shape":"MaxResults"},
        "NameContains":{"shape":"NameContains"},
        "NextToken":{"shape":"NextToken"},
        "SortBy":{"shape":"ModelPackageSortBy"},
        "SortOrder":{"shape":"SortOrder"}
      }
    },
    "ListModelPackagesOutput":{
      "type":"structure",
      "required":["ModelPackageSummaryList"],
      "members":{
        "ModelPackageSummaryList":{"shape":"ModelPackageSummaryList"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListModelsInput":{
      "type":"structure",
      "members":{
        "SortBy":{
          "shape":"ModelSortKey",
          "documentation":"<p>Sorts the list of results. The default is <code>CreationTime</code>.</p>"
        },
        "SortOrder":{
          "shape":"OrderKey",
          "documentation":"<p>The sort order for results. The default is <code>Ascending</code>.</p>"
        },
        "NextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>If the response to a previous <code>ListModels</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of models, use the token in the next request.</p>"
        },
        "MaxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of models to return in the response.</p>"
        },
        "NameContains":{
          "shape":"ModelNameContains",
          "documentation":"<p>A string in the training job name. This filter returns only models in the training job whose name contains the specified string.</p>"
        },
        "CreationTimeBefore":{
          "shape":"Timestamp",
          "documentation":"<p>A filter that returns only models created before the specified time (timestamp).</p>"
        },
        "CreationTimeAfter":{
          "shape":"Timestamp",
          "documentation":"<p>A filter that returns only models created after the specified time (timestamp).</p>"
        }
      }
    },
    "ListModelsOutput":{
      "type":"structure",
      "required":["Models"],
      "members":{
        "Models":{
          "shape":"ModelSummaryList",
          "documentation":"<p>An array of <code>ModelSummary</code> objects, each of which lists a model.</p>"
        },
        "NextToken":{
          "shape":"PaginationToken",
          "documentation":"<p> If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of models, use it in the subsequent request. </p>"
        }
      }
    },
    "ListMonitoringExecutionsRequest":{
      "type":"structure",
      "members":{
        "MonitoringScheduleName":{"shape":"MonitoringScheduleName"},
        "EndpointName":{"shape":"EndpointName"},
        "SortBy":{"shape":"MonitoringExecutionSortKey"},
        "SortOrder":{"shape":"SortOrder"},
        "NextToken":{"shape":"NextToken"},
        "MaxResults":{"shape":"MaxResults"},
        "ScheduledTimeBefore":{"shape":"Timestamp"},
        "ScheduledTimeAfter":{"shape":"Timestamp"},
        "CreationTimeBefore":{"shape":"Timestamp"},
        "CreationTimeAfter":{"shape":"Timestamp"},
        "LastModifiedTimeBefore":{"shape":"Timestamp"},
        "LastModifiedTimeAfter":{"shape":"Timestamp"},
        "StatusEquals":{"shape":"ExecutionStatus"}
      }
    },
    "ListMonitoringExecutionsResponse":{
      "type":"structure",
      "required":["MonitoringExecutionSummaries"],
      "members":{
        "MonitoringExecutionSummaries":{"shape":"MonitoringExecutionSummaryList"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListMonitoringSchedulesRequest":{
      "type":"structure",
      "members":{
        "EndpointName":{"shape":"EndpointName"},
        "SortBy":{"shape":"MonitoringScheduleSortKey"},
        "SortOrder":{"shape":"SortOrder"},
        "NextToken":{"shape":"NextToken"},
        "MaxResults":{"shape":"MaxResults"},
        "NameContains":{"shape":"NameContains"},
        "CreationTimeBefore":{"shape":"Timestamp"},
        "CreationTimeAfter":{"shape":"Timestamp"},
        "LastModifiedTimeBefore":{"shape":"Timestamp"},
        "LastModifiedTimeAfter":{"shape":"Timestamp"},
        "StatusEquals":{"shape":"ScheduleStatus"}
      }
    },
    "ListMonitoringSchedulesResponse":{
      "type":"structure",
      "required":["MonitoringScheduleSummaries"],
      "members":{
        "MonitoringScheduleSummaries":{"shape":"MonitoringScheduleSummaryList"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListNotebookInstanceLifecycleConfigsInput":{
      "type":"structure",
      "members":{
        "NextToken":{"shape":"NextToken"},
        "MaxResults":{"shape":"MaxResults"},
        "SortBy":{"shape":"NotebookInstanceLifecycleConfigSortKey"},
        "SortOrder":{"shape":"NotebookInstanceLifecycleConfigSortOrder"},
        "NameContains":{"shape":"NotebookInstanceLifecycleConfigNameContains"},
        "CreationTimeBefore":{"shape":"CreationTime"},
        "CreationTimeAfter":{"shape":"CreationTime"},
        "LastModifiedTimeBefore":{"shape":"LastModifiedTime"},
        "LastModifiedTimeAfter":{"shape":"LastModifiedTime"}
      }
    },
    "ListNotebookInstanceLifecycleConfigsOutput":{
      "type":"structure",
      "members":{
        "NextToken":{"shape":"NextToken"},
        "NotebookInstanceLifecycleConfigs":{"shape":"NotebookInstanceLifecycleConfigSummaryList"}
      }
    },
    "ListNotebookInstancesInput":{
      "type":"structure",
      "members":{
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p> If the previous call to the <code>ListNotebookInstances</code> is truncated, the response includes a <code>NextToken</code>. You can use this token in your subsequent <code>ListNotebookInstances</code> request to fetch the next set of notebook instances. </p> <note> <p> You might specify a filter or a sort order in your request. When response is truncated, you must use the same values for the filer and sort order in the next request. </p> </note>"
        },
        "MaxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of notebook instances to return.</p>"
        },
        "SortBy":{
          "shape":"NotebookInstanceSortKey",
          "documentation":"<p>The field to sort results by. The default is <code>Name</code>.</p>"
        },
        "SortOrder":{
          "shape":"NotebookInstanceSortOrder",
          "documentation":"<p>The sort order for results. </p>"
        },
        "NameContains":{
          "shape":"NotebookInstanceNameContains",
          "documentation":"<p>A string in the notebook instances' name. This filter returns only notebook instances whose name contains the specified string. </p>"
        },
        "CreationTimeBefore":{
          "shape":"CreationTime",
          "documentation":"<p>A filter that returns only notebook instances that were created before the specified time (timestamp). </p>"
        },
        "CreationTimeAfter":{
          "shape":"CreationTime",
          "documentation":"<p>A filter that returns only notebook instances that were created after the specified time (timestamp).</p>"
        },
        "LastModifiedTimeBefore":{
          "shape":"LastModifiedTime",
          "documentation":"<p>A filter that returns only notebook instances that were modified before the specified time (timestamp).</p>"
        },
        "LastModifiedTimeAfter":{
          "shape":"LastModifiedTime",
          "documentation":"<p>A filter that returns only notebook instances that were modified after the specified time (timestamp).</p>"
        },
        "StatusEquals":{
          "shape":"NotebookInstanceStatus",
          "documentation":"<p>A filter that returns only notebook instances with the specified status.</p>"
        },
        "NotebookInstanceLifecycleConfigNameContains":{"shape":"NotebookInstanceLifecycleConfigName"},
        "DefaultCodeRepositoryContains":{"shape":"CodeRepositoryContains"},
        "AdditionalCodeRepositoryEquals":{"shape":"CodeRepositoryNameOrUrl"}
      }
    },
    "ListNotebookInstancesOutput":{
      "type":"structure",
      "members":{
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>If the response to the previous <code>ListNotebookInstances</code> request was truncated, Amazon SageMaker returns this token. To retrieve the next set of notebook instances, use the token in the next request.</p>"
        },
        "NotebookInstances":{
          "shape":"NotebookInstanceSummaryList",
          "documentation":"<p>An array of <code>NotebookInstanceSummary</code> objects, one for each notebook instance.</p>"
        }
      }
    },
    "ListSubscribedWorkteamsRequest":{
      "type":"structure",
      "members":{
        "NameContains":{"shape":"WorkteamName"},
        "NextToken":{"shape":"NextToken"},
        "MaxResults":{
          "shape":"MaxResults",
          "box":true
        }
      }
    },
    "ListSubscribedWorkteamsResponse":{
      "type":"structure",
      "required":["SubscribedWorkteams"],
      "members":{
        "SubscribedWorkteams":{"shape":"SubscribedWorkteams"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListTagsInput":{
      "type":"structure",
      "required":["ResourceArn"],
      "members":{
        "ResourceArn":{
          "shape":"ResourceArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the resource whose tags you want to retrieve.</p>"
        },
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p> If the response to the previous <code>ListTags</code> request is truncated, Amazon SageMaker returns this token. To retrieve the next set of tags, use it in the subsequent request. </p>"
        },
        "MaxResults":{
          "shape":"ListTagsMaxResults",
          "documentation":"<p>Maximum number of tags to return.</p>"
        }
      }
    },
    "ListTagsMaxResults":{
      "type":"integer",
      "min":50
    },
    "ListTagsOutput":{
      "type":"structure",
      "members":{
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>An array of <code>Tag</code> objects, each with a tag key and a value.</p>"
        },
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p> If response is truncated, Amazon SageMaker includes a token in the response. You can use this token in your subsequent request to fetch next set of tokens. </p>"
        }
      }
    },
    "ListTrainingJobsForHyperParameterTuningJobRequest":{
      "type":"structure",
      "required":["HyperParameterTuningJobName"],
      "members":{
        "HyperParameterTuningJobName":{"shape":"HyperParameterTuningJobName"},
        "NextToken":{"shape":"NextToken"},
        "MaxResults":{"shape":"MaxResults"},
        "StatusEquals":{"shape":"TrainingJobStatus"},
        "SortBy":{"shape":"TrainingJobSortByOptions"},
        "SortOrder":{"shape":"SortOrder"}
      }
    },
    "ListTrainingJobsForHyperParameterTuningJobResponse":{
      "type":"structure",
      "required":["TrainingJobSummaries"],
      "members":{
        "TrainingJobSummaries":{"shape":"HyperParameterTrainingJobSummaries"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListTrainingJobsRequest":{
      "type":"structure",
      "members":{
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>If the result of the previous <code>ListTrainingJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of training jobs, use the token in the next request. </p>"
        },
        "MaxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of training jobs to return in the response.</p>",
          "box":true
        },
        "CreationTimeAfter":{
          "shape":"Timestamp",
          "documentation":"<p>A filter that only training jobs created after the specified time (timestamp).</p>"
        },
        "CreationTimeBefore":{
          "shape":"Timestamp",
          "documentation":"<p>A filter that returns only training jobs created before the specified time (timestamp).</p>"
        },
        "LastModifiedTimeAfter":{
          "shape":"Timestamp",
          "documentation":"<p>A filter that returns only training jobs modified after the specified time (timestamp).</p>"
        },
        "LastModifiedTimeBefore":{
          "shape":"Timestamp",
          "documentation":"<p>A filter that returns only training jobs modified before the specified time (timestamp).</p>"
        },
        "NameContains":{
          "shape":"NameContains",
          "documentation":"<p>A string in the training job name. This filter returns only models whose name contains the specified string.</p>"
        },
        "StatusEquals":{
          "shape":"TrainingJobStatus",
          "documentation":"<p>A filter that retrieves only training jobs with a specific status.</p>"
        },
        "SortBy":{
          "shape":"SortBy",
          "documentation":"<p>The field to sort results by. The default is <code>CreationTime</code>.</p>"
        },
        "SortOrder":{
          "shape":"SortOrder",
          "documentation":"<p>The sort order for results. The default is <code>Ascending</code>.</p>"
        }
      }
    },
    "ListTrainingJobsResponse":{
      "type":"structure",
      "required":["TrainingJobSummaries"],
      "members":{
        "TrainingJobSummaries":{
          "shape":"TrainingJobSummaries",
          "documentation":"<p>An array of <code>TrainingJobSummary</code> objects, each listing a training job.</p>"
        },
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of training jobs, use it in the subsequent request.</p>"
        }
      }
    },
    "ListTransformJobsRequest":{
      "type":"structure",
      "members":{
        "CreationTimeAfter":{"shape":"Timestamp"},
        "CreationTimeBefore":{"shape":"Timestamp"},
        "LastModifiedTimeAfter":{"shape":"Timestamp"},
        "LastModifiedTimeBefore":{"shape":"Timestamp"},
        "NameContains":{"shape":"NameContains"},
        "StatusEquals":{"shape":"TransformJobStatus"},
        "SortBy":{"shape":"SortBy"},
        "SortOrder":{"shape":"SortOrder"},
        "NextToken":{"shape":"NextToken"},
        "MaxResults":{
          "shape":"MaxResults",
          "box":true
        }
      }
    },
    "ListTransformJobsResponse":{
      "type":"structure",
      "required":["TransformJobSummaries"],
      "members":{
        "TransformJobSummaries":{"shape":"TransformJobSummaries"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListTrialComponentKey256":{
      "type":"list",
      "member":{"shape":"TrialComponentKey256"}
    },
    "ListTrialComponentsRequest":{
      "type":"structure",
      "members":{
        "ExperimentName":{"shape":"ExperimentEntityName"},
        "TrialName":{"shape":"ExperimentEntityName"},
        "SourceArn":{"shape":"String256"},
        "CreatedAfter":{"shape":"Timestamp"},
        "CreatedBefore":{"shape":"Timestamp"},
        "SortBy":{"shape":"SortTrialComponentsBy"},
        "SortOrder":{"shape":"SortOrder"},
        "MaxResults":{"shape":"MaxResults"},
        "NextToken":{"shape":"NextToken"},
        "DelegatedAccountId":{
          "shape":"String",
          "internalonly":true
        }
      }
    },
    "ListTrialComponentsResponse":{
      "type":"structure",
      "members":{
        "TrialComponentSummaries":{"shape":"TrialComponentSummaries"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListTrialsForAutoMLJobRequest":{
      "type":"structure",
      "required":["AutoMLJobName"],
      "members":{
        "AutoMLJobName":{"shape":"AutoMLJobName"},
        "StatusEquals":{"shape":"TrialStatus"},
        "SortOrder":{"shape":"AutoMLSortOrder"},
        "SortBy":{"shape":"TrialSortBy"},
        "MaxResults":{
          "shape":"AutoMLMaxResults",
          "box":true
        },
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListTrialsForAutoMLJobResponse":{
      "type":"structure",
      "required":["AutoMLTrialSummaries"],
      "members":{
        "AutoMLTrialSummaries":{"shape":"AutoMLTrialSummaries"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListTrialsRequest":{
      "type":"structure",
      "members":{
        "ExperimentName":{"shape":"ExperimentEntityName"},
        "TrialComponentName":{"shape":"ExperimentEntityName"},
        "CreatedAfter":{"shape":"Timestamp"},
        "CreatedBefore":{"shape":"Timestamp"},
        "SortBy":{"shape":"SortTrialsBy"},
        "SortOrder":{"shape":"SortOrder"},
        "MaxResults":{"shape":"MaxResults"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListTrialsResponse":{
      "type":"structure",
      "members":{
        "TrialSummaries":{"shape":"TrialSummaries"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListUserProfilesRequest":{
      "type":"structure",
      "members":{
        "NextToken":{"shape":"NextToken"},
        "MaxResults":{"shape":"MaxResults"},
        "SortOrder":{"shape":"SortOrder"},
        "SortBy":{"shape":"UserProfileSortKey"}
      }
    },
    "ListUserProfilesResponse":{
      "type":"structure",
      "members":{
        "UserProfiles":{"shape":"UserProfileList"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListWorkteamsRequest":{
      "type":"structure",
      "members":{
        "SortBy":{"shape":"ListWorkteamsSortByOptions"},
        "SortOrder":{"shape":"SortOrder"},
        "NameContains":{"shape":"WorkteamName"},
        "NextToken":{"shape":"NextToken"},
        "MaxResults":{
          "shape":"MaxResults",
          "box":true
        }
      }
    },
    "ListWorkteamsResponse":{
      "type":"structure",
      "required":["Workteams"],
      "members":{
        "Workteams":{"shape":"Workteams"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListWorkteamsSortByOptions":{
      "type":"string",
      "enum":[
        "Name",
        "CreateDate"
      ]
    },
    "LocationUri":{"type":"string"},
    "MaxConcurrentTaskCount":{
      "type":"integer",
      "max":1000,
      "min":1
    },
    "MaxConcurrentTransforms":{
      "type":"integer",
      "min":0
    },
    "MaxHumanLabeledObjectCount":{
      "type":"integer",
      "min":1
    },
    "MaxNumberOfTrainingJobs":{
      "type":"integer",
      "min":1
    },
    "MaxParallelTrainingJobs":{
      "type":"integer",
      "min":1
    },
    "MaxPayloadInMB":{
      "type":"integer",
      "min":0
    },
    "MaxPercentageOfInputDatasetLabeled":{
      "type":"integer",
      "max":100,
      "min":1
    },
    "MaxResults":{
      "type":"integer",
      "max":100,
      "min":1
    },
    "MaxRuntimeInSeconds":{
      "type":"integer",
      "min":1
    },
    "MaxRuntimePerTrainingJobInSeconds":{
      "type":"integer",
      "min":1
    },
    "MaxTrials":{"type":"integer"},
    "MaxWaitTimeInSeconds":{
      "type":"integer",
      "min":1
    },
    "MediaType":{
      "type":"string",
      "max":64,
      "pattern":"^[\\w]+\\/[\\w+]+$"
    },
    "MemberDefinition":{
      "type":"structure",
      "members":{
        "CognitoMemberDefinition":{"shape":"CognitoMemberDefinition"}
      }
    },
    "MemberDefinitions":{
      "type":"list",
      "member":{"shape":"MemberDefinition"},
      "max":10,
      "min":1
    },
    "Metadata":{
      "type":"map",
      "key":{"shape":"MetadataKey"},
      "value":{"shape":"MetadataValue"},
      "max":16,
      "min":0
    },
    "MetadataContainsKey":{"type":"string"},
    "MetadataKey":{"type":"string"},
    "MetadataValue":{"type":"string"},
    "MetricData":{
      "type":"structure",
      "members":{
        "MetricName":{"shape":"MetricName"},
        "Value":{"shape":"Float"},
        "Timestamp":{"shape":"Timestamp"}
      }
    },
    "MetricDefinition":{
      "type":"structure",
      "required":[
        "Name",
        "Regex"
      ],
      "members":{
        "Name":{"shape":"MetricName"},
        "Regex":{"shape":"MetricRegex"}
      }
    },
    "MetricDefinitionList":{
      "type":"list",
      "member":{"shape":"MetricDefinition"},
      "max":40,
      "min":0
    },
    "MetricName":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":".+"
    },
    "MetricQuery":{
      "type":"structure",
      "required":[
        "MetricName",
        "ResourceArn",
        "MetricStat",
        "Period",
        "XAxisType"
      ],
      "members":{
        "MetricName":{"shape":"MetricName"},
        "ResourceArn":{"shape":"SageMakerResourceArn"},
        "MetricStat":{"shape":"MetricStatistic"},
        "Period":{"shape":"Period"},
        "XAxisType":{"shape":"XAxisType"},
        "Start":{"shape":"NonNegativeLong"},
        "End":{"shape":"NonNegativeLong"}
      }
    },
    "MetricQueryList":{
      "type":"list",
      "member":{"shape":"MetricQuery"},
      "max":20,
      "min":1
    },
    "MetricQueryResult":{
      "type":"structure",
      "required":[
        "Status",
        "XAxisValues",
        "MetricValues"
      ],
      "members":{
        "Status":{"shape":"MetricQueryResultStatus"},
        "Message":{"shape":"String"},
        "XAxisValues":{"shape":"XAxisValues"},
        "MetricValues":{"shape":"MetricValues"}
      }
    },
    "MetricQueryResultList":{
      "type":"list",
      "member":{"shape":"MetricQueryResult"},
      "max":20,
      "min":1
    },
    "MetricQueryResultStatus":{
      "type":"string",
      "enum":[
        "Complete",
        "Truncated",
        "InternalError",
        "ValidationError"
      ]
    },
    "MetricRegex":{
      "type":"string",
      "max":500,
      "min":1,
      "pattern":".+"
    },
    "MetricStatistic":{
      "type":"string",
      "enum":[
        "Min",
        "Max",
        "Avg",
        "Count",
        "StdDev",
        "Last"
      ]
    },
    "MetricValue":{"type":"float"},
    "MetricValues":{
      "type":"list",
      "member":{"shape":"Float"}
    },
    "ModelArn":{
      "type":"string",
      "max":2048,
      "min":20,
      "pattern":"arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:model/.*"
    },
    "ModelArtifacts":{
      "type":"structure",
      "required":["S3ModelArtifacts"],
      "members":{
        "S3ModelArtifacts":{
          "shape":"S3Uri",
          "documentation":"<p>The path of the S3 object that contains the model artifacts. For example, <code>s3://bucket-name/keynameprefix/model.tar.gz</code>.</p>"
        }
      },
      "documentation":"<p>Provides information about the location that is configured for storing model artifacts. </p>"
    },
    "ModelName":{
      "type":"string",
      "max":63,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    },
    "ModelNameContains":{
      "type":"string",
      "max":63,
      "pattern":"[a-zA-Z0-9-]+"
    },
    "ModelPackageArn":{
      "type":"string",
      "max":2048,
      "min":1,
      "pattern":"arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:model-package/.*"
    },
    "ModelPackageContainerDefinition":{
      "type":"structure",
      "required":["Image"],
      "members":{
        "ContainerHostname":{"shape":"ContainerHostname"},
        "Image":{"shape":"Image"},
        "ImageDigest":{"shape":"ImageDigest"},
        "ModelDataUrl":{"shape":"Url"},
        "ProductId":{"shape":"ProductId"}
      }
    },
    "ModelPackageContainerDefinitionList":{
      "type":"list",
      "member":{"shape":"ModelPackageContainerDefinition"},
      "max":1,
      "min":1
    },
    "ModelPackageSortBy":{
      "type":"string",
      "enum":[
        "Name",
        "CreationTime"
      ]
    },
    "ModelPackageStatus":{
      "type":"string",
      "enum":[
        "Pending",
        "InProgress",
        "Completed",
        "Failed",
        "Deleting"
      ]
    },
    "ModelPackageStatusDetails":{
      "type":"structure",
      "required":["ValidationStatuses"],
      "members":{
        "ValidationStatuses":{"shape":"ModelPackageStatusItemList"},
        "ImageScanStatuses":{"shape":"ModelPackageStatusItemList"}
      }
    },
    "ModelPackageStatusItem":{
      "type":"structure",
      "required":[
        "Name",
        "Status"
      ],
      "members":{
        "Name":{"shape":"EntityName"},
        "Status":{"shape":"DetailedModelPackageStatus"},
        "FailureReason":{"shape":"String"}
      }
    },
    "ModelPackageStatusItemList":{
      "type":"list",
      "member":{"shape":"ModelPackageStatusItem"}
    },
    "ModelPackageSummary":{
      "type":"structure",
      "required":[
        "ModelPackageName",
        "ModelPackageArn",
        "CreationTime",
        "ModelPackageStatus"
      ],
      "members":{
        "ModelPackageName":{"shape":"EntityName"},
        "ModelPackageArn":{"shape":"ModelPackageArn"},
        "ModelPackageDescription":{"shape":"EntityDescription"},
        "CreationTime":{"shape":"CreationTime"},
        "ModelPackageStatus":{"shape":"ModelPackageStatus"}
      }
    },
    "ModelPackageSummaryList":{
      "type":"list",
      "member":{"shape":"ModelPackageSummary"}
    },
    "ModelPackageValidationProfile":{
      "type":"structure",
      "required":[
        "ProfileName",
        "TransformJobDefinition"
      ],
      "members":{
        "ProfileName":{"shape":"EntityName"},
        "TransformJobDefinition":{"shape":"TransformJobDefinition"}
      }
    },
    "ModelPackageValidationProfiles":{
      "type":"list",
      "member":{"shape":"ModelPackageValidationProfile"},
      "max":1,
      "min":1
    },
    "ModelPackageValidationSpecification":{
      "type":"structure",
      "required":[
        "ValidationRole",
        "ValidationProfiles"
      ],
      "members":{
        "ValidationRole":{"shape":"RoleArn"},
        "ValidationProfiles":{"shape":"ModelPackageValidationProfiles"}
      }
    },
    "ModelSortKey":{
      "type":"string",
      "enum":[
        "Name",
        "CreationTime"
      ]
    },
    "ModelSummary":{
      "type":"structure",
      "required":[
        "ModelName",
        "ModelArn",
        "CreationTime"
      ],
      "members":{
        "ModelName":{
          "shape":"ModelName",
          "documentation":"<p>The name of the model that you want a summary for.</p>"
        },
        "ModelArn":{
          "shape":"ModelArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the model.</p>"
        },
        "CreationTime":{
          "shape":"Timestamp",
          "documentation":"<p>A timestamp that indicates when the model was created.</p>"
        }
      },
      "documentation":"<p>Provides summary information about a model.</p>"
    },
    "ModelSummaryList":{
      "type":"list",
      "member":{"shape":"ModelSummary"}
    },
    "MonitoringAppSpecification":{
      "type":"structure",
      "members":{
        "ImageUri":{"shape":"ImageUri"},
        "ContainerEntrypoint":{"shape":"ContainerEntrypoint"},
        "ContainerArguments":{"shape":"MonitoringContainerArguments"},
        "RecordPreprocessorSourceUri":{"shape":"S3Uri"},
        "PostAnalyticsProcessorSourceUri":{"shape":"S3Uri"},
        "AnalyticsSourceS3Uri":{"shape":"S3Uri"}
      }
    },
    "MonitoringBaselineConfig":{
      "type":"structure",
      "members":{
        "ConstraintsResource":{"shape":"MonitoringConstraintsResource"},
        "StatisticsResource":{"shape":"MonitoringStatisticsResource"}
      }
    },
    "MonitoringConstraintsResource":{
      "type":"structure",
      "members":{
        "S3Uri":{"shape":"S3Uri"}
      }
    },
    "MonitoringContainerArguments":{
      "type":"list",
      "member":{"shape":"ContainerArgument"},
      "max":50,
      "min":1
    },
    "MonitoringEnvironmentMap":{
      "type":"map",
      "key":{"shape":"AnalyticsEnvironmentKey"},
      "value":{"shape":"AnalyticsEnvironmentValue"},
      "max":50
    },
    "MonitoringExecutionSortKey":{
      "type":"string",
      "enum":[
        "Name",
        "CreationTime",
        "ScheduledTime"
      ]
    },
    "MonitoringExecutionSummary":{
      "type":"structure",
      "required":[
        "MonitoringScheduleName",
        "ScheduledTime",
        "CreationTime",
        "LastModifiedTime",
        "MonitoringExecutionStatus"
      ],
      "members":{
        "MonitoringScheduleName":{"shape":"MonitoringScheduleName"},
        "ScheduledTime":{"shape":"Timestamp"},
        "CreationTime":{"shape":"Timestamp"},
        "LastModifiedTime":{"shape":"Timestamp"},
        "MonitoringExecutionStatus":{"shape":"ExecutionStatus"},
        "AnalyticsJobArn":{"shape":"AnalyticsJobArn"},
        "EndpointName":{"shape":"EndpointName"}
      }
    },
    "MonitoringExecutionSummaryList":{
      "type":"list",
      "member":{"shape":"MonitoringExecutionSummary"}
    },
    "MonitoringInput":{
      "type":"structure",
      "members":{
        "S3Input":{"shape":"MonitoringS3Input"},
        "EndpointInput":{"shape":"EndpointInput"}
      }
    },
    "MonitoringInputs":{
      "type":"list",
      "member":{"shape":"MonitoringInput"},
      "max":1,
      "min":0
    },
    "MonitoringJobDefinition":{
      "type":"structure",
      "required":[
        "MonitoringResources",
        "MonitoringAppSpecification",
        "StoppingCondition",
        "RoleArn"
      ],
      "members":{
        "BaselineConfig":{"shape":"MonitoringBaselineConfig"},
        "MonitoringInputs":{"shape":"MonitoringInputs"},
        "MonitoringOutputs":{"shape":"MonitoringOutputs"},
        "MonitoringResources":{"shape":"MonitoringResources"},
        "MonitoringAppSpecification":{"shape":"MonitoringAppSpecification"},
        "StoppingCondition":{"shape":"AnalyticsStoppingCondition"},
        "Environment":{"shape":"MonitoringEnvironmentMap"},
        "NetworkConfig":{"shape":"NetworkConfig"},
        "RoleArn":{"shape":"RoleArn"},
        "Tags":{"shape":"TagList"}
      }
    },
    "MonitoringOutput":{
      "type":"structure",
      "required":["S3Output"],
      "members":{
        "S3Output":{"shape":"MonitoringS3Output"}
      }
    },
    "MonitoringOutputs":{
      "type":"list",
      "member":{"shape":"MonitoringOutput"},
      "max":1,
      "min":0
    },
    "MonitoringResources":{
      "type":"structure",
      "required":["ClusterConfig"],
      "members":{
        "ClusterConfig":{"shape":"AnalyticsClusterConfig"}
      }
    },
    "MonitoringS3CaptureContentType":{
      "type":"string",
      "enum":[
        "Csv",
        "Json",
        "SagemakerCaptureJson"
      ]
    },
    "MonitoringS3ContentType":{
      "type":"structure",
      "members":{
        "Type":{"shape":"MonitoringS3CaptureContentType"}
      }
    },
    "MonitoringS3Input":{
      "type":"structure",
      "required":[
        "S3Uri",
        "LocalPath",
        "S3DataType",
        "S3InputMode",
        "S3DataDistributionType"
      ],
      "members":{
        "S3Uri":{"shape":"MonitoringS3Uri"},
        "LocalPath":{"shape":"AnalyticsLocalPath"},
        "S3DataType":{"shape":"AnalyticsS3DataType"},
        "S3DownloadMode":{"shape":"AnalyticsS3DownloadMode"},
        "S3InputMode":{"shape":"AnalyticsS3InputMode"},
        "S3CompressionType":{"shape":"AnalyticsS3CompressionType"},
        "S3DataDistributionType":{"shape":"AnalyticsS3DataDistributionType"},
        "S3ContentType":{"shape":"MonitoringS3ContentType"}
      }
    },
    "MonitoringS3Output":{
      "type":"structure",
      "required":[
        "S3Uri",
        "LocalPath"
      ],
      "members":{
        "S3Uri":{"shape":"MonitoringS3Uri"},
        "LocalPath":{"shape":"AnalyticsLocalPath"},
        "KmsKeyId":{"shape":"KmsKeyId"},
        "S3UploadMode":{"shape":"AnalyticsS3UploadMode"}
      }
    },
    "MonitoringS3Uri":{
      "type":"string",
      "max":512,
      "pattern":"^(https|s3)://([^/]+)/?(.*)$"
    },
    "MonitoringScheduleArn":{
      "type":"string",
      "max":256,
      "pattern":".*"
    },
    "MonitoringScheduleConfig":{
      "type":"structure",
      "required":[
        "ScheduleConfig",
        "MonitoringJobDefinition"
      ],
      "members":{
        "ScheduleConfig":{"shape":"ScheduleConfig"},
        "MonitoringJobDefinition":{"shape":"MonitoringJobDefinition"}
      }
    },
    "MonitoringScheduleName":{
      "type":"string",
      "max":63,
      "min":1,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*$"
    },
    "MonitoringScheduleSortKey":{
      "type":"string",
      "enum":[
        "Name",
        "CreationTime"
      ]
    },
    "MonitoringScheduleSummary":{
      "type":"structure",
      "required":[
        "MonitoringScheduleName",
        "MonitoringScheduleArn",
        "CreationTime",
        "LastModifiedTime",
        "MonitoringScheduleStatus"
      ],
      "members":{
        "MonitoringScheduleName":{"shape":"MonitoringScheduleName"},
        "MonitoringScheduleArn":{"shape":"MonitoringScheduleArn"},
        "CreationTime":{"shape":"Timestamp"},
        "LastModifiedTime":{"shape":"Timestamp"},
        "MonitoringScheduleStatus":{"shape":"ScheduleStatus"},
        "EndpointName":{"shape":"EndpointName"}
      }
    },
    "MonitoringScheduleSummaryList":{
      "type":"list",
      "member":{"shape":"MonitoringScheduleSummary"}
    },
    "MonitoringStatisticsResource":{
      "type":"structure",
      "members":{
        "S3Uri":{"shape":"S3Uri"}
      }
    },
    "NameContains":{
      "type":"string",
      "max":63,
      "pattern":"[a-zA-Z0-9\\-]+"
    },
    "NestedFilters":{
      "type":"structure",
      "required":[
        "NestedPropertyName",
        "Filters"
      ],
      "members":{
        "NestedPropertyName":{"shape":"ResourcePropertyName"},
        "Filters":{"shape":"FilterList"}
      }
    },
    "NestedFiltersList":{
      "type":"list",
      "member":{"shape":"NestedFilters"},
      "max":20,
      "min":1
    },
    "NetworkConfig":{
      "type":"structure",
      "members":{
        "EnableInterContainerTrafficEncryption":{"shape":"Boolean"},
        "EnableNetworkIsolation":{"shape":"Boolean"},
        "VpcConfig":{"shape":"VpcConfig"}
      }
    },
    "NetworkInterfaceId":{"type":"string"},
    "NextToken":{
      "type":"string",
      "max":8192,
      "pattern":".*"
    },
    "NonNegativeInteger":{
      "type":"integer",
      "min":0
    },
    "NonNegativeLong":{
      "type":"long",
      "min":0
    },
    "NotebookInstanceAcceleratorType":{
      "type":"string",
      "enum":[
        "ml.eia1.medium",
        "ml.eia1.large",
        "ml.eia1.xlarge",
        "ml.eia2.medium",
        "ml.eia2.large",
        "ml.eia2.xlarge"
      ]
    },
    "NotebookInstanceAcceleratorTypes":{
      "type":"list",
      "member":{"shape":"NotebookInstanceAcceleratorType"}
    },
    "NotebookInstanceArn":{
      "type":"string",
      "max":256
    },
    "NotebookInstanceLifecycleConfigArn":{
      "type":"string",
      "max":256
    },
    "NotebookInstanceLifecycleConfigContent":{
      "type":"string",
      "max":16384,
      "min":1,
      "pattern":"[\\S\\s]+"
    },
    "NotebookInstanceLifecycleConfigList":{
      "type":"list",
      "member":{"shape":"NotebookInstanceLifecycleHook"},
      "max":1
    },
    "NotebookInstanceLifecycleConfigName":{
      "type":"string",
      "max":63,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    },
    "NotebookInstanceLifecycleConfigNameContains":{
      "type":"string",
      "max":63,
      "pattern":"[a-zA-Z0-9-]+"
    },
    "NotebookInstanceLifecycleConfigSortKey":{
      "type":"string",
      "enum":[
        "Name",
        "CreationTime",
        "LastModifiedTime"
      ]
    },
    "NotebookInstanceLifecycleConfigSortOrder":{
      "type":"string",
      "enum":[
        "Ascending",
        "Descending"
      ]
    },
    "NotebookInstanceLifecycleConfigSummary":{
      "type":"structure",
      "required":[
        "NotebookInstanceLifecycleConfigName",
        "NotebookInstanceLifecycleConfigArn"
      ],
      "members":{
        "NotebookInstanceLifecycleConfigName":{"shape":"NotebookInstanceLifecycleConfigName"},
        "NotebookInstanceLifecycleConfigArn":{"shape":"NotebookInstanceLifecycleConfigArn"},
        "CreationTime":{"shape":"CreationTime"},
        "LastModifiedTime":{"shape":"LastModifiedTime"}
      }
    },
    "NotebookInstanceLifecycleConfigSummaryList":{
      "type":"list",
      "member":{"shape":"NotebookInstanceLifecycleConfigSummary"}
    },
    "NotebookInstanceLifecycleHook":{
      "type":"structure",
      "members":{
        "Content":{"shape":"NotebookInstanceLifecycleConfigContent"}
      }
    },
    "NotebookInstanceName":{
      "type":"string",
      "max":63,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    },
    "NotebookInstanceNameContains":{
      "type":"string",
      "max":63,
      "pattern":"[a-zA-Z0-9-]+"
    },
    "NotebookInstanceSortKey":{
      "type":"string",
      "enum":[
        "Name",
        "CreationTime",
        "Status"
      ]
    },
    "NotebookInstanceSortOrder":{
      "type":"string",
      "enum":[
        "Ascending",
        "Descending"
      ]
    },
    "NotebookInstanceStatus":{
      "type":"string",
      "enum":[
        "Pending",
        "InService",
        "Stopping",
        "Stopped",
        "Failed",
        "Deleting",
        "Updating"
      ]
    },
    "NotebookInstanceSummary":{
      "type":"structure",
      "required":[
        "NotebookInstanceName",
        "NotebookInstanceArn"
      ],
      "members":{
        "NotebookInstanceName":{
          "shape":"NotebookInstanceName",
          "documentation":"<p>The name of the notebook instance that you want a summary for.</p>"
        },
        "NotebookInstanceArn":{
          "shape":"NotebookInstanceArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the notebook instance.</p>"
        },
        "NotebookInstanceStatus":{
          "shape":"NotebookInstanceStatus",
          "documentation":"<p>The status of the notebook instance.</p>"
        },
        "Url":{
          "shape":"NotebookInstanceUrl",
          "documentation":"<p>The URL that you use to connect to the Jupyter instance running in your notebook instance. </p>"
        },
        "InstanceType":{
          "shape":"InstanceType",
          "documentation":"<p>The type of ML compute instance that the notebook instance is running on.</p>"
        },
        "CreationTime":{
          "shape":"CreationTime",
          "documentation":"<p>A timestamp that shows when the notebook instance was created.</p>"
        },
        "LastModifiedTime":{
          "shape":"LastModifiedTime",
          "documentation":"<p>A timestamp that shows when the notebook instance was last modified.</p>"
        },
        "NotebookInstanceLifecycleConfigName":{"shape":"NotebookInstanceLifecycleConfigName"},
        "DefaultCodeRepository":{"shape":"CodeRepositoryNameOrUrl"},
        "AdditionalCodeRepositories":{"shape":"AdditionalCodeRepositoryNamesOrUrls"}
      },
      "documentation":"<p>Provides summary information for an Amazon SageMaker notebook instance.</p>"
    },
    "NotebookInstanceSummaryList":{
      "type":"list",
      "member":{"shape":"NotebookInstanceSummary"}
    },
    "NotebookInstanceUrl":{"type":"string"},
    "NotebookInstanceVolumeSizeInGB":{
      "type":"integer",
      "max":16384,
      "min":5
    },
    "NotificationConfiguration":{
      "type":"structure",
      "members":{
        "NotificationTopicArn":{"shape":"NotificationTopicArn"}
      }
    },
    "NotificationTopicArn":{
      "type":"string",
      "pattern":"arn:aws[a-z\\-]*:sns:[a-z0-9\\-]*:[0-9]{12}:[a-zA-Z0-9_.-]*"
    },
    "NumberOfHumanWorkersPerDataObject":{
      "type":"integer",
      "max":9,
      "min":1
    },
    "ObjectiveStatus":{
      "type":"string",
      "enum":[
        "Succeeded",
        "Pending",
        "Failed"
      ]
    },
    "ObjectiveStatusCounter":{
      "type":"integer",
      "min":0
    },
    "ObjectiveStatusCounters":{
      "type":"structure",
      "members":{
        "Succeeded":{"shape":"ObjectiveStatusCounter"},
        "Pending":{"shape":"ObjectiveStatusCounter"},
        "Failed":{"shape":"ObjectiveStatusCounter"}
      }
    },
    "Operator":{
      "type":"string",
      "enum":[
        "Equals",
        "NotEquals",
        "GreaterThan",
        "GreaterThanOrEqualTo",
        "LessThan",
        "LessThanOrEqualTo",
        "Contains"
      ]
    },
    "OptionalDouble":{"type":"double"},
    "OptionalInteger":{"type":"integer"},
    "OrderKey":{
      "type":"string",
      "enum":[
        "Ascending",
        "Descending"
      ]
    },
    "OutputConfig":{
      "type":"structure",
      "required":[
        "S3OutputLocation",
        "TargetDevice"
      ],
      "members":{
        "S3OutputLocation":{"shape":"S3Uri"},
        "TargetDevice":{"shape":"TargetDevice"}
      }
    },
    "OutputDataConfig":{
      "type":"structure",
      "required":["S3OutputPath"],
      "members":{
        "KmsKeyId":{
          "shape":"KmsKeyId",
          "documentation":"<p>The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption. </p> <note> <p>If the configuration of the output S3 bucket requires server-side encryption for objects, and you don't provide the KMS key ID, Amazon SageMaker uses the default service key. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html\">KMS-Managed Encryption Keys</a> in Amazon Simple Storage Service developer guide.</p> </note> <note> <p> The KMS key policy must grant permission to the IAM role you specify in your <code>CreateTrainingJob</code> request. <a href=\"http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html\">Using Key Policies in AWS KMS</a> in the AWS Key Management Service Developer Guide. </p> </note>"
        },
        "S3OutputPath":{
          "shape":"S3Uri",
          "documentation":"<p>Identifies the S3 path where you want Amazon SageMaker to store the model artifacts. For example, <code>s3://bucket-name/key-name-prefix</code>. </p>"
        },
        "RemoveJobNameFromS3OutputPath":{
          "shape":"RemoveJobNameFromS3OutputPath",
          "internalonly":true
        }
      },
      "documentation":"<p>Provides information about how to store model training results (model artifacts).</p>"
    },
    "OverwriteLastUnnamedVersion":{"type":"boolean"},
    "PaginationToken":{
      "type":"string",
      "max":8192,
      "pattern":".*"
    },
    "ParameterKey":{
      "type":"string",
      "max":256,
      "pattern":".*"
    },
    "ParameterName":{
      "type":"string",
      "max":256,
      "pattern":"[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*"
    },
    "ParameterRange":{
      "type":"structure",
      "members":{
        "IntegerParameterRangeSpecification":{"shape":"IntegerParameterRangeSpecification"},
        "ContinuousParameterRangeSpecification":{"shape":"ContinuousParameterRangeSpecification"},
        "CategoricalParameterRangeSpecification":{"shape":"CategoricalParameterRangeSpecification"}
      }
    },
    "ParameterRanges":{
      "type":"structure",
      "members":{
        "IntegerParameterRanges":{"shape":"IntegerParameterRanges"},
        "ContinuousParameterRanges":{"shape":"ContinuousParameterRanges"},
        "CategoricalParameterRanges":{"shape":"CategoricalParameterRanges"}
      }
    },
    "ParameterScalingType":{
      "type":"string",
      "enum":[
        "Linear",
        "Logarithmic",
        "ReverseLogarithmic"
      ]
    },
    "ParameterType":{
      "type":"string",
      "enum":[
        "Integer",
        "Continuous",
        "Categorical",
        "FreeText"
      ]
    },
    "ParameterValue":{
      "type":"string",
      "max":256,
      "pattern":".*"
    },
    "ParameterValues":{
      "type":"list",
      "member":{"shape":"ParameterValue"},
      "max":20,
      "min":1
    },
    "Parent":{
      "type":"structure",
      "members":{
        "TrialName":{"shape":"ExperimentEntityName"},
        "ExperimentName":{"shape":"ExperimentEntityName"}
      }
    },
    "ParentHyperParameterTuningJob":{
      "type":"structure",
      "members":{
        "HyperParameterTuningJobName":{"shape":"HyperParameterTuningJobName"}
      }
    },
    "ParentHyperParameterTuningJobs":{
      "type":"list",
      "member":{"shape":"ParentHyperParameterTuningJob"},
      "max":5,
      "min":1
    },
    "Parents":{
      "type":"list",
      "member":{"shape":"Parent"}
    },
    "Period":{
      "type":"string",
      "enum":[
        "OneMinute",
        "FiveMinute",
        "OneHour",
        "IterationNumber"
      ]
    },
    "PoolSize":{"type":"integer"},
    "ProblemType":{
      "type":"string",
      "enum":[
        "BinaryClassification",
        "MultiClassClassification",
        "Regression"
      ]
    },
    "ProductId":{
      "type":"string",
      "max":256,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*$"
    },
    "ProductListings":{
      "type":"list",
      "member":{"shape":"String"}
    },
    "ProductionVariant":{
      "type":"structure",
      "required":[
        "VariantName",
        "ModelName",
        "InitialInstanceCount",
        "InstanceType"
      ],
      "members":{
        "VariantName":{
          "shape":"VariantName",
          "documentation":"<p>The name of the production variant.</p>"
        },
        "ModelName":{
          "shape":"ModelName",
          "documentation":"<p>The name of the model that you want to host. This is the name that you specified when creating the model.</p>"
        },
        "InitialInstanceCount":{
          "shape":"TaskCount",
          "documentation":"<p>Number of instances to launch initially.</p>"
        },
        "InstanceType":{
          "shape":"ProductionVariantInstanceType",
          "documentation":"<p>The ML compute instance type.</p>"
        },
        "InitialVariantWeight":{
          "shape":"VariantWeight",
          "documentation":"<p>Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. The traffic to a production variant is determined by the ratio of the <code>VariantWeight</code> to the sum of all <code>VariantWeight</code> values across all ProductionVariants. If unspecified, it defaults to 1.0. </p>"
        },
        "AcceleratorType":{"shape":"ProductionVariantAcceleratorType"}
      },
      "documentation":"<p>Identifies a model that you want to host and the resources to deploy for hosting it. If you are deploying multiple models, tell Amazon SageMaker how to distribute traffic among the models by specifying variant weights. </p>"
    },
    "ProductionVariantAcceleratorType":{
      "type":"string",
      "enum":[
        "ml.eia1.medium",
        "ml.eia1.large",
        "ml.eia1.xlarge",
        "ml.eia2.medium",
        "ml.eia2.large",
        "ml.eia2.xlarge"
      ]
    },
    "ProductionVariantInstanceType":{
      "type":"string",
      "enum":[
        "ml.t2.medium",
        "ml.t2.large",
        "ml.t2.xlarge",
        "ml.t2.2xlarge",
        "ml.m4.xlarge",
        "ml.m4.2xlarge",
        "ml.m4.4xlarge",
        "ml.m4.10xlarge",
        "ml.m4.16xlarge",
        "ml.m5.large",
        "ml.m5.xlarge",
        "ml.m5.2xlarge",
        "ml.m5.4xlarge",
        "ml.m5.12xlarge",
        "ml.m5.24xlarge",
        "ml.m5d.large",
        "ml.m5d.xlarge",
        "ml.m5d.2xlarge",
        "ml.m5d.4xlarge",
        "ml.m5d.12xlarge",
        "ml.m5d.24xlarge",
        "ml.c4.large",
        "ml.c4.xlarge",
        "ml.c4.2xlarge",
        "ml.c4.4xlarge",
        "ml.c4.8xlarge",
        "ml.p2.xlarge",
        "ml.p2.8xlarge",
        "ml.p2.16xlarge",
        "ml.p3.2xlarge",
        "ml.p3.8xlarge",
        "ml.p3.16xlarge",
        "ml.c5.large",
        "ml.c5.xlarge",
        "ml.c5.2xlarge",
        "ml.c5.4xlarge",
        "ml.c5.9xlarge",
        "ml.c5.18xlarge",
        "ml.c5d.large",
        "ml.c5d.xlarge",
        "ml.c5d.2xlarge",
        "ml.c5d.4xlarge",
        "ml.c5d.9xlarge",
        "ml.c5d.18xlarge",
        "ml.g4dn.xlarge",
        "ml.g4dn.2xlarge",
        "ml.g4dn.4xlarge",
        "ml.g4dn.8xlarge",
        "ml.g4dn.12xlarge",
        "ml.g4dn.16xlarge",
        "ml.r5.large",
        "ml.r5.xlarge",
        "ml.r5.2xlarge",
        "ml.r5.4xlarge",
        "ml.r5.12xlarge",
        "ml.r5.24xlarge",
        "ml.r5d.large",
        "ml.r5d.xlarge",
        "ml.r5d.2xlarge",
        "ml.r5d.4xlarge",
        "ml.r5d.12xlarge",
        "ml.r5d.24xlarge"
      ]
    },
    "ProductionVariantList":{
      "type":"list",
      "member":{"shape":"ProductionVariant"},
      "max":10,
      "min":1
    },
    "ProductionVariantSummary":{
      "type":"structure",
      "required":["VariantName"],
      "members":{
        "VariantName":{
          "shape":"VariantName",
          "documentation":"<p>The name of the variant.</p>"
        },
        "DeployedImages":{"shape":"DeployedImages"},
        "CurrentWeight":{
          "shape":"VariantWeight",
          "documentation":"<p>The weight associated with the variant.</p>"
        },
        "DesiredWeight":{
          "shape":"VariantWeight",
          "documentation":"<p>The requested weight, as specified in the <code>UpdateWeightAndCapacities</code> request. </p>"
        },
        "CurrentInstanceCount":{
          "shape":"TaskCount",
          "documentation":"<p>The number of instances associated with the variant.</p>"
        },
        "DesiredInstanceCount":{
          "shape":"TaskCount",
          "documentation":"<p>The number of instances requested in the <code>UpdateWeightAndCapacities</code> request. </p>"
        }
      },
      "documentation":"<p>Describes weight and capacities for a production variant associated with an endpoint. If you sent a request to the <code>UpdateWeightAndCapacities</code> API and the endpoint status is <code>Updating</code>, you get different desired and current values. </p>"
    },
    "ProductionVariantSummaryList":{
      "type":"list",
      "member":{"shape":"ProductionVariantSummary"},
      "min":1
    },
    "PropertyNameHint":{
      "type":"string",
      "max":100,
      "min":0,
      "pattern":".*"
    },
    "PropertyNameQuery":{
      "type":"structure",
      "required":["PropertyNameHint"],
      "members":{
        "PropertyNameHint":{"shape":"PropertyNameHint"}
      }
    },
    "PropertyNameSuggestion":{
      "type":"structure",
      "members":{
        "PropertyName":{"shape":"ResourcePropertyName"}
      }
    },
    "PropertyNameSuggestionList":{
      "type":"list",
      "member":{"shape":"PropertyNameSuggestion"}
    },
    "ProxyToken":{
      "type":"string",
      "max":1024,
      "min":1
    },
    "PublicWorkforceTaskPrice":{
      "type":"structure",
      "members":{
        "AmountInUsd":{"shape":"USD"}
      }
    },
    "PutMetricsErrorCode":{
      "type":"string",
      "enum":[
        "MetricLimitExceeded",
        "InternalError",
        "ValidationError"
      ]
    },
    "RawMetricData":{
      "type":"structure",
      "required":[
        "MetricName",
        "Timestamp",
        "Value"
      ],
      "members":{
        "MetricName":{"shape":"MetricName"},
        "Timestamp":{"shape":"NonNegativeLong"},
        "IterationNumber":{"shape":"NonNegativeInteger"},
        "Value":{"shape":"Float"}
      }
    },
    "RawMetricDataList":{
      "type":"list",
      "member":{"shape":"RawMetricData"},
      "max":10,
      "min":1
    },
    "RealtimeInferenceInstanceTypes":{
      "type":"list",
      "member":{"shape":"ProductionVariantInstanceType"}
    },
    "RecordWrapper":{
      "type":"string",
      "enum":[
        "None",
        "RecordIO"
      ]
    },
    "RemoveJobNameFromS3OutputPath":{"type":"boolean"},
    "RenderUiTemplateRequest":{
      "type":"structure",
      "required":[
        "UiTemplate",
        "Task",
        "RoleArn"
      ],
      "members":{
        "UiTemplate":{"shape":"UiTemplate"},
        "Task":{"shape":"RenderableTask"},
        "RoleArn":{"shape":"RoleArn"}
      }
    },
    "RenderUiTemplateResponse":{
      "type":"structure",
      "required":[
        "RenderedContent",
        "Errors"
      ],
      "members":{
        "RenderedContent":{"shape":"String"},
        "Errors":{"shape":"RenderingErrorList"}
      }
    },
    "RenderableTask":{
      "type":"structure",
      "required":["Input"],
      "members":{
        "Input":{"shape":"TaskInput"}
      }
    },
    "RenderingError":{
      "type":"structure",
      "required":[
        "Code",
        "Message"
      ],
      "members":{
        "Code":{"shape":"String"},
        "Message":{"shape":"String"}
      }
    },
    "RenderingErrorList":{
      "type":"list",
      "member":{"shape":"RenderingError"}
    },
    "Repository":{"type":"string"},
    "RequireImageScan":{"type":"boolean"},
    "ResourceArn":{
      "type":"string",
      "max":256,
      "pattern":"arn:.*"
    },
    "ResourceConfig":{
      "type":"structure",
      "required":[
        "InstanceType",
        "InstanceCount",
        "VolumeSizeInGB"
      ],
      "members":{
        "InstanceType":{
          "shape":"TrainingInstanceType",
          "documentation":"<p>The ML compute instance type. </p>"
        },
        "InstanceCount":{
          "shape":"TrainingInstanceCount",
          "documentation":"<p>The number of ML compute instances to use. For distributed training, provide a value greater than 1. </p>"
        },
        "VolumeSizeInGB":{
          "shape":"VolumeSizeInGB",
          "documentation":"<p>The size of the ML storage volume that you want to provision. </p> <p>ML storage volumes store model artifacts and incremental states. Training algorithms might also use the ML storage volume for scratch space. If you want to store the training data in the ML storage volume, choose <code>File</code> as the <code>TrainingInputMode</code> in the algorithm specification. </p> <p>You must specify sufficient ML storage for your scenario. </p> <note> <p> Amazon SageMaker supports only the General Purpose SSD (gp2) ML storage volume type. </p> </note>"
        },
        "VolumeKmsKeyId":{"shape":"KmsKeyId"}
      },
      "documentation":"<p>Describes the resources, including ML compute instances and ML storage volumes, to use for model training. </p>"
    },
    "ResourceId":{
      "type":"string",
      "max":32
    },
    "ResourceInUse":{
      "type":"structure",
      "members":{
        "Message":{"shape":"FailureReason"}
      },
      "documentation":"<p>Resource being accessed is in use.</p>",
      "exception":true
    },
    "ResourceLimitExceeded":{
      "type":"structure",
      "members":{
        "Message":{"shape":"FailureReason"}
      },
      "documentation":"<p> You have exceeded an Amazon SageMaker resource limit. For example, you might have too many training jobs created. </p>",
      "exception":true
    },
    "ResourceLimits":{
      "type":"structure",
      "required":[
        "MaxNumberOfTrainingJobs",
        "MaxParallelTrainingJobs"
      ],
      "members":{
        "MaxNumberOfTrainingJobs":{"shape":"MaxNumberOfTrainingJobs"},
        "MaxParallelTrainingJobs":{"shape":"MaxParallelTrainingJobs"}
      }
    },
    "ResourceNotFound":{
      "type":"structure",
      "members":{
        "Message":{"shape":"FailureReason"}
      },
      "documentation":"<p>Resource being access is not found.</p>",
      "exception":true
    },
    "ResourcePropertyName":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":".+"
    },
    "ResourceSpec":{
      "type":"structure",
      "members":{
        "EnvironmentArn":{"shape":"String256"},
        "InstanceType":{"shape":"InstanceType"},
        "TempVolumeSizeInGB":{"shape":"TempVolumeSizeInGB"}
      }
    },
    "ResourceType":{
      "type":"string",
      "enum":[
        "TrainingJob",
        "Experiment",
        "ExperimentTrial",
        "ExperimentTrialComponent",
        "TransformJob"
      ]
    },
    "ResponseMIMEType":{
      "type":"string",
      "max":1024,
      "pattern":"^[-\\w]+\\/.+$"
    },
    "ResponseMIMETypes":{
      "type":"list",
      "member":{"shape":"ResponseMIMEType"}
    },
    "ResultVisualizationNotebookLocation":{"type":"string"},
    "RoleArn":{
      "type":"string",
      "max":2048,
      "min":20,
      "pattern":"^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$"
    },
    "RootAccess":{
      "type":"string",
      "enum":[
        "Enabled",
        "Disabled"
      ]
    },
    "RuleConfig":{
      "type":"structure",
      "required":["RuleSpecificationList"],
      "members":{
        "LocalPath":{"shape":"DirectoryPath"},
        "S3OutputPath":{"shape":"S3Uri"},
        "RuleSpecificationList":{"shape":"RuleSpecificationList"}
      }
    },
    "RuleMonitoringStatus":{
      "type":"structure",
      "members":{
        "RuleName":{"shape":"RuleName"},
        "RuleExecutionJobArn":{"shape":"TrainingJobArn"},
        "RuleStatus":{"shape":"RuleStatus"},
        "FailureReason":{"shape":"FailureReason"},
        "LastModifiedTime":{"shape":"Timestamp"}
      }
    },
    "RuleMonitoringStatuses":{
      "type":"list",
      "member":{"shape":"RuleMonitoringStatus"},
      "max":20,
      "min":0
    },
    "RuleName":{
      "type":"string",
      "max":256,
      "min":1
    },
    "RuleSpecification":{
      "type":"structure",
      "required":[
        "RuleName",
        "RuleEvaluatorImage",
        "InstanceType",
        "VolumeSizeInGB"
      ],
      "members":{
        "RuleName":{"shape":"RuleName"},
        "RuleEvaluatorImage":{"shape":"AlgorithmImage"},
        "SourceS3Uri":{"shape":"S3Uri"},
        "InstanceType":{"shape":"TrainingInstanceType"},
        "VolumeSizeInGB":{"shape":"VolumeSizeInGB"},
        "RuntimeConfigurations":{"shape":"RuntimeConfigurations"}
      }
    },
    "RuleSpecificationList":{
      "type":"list",
      "member":{"shape":"RuleSpecification"},
      "max":20,
      "min":0
    },
    "RuleStatus":{
      "type":"string",
      "enum":[
        "NotStarted",
        "InProgress",
        "Success",
        "RuleExecutionError",
        "Failed",
        "Stopping",
        "Stopped"
      ]
    },
    "RuntimeConfigurations":{
      "type":"map",
      "key":{"shape":"ConfigKey"},
      "value":{"shape":"ConfigValue"},
      "max":20,
      "min":0
    },
    "S3ArtifactPath":{"type":"string"},
    "S3DataDistribution":{
      "type":"string",
      "enum":[
        "FullyReplicated",
        "ShardedByS3Key"
      ]
    },
    "S3DataSource":{
      "type":"structure",
      "required":[
        "S3DataType",
        "S3Uri"
      ],
      "members":{
        "S3DataType":{
          "shape":"S3DataType",
          "documentation":"<p>If you choose <code>S3Prefix</code>, <code>S3Uri</code> identifies a key name prefix. Amazon SageMaker uses all objects with the specified key name prefix for model training. </p> <p>If you choose <code>ManifestFile</code>, <code>S3Uri</code> identifies an object that is a manifest file containing a list of object keys that you want Amazon SageMaker to use for model training. </p>"
        },
        "S3Uri":{
          "shape":"S3Uri",
          "documentation":"<p>Depending on the value specified for the <code>S3DataType</code>, identifies either a key name prefix or a manifest. For example: </p> <ul> <li> <p> A key name prefix might look like this: <code>s3://bucketname/exampleprefix</code>. </p> </li> <li> <p> A manifest might look like this: <code>s3://bucketname/example.manifest</code> </p> <p> The manifest is an S3 object which is a JSON file with the following format: </p> <p> <code>[</code> </p> <p> <code> {\"prefix\": \"s3://customer_bucket/some/prefix/\"},</code> </p> <p> <code> \"relative/path/to/custdata-1\",</code> </p> <p> <code> \"relative/path/custdata-2\",</code> </p> <p> <code> ...</code> </p> <p> <code> ]</code> </p> <p> The preceding JSON matches the following <code>s3Uris</code>: </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/to/custdata-1</code> </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/custdata-1</code> </p> <p> <code>...</code> </p> <p> The complete set of <code>s3uris</code> in this manifest constitutes the input data for the channel for this datasource. The object that each <code>s3uris</code> points to must readable by the IAM role that Amazon SageMaker uses to perform tasks on your behalf. </p> </li> </ul>"
        },
        "S3DataDistributionType":{
          "shape":"S3DataDistribution",
          "documentation":"<p>If you want Amazon SageMaker to replicate the entire dataset on each ML compute instance that is launched for model training, specify <code>FullyReplicated</code>. </p> <p>If you want Amazon SageMaker to replicate a subset of data on each ML compute instance that is launched for model training, specify <code>ShardedByS3Key</code>. If there are <i>n</i> ML compute instances launched for a training job, each instance gets approximately 1/<i>n</i> of the number of S3 objects. In this case, model training on each machine uses only the subset of training data. </p> <p>Don't choose more ML compute instances for training than available S3 objects. If you do, some nodes won't get any data and you will pay for nodes that aren't getting any training data. This applies in both FILE and PIPE modes. Keep this in mind when developing algorithms. </p> <p>In distributed training, where you use multiple ML compute EC2 instances, you might choose <code>ShardedByS3Key</code>. If the algorithm requires copying training data to the ML storage volume (when <code>TrainingInputMode</code> is set to <code>File</code>), this copies 1/<i>n</i> of the number of objects. </p>"
        },
        "AttributeNames":{"shape":"AttributeNames"}
      },
      "documentation":"<p>Describes the S3 data source.</p>"
    },
    "S3DataType":{
      "type":"string",
      "enum":[
        "ManifestFile",
        "S3Prefix",
        "AugmentedManifestFile"
      ]
    },
    "S3JobProgress":{
      "type":"structure",
      "required":[
        "CompletedObjects",
        "FailedObjects"
      ],
      "members":{
        "CompletedObjects":{"shape":"CompletedObjects"},
        "FailedObjects":{"shape":"FailedObjects"}
      }
    },
    "S3Uri":{
      "type":"string",
      "max":1024,
      "pattern":"^(https|s3)://([^/]+)/?(.*)$"
    },
    "SageMakerResourceArn":{
      "type":"string",
      "max":2048,
      "min":1,
      "pattern":"arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:.*\\/.*"
    },
    "SamplingPercentage":{
      "type":"integer",
      "max":100,
      "min":0
    },
    "ScheduleConfig":{
      "type":"structure",
      "required":["ScheduleExpression"],
      "members":{
        "ScheduleExpression":{"shape":"ScheduleExpression"},
        "State":{"shape":"ScheduleState"}
      }
    },
    "ScheduleExpression":{
      "type":"string",
      "max":512,
      "min":1
    },
    "ScheduleState":{
      "type":"string",
      "enum":[
        "Scheduled",
        "RunOnce",
        "Stopped"
      ]
    },
    "ScheduleStatus":{
      "type":"string",
      "enum":[
        "Pending",
        "Started",
        "Stopped"
      ]
    },
    "SearchExpression":{
      "type":"structure",
      "members":{
        "Filters":{"shape":"FilterList"},
        "NestedFilters":{"shape":"NestedFiltersList"},
        "SubExpressions":{"shape":"SearchExpressionList"},
        "Operator":{"shape":"BooleanOperator"}
      }
    },
    "SearchExpressionList":{
      "type":"list",
      "member":{"shape":"SearchExpression"},
      "max":20,
      "min":1
    },
    "SearchRecord":{
      "type":"structure",
      "members":{
        "TrainingJob":{"shape":"TrainingJob"},
        "Experiment":{
          "shape":"Experiment",
          "internalonly":true
        },
        "Trial":{
          "shape":"Trial",
          "internalonly":true
        },
        "TrialComponent":{
          "shape":"TrialComponent",
          "internalonly":true
        },
        "TransformJob":{
          "shape":"TransformJob",
          "internalonly":true
        }
      }
    },
    "SearchRequest":{
      "type":"structure",
      "required":["Resource"],
      "members":{
        "Resource":{"shape":"ResourceType"},
        "SearchExpression":{"shape":"SearchExpression"},
        "SearchString":{
          "shape":"SearchString",
          "internalonly":true
        },
        "SortBy":{"shape":"ResourcePropertyName"},
        "SortOrder":{"shape":"SearchSortOrder"},
        "NextToken":{"shape":"NextToken"},
        "MaxResults":{
          "shape":"MaxResults",
          "box":true
        }
      }
    },
    "SearchResponse":{
      "type":"structure",
      "members":{
        "Results":{"shape":"SearchResultsList"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "SearchResultsList":{
      "type":"list",
      "member":{"shape":"SearchRecord"}
    },
    "SearchSortOrder":{
      "type":"string",
      "enum":[
        "Ascending",
        "Descending"
      ]
    },
    "SearchString":{
      "type":"string",
      "max":1024,
      "min":0,
      "pattern":".+"
    },
    "SecondaryStatus":{
      "type":"string",
      "enum":[
        "Starting",
        "LaunchingMLInstances",
        "PreparingTrainingStack",
        "Downloading",
        "DownloadingTrainingImage",
        "Training",
        "Uploading",
        "Stopping",
        "Stopped",
        "MaxRuntimeExceeded",
        "Completed",
        "Failed",
        "Interrupted",
        "MaxWaitTimeExceeded"
      ]
    },
    "SecondaryStatusTransition":{
      "type":"structure",
      "required":[
        "Status",
        "StartTime"
      ],
      "members":{
        "Status":{"shape":"SecondaryStatus"},
        "StartTime":{"shape":"Timestamp"},
        "EndTime":{"shape":"Timestamp"},
        "StatusMessage":{"shape":"StatusMessage"}
      }
    },
    "SecondaryStatusTransitions":{
      "type":"list",
      "member":{"shape":"SecondaryStatusTransition"}
    },
    "SecretArn":{
      "type":"string",
      "max":2048,
      "min":1,
      "pattern":"arn:aws[a-z\\-]*:secretsmanager:[a-z0-9\\-]*:[0-9]{12}:secret:.*"
    },
    "SecurityGroupId":{
      "type":"string",
      "max":32,
      "pattern":"[-0-9a-zA-Z]+"
    },
    "SecurityGroupIds":{
      "type":"list",
      "member":{"shape":"SecurityGroupId"},
      "max":5
    },
    "Seed":{"type":"long"},
    "SessionExpirationDurationInSeconds":{
      "type":"integer",
      "max":43200,
      "min":1800
    },
    "ShuffleConfig":{
      "type":"structure",
      "required":["Seed"],
      "members":{
        "Seed":{"shape":"Seed"}
      }
    },
    "SortBy":{
      "type":"string",
      "enum":[
        "Name",
        "CreationTime",
        "Status"
      ]
    },
    "SortExperimentsBy":{
      "type":"string",
      "enum":[
        "Name",
        "CreationTime"
      ]
    },
    "SortOrder":{
      "type":"string",
      "enum":[
        "Ascending",
        "Descending"
      ]
    },
    "SortTrialComponentsBy":{
      "type":"string",
      "enum":[
        "Name",
        "CreationTime"
      ]
    },
    "SortTrialsBy":{
      "type":"string",
      "enum":[
        "Name",
        "CreationTime"
      ]
    },
    "SourceAlgorithm":{
      "type":"structure",
      "required":["AlgorithmName"],
      "members":{
        "ModelDataUrl":{"shape":"Url"},
        "ModelDataETag":{
          "shape":"String",
          "internalonly":true
        },
        "AlgorithmName":{"shape":"ArnOrName"}
      }
    },
    "SourceAlgorithmList":{
      "type":"list",
      "member":{"shape":"SourceAlgorithm"},
      "max":1,
      "min":1
    },
    "SourceAlgorithmSpecification":{
      "type":"structure",
      "required":["SourceAlgorithms"],
      "members":{
        "SourceAlgorithms":{"shape":"SourceAlgorithmList"}
      }
    },
    "SourceIpConfig":{
      "type":"structure",
      "required":["Cidrs"],
      "members":{
        "Cidrs":{"shape":"Cidrs"}
      }
    },
    "SplitType":{
      "type":"string",
      "enum":[
        "None",
        "Line",
        "RecordIO",
        "TFRecord"
      ]
    },
    "StartMonitoringScheduleRequest":{
      "type":"structure",
      "required":["MonitoringScheduleName"],
      "members":{
        "MonitoringScheduleName":{"shape":"MonitoringScheduleName"}
      }
    },
    "StartNotebookInstanceInput":{
      "type":"structure",
      "required":["NotebookInstanceName"],
      "members":{
        "NotebookInstanceName":{
          "shape":"NotebookInstanceName",
          "documentation":"<p>The name of the notebook instance to start.</p>"
        }
      }
    },
    "StateMachineArn":{
      "type":"string",
      "max":512,
      "min":0
    },
    "StateMachineArnProviderLambdaArn":{"type":"string"},
    "StatusMessage":{"type":"string"},
    "StopAnalyticsJobInternalRequest":{
      "type":"structure",
      "required":["AnalyticsJobName"],
      "members":{
        "AnalyticsJobName":{"shape":"AnalyticsJobName"},
        "CustomerDetails":{"shape":"CustomerDetails"}
      }
    },
    "StopAnalyticsJobRequest":{
      "type":"structure",
      "required":["AnalyticsJobName"],
      "members":{
        "AnalyticsJobName":{"shape":"AnalyticsJobName"}
      }
    },
    "StopAppRequest":{
      "type":"structure",
      "required":[
        "AppType",
        "AppName"
      ],
      "members":{
        "DomainId":{"shape":"ResourceId"},
        "IdentityId":{"shape":"IdentityId"},
        "AppType":{"shape":"AppType"},
        "AppName":{"shape":"AppName"}
      }
    },
    "StopAppResponse":{
      "type":"structure",
      "members":{
        "AppArn":{"shape":"String256"}
      }
    },
    "StopAutoMLJobRequest":{
      "type":"structure",
      "required":["AutoMLJobName"],
      "members":{
        "AutoMLJobName":{"shape":"AutoMLJobName"}
      }
    },
    "StopCompilationJobRequest":{
      "type":"structure",
      "required":["CompilationJobName"],
      "members":{
        "CompilationJobName":{"shape":"EntityName"}
      }
    },
    "StopHyperParameterTuningJobInternalRequest":{
      "type":"structure",
      "required":[
        "HyperParameterTuningJobName",
        "CustomerDetails"
      ],
      "members":{
        "HyperParameterTuningJobName":{"shape":"HyperParameterTuningJobName"},
        "CustomerDetails":{"shape":"CustomerDetails"}
      }
    },
    "StopHyperParameterTuningJobRequest":{
      "type":"structure",
      "required":["HyperParameterTuningJobName"],
      "members":{
        "HyperParameterTuningJobName":{"shape":"HyperParameterTuningJobName"}
      }
    },
    "StopLabelingJobRequest":{
      "type":"structure",
      "required":["LabelingJobName"],
      "members":{
        "LabelingJobName":{"shape":"LabelingJobName"}
      }
    },
    "StopMonitoringScheduleRequest":{
      "type":"structure",
      "required":["MonitoringScheduleName"],
      "members":{
        "MonitoringScheduleName":{"shape":"MonitoringScheduleName"}
      }
    },
    "StopNotebookInstanceInput":{
      "type":"structure",
      "required":["NotebookInstanceName"],
      "members":{
        "NotebookInstanceName":{
          "shape":"NotebookInstanceName",
          "documentation":"<p>The name of the notebook instance to terminate.</p>"
        }
      }
    },
    "StopTrainingJobInternalRequest":{
      "type":"structure",
      "required":[
        "TrainingJobName",
        "CustomerDetails"
      ],
      "members":{
        "TrainingJobName":{"shape":"TrainingJobName"},
        "CustomerDetails":{"shape":"CustomerDetails"}
      }
    },
    "StopTrainingJobRequest":{
      "type":"structure",
      "required":["TrainingJobName"],
      "members":{
        "TrainingJobName":{
          "shape":"TrainingJobName",
          "documentation":"<p>The name of the training job to stop.</p>"
        }
      }
    },
    "StopTransformJobInternalRequest":{
      "type":"structure",
      "required":[
        "TransformJobName",
        "CustomerDetails"
      ],
      "members":{
        "TransformJobName":{"shape":"TransformJobName"},
        "CustomerDetails":{"shape":"CustomerDetails"}
      }
    },
    "StopTransformJobRequest":{
      "type":"structure",
      "required":["TransformJobName"],
      "members":{
        "TransformJobName":{"shape":"TransformJobName"}
      }
    },
    "StoppingCondition":{
      "type":"structure",
      "members":{
        "MaxRuntimeInSeconds":{
          "shape":"MaxRuntimeInSeconds",
          "documentation":"<p>The maximum length of time, in seconds, that the training job can run. If model training does not complete during this time, Amazon SageMaker ends the job. If value is not specified, default value is 1 day. Maximum value is 5 days.</p>"
        },
        "MaxWaitTimeInSeconds":{"shape":"MaxWaitTimeInSeconds"}
      },
      "documentation":"<p>Specifies how long model training can run. When model training reaches the limit, Amazon SageMaker ends the training job. Use this API to cap model training cost.</p> <p>To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for120 seconds. Algorithms might use this 120-second window to save the model artifacts, so the results of training is not lost. </p> <p>Training algorithms provided by Amazon SageMaker automatically saves the intermediate results of a model training job (it is best effort case, as model might not be ready to save as some stages, for example training just started). This intermediate data is a valid model artifact. You can use it to create a model (<code>CreateModel</code>). </p>"
    },
    "String":{"type":"string"},
    "String1024":{
      "type":"string",
      "max":1024
    },
    "String200":{
      "type":"string",
      "max":200,
      "min":1,
      "pattern":".+"
    },
    "String2048":{
      "type":"string",
      "max":2048
    },
    "String256":{
      "type":"string",
      "max":256
    },
    "StringParameterValue":{
      "type":"string",
      "max":256,
      "pattern":".*"
    },
    "SubnetId":{
      "type":"string",
      "max":32,
      "pattern":"[-0-9a-zA-Z]+"
    },
    "Subnets":{
      "type":"list",
      "member":{"shape":"SubnetId"},
      "max":16,
      "min":1
    },
    "SubscribedWorkteam":{
      "type":"structure",
      "required":["WorkteamArn"],
      "members":{
        "WorkteamArn":{"shape":"WorkteamArn"},
        "MarketplaceTitle":{"shape":"String200"},
        "SellerName":{"shape":"String"},
        "MarketplaceDescription":{"shape":"String200"},
        "ListingId":{"shape":"String"}
      }
    },
    "SubscribedWorkteams":{
      "type":"list",
      "member":{"shape":"SubscribedWorkteam"}
    },
    "Success":{"type":"boolean"},
    "SuggestionQuery":{
      "type":"structure",
      "members":{
        "PropertyNameQuery":{"shape":"PropertyNameQuery"}
      }
    },
    "Tag":{
      "type":"structure",
      "required":[
        "Key",
        "Value"
      ],
      "members":{
        "Key":{
          "shape":"TagKey",
          "documentation":"<p>The tag key.</p>"
        },
        "Value":{
          "shape":"TagValue",
          "documentation":"<p>The tag value.</p>"
        }
      },
      "documentation":"<p>Describes a tag. </p>"
    },
    "TagKey":{
      "type":"string",
      "max":128,
      "min":1,
      "pattern":"^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
    },
    "TagKeyList":{
      "type":"list",
      "member":{"shape":"TagKey"},
      "max":50,
      "min":1
    },
    "TagList":{
      "type":"list",
      "member":{"shape":"Tag"},
      "max":50,
      "min":0
    },
    "TagValue":{
      "type":"string",
      "max":256,
      "min":0,
      "pattern":"^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
    },
    "TagrisAccessDeniedException":{
      "type":"structure",
      "members":{
        "message":{"shape":"TagrisExceptionMessage"}
      },
      "exception":true
    },
    "TagrisAccountId":{
      "type":"string",
      "max":12,
      "min":12
    },
    "TagrisAmazonResourceName":{
      "type":"string",
      "max":1011,
      "min":1
    },
    "TagrisExceptionMessage":{
      "type":"string",
      "max":2048,
      "min":0
    },
    "TagrisInternalId":{
      "type":"string",
      "max":64,
      "min":0
    },
    "TagrisInternalServiceException":{
      "type":"structure",
      "members":{
        "message":{"shape":"TagrisExceptionMessage"}
      },
      "exception":true,
      "fault":true
    },
    "TagrisInvalidArnException":{
      "type":"structure",
      "members":{
        "message":{"shape":"TagrisExceptionMessage"},
        "sweepListItem":{"shape":"TagrisSweepListItem"}
      },
      "exception":true
    },
    "TagrisInvalidParameterException":{
      "type":"structure",
      "members":{
        "message":{"shape":"TagrisExceptionMessage"}
      },
      "exception":true
    },
    "TagrisPartialResourcesExistResultsException":{
      "type":"structure",
      "members":{
        "message":{"shape":"TagrisExceptionMessage"},
        "resourceExistenceInformation":{"shape":"TagrisSweepListResult"}
      },
      "exception":true
    },
    "TagrisStatus":{
      "type":"string",
      "enum":[
        "ACTIVE",
        "NOT_ACTIVE"
      ]
    },
    "TagrisSweepList":{
      "type":"list",
      "member":{"shape":"TagrisSweepListItem"}
    },
    "TagrisSweepListItem":{
      "type":"structure",
      "members":{
        "TagrisAccountId":{"shape":"TagrisAccountId"},
        "TagrisAmazonResourceName":{"shape":"TagrisAmazonResourceName"},
        "TagrisInternalId":{"shape":"TagrisInternalId"},
        "TagrisVersion":{"shape":"TagrisVersion"}
      }
    },
    "TagrisSweepListResult":{
      "type":"map",
      "key":{"shape":"TagrisAmazonResourceName"},
      "value":{"shape":"TagrisStatus"}
    },
    "TagrisThrottledException":{
      "type":"structure",
      "members":{
        "message":{"shape":"TagrisExceptionMessage"}
      },
      "exception":true
    },
    "TagrisVerifyResourcesExistInput":{
      "type":"structure",
      "required":["TagrisSweepList"],
      "members":{
        "TagrisSweepList":{"shape":"TagrisSweepList"}
      }
    },
    "TagrisVerifyResourcesExistOutput":{
      "type":"structure",
      "required":["TagrisSweepListResult"],
      "members":{
        "TagrisSweepListResult":{"shape":"TagrisSweepListResult"}
      }
    },
    "TagrisVersion":{"type":"long"},
    "TargetAttributeName":{
      "type":"string",
      "min":0
    },
    "TargetDevice":{
      "type":"string",
      "enum":[
        "lambda",
        "ml_m4",
        "ml_m5",
        "ml_c4",
        "ml_c5",
        "ml_p2",
        "ml_p3",
        "jetson_tx1",
        "jetson_tx2",
        "jetson_nano",
        "rasp3b",
        "deeplens",
        "rk3399",
        "rk3288",
        "aisage",
        "sbe_c",
        "qcs605",
        "qcs603"
      ]
    },
    "TargetObjective":{"type":"float"},
    "TargetObjectiveMetricValue":{"type":"float"},
    "TaskAvailabilityLifetimeInSeconds":{
      "type":"integer",
      "max":864000,
      "min":1
    },
    "TaskCount":{
      "type":"integer",
      "min":1
    },
    "TaskDescription":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":".+"
    },
    "TaskInput":{
      "type":"string",
      "max":128000,
      "min":2,
      "pattern":"[\\S\\s]+"
    },
    "TaskKeyword":{
      "type":"string",
      "max":30,
      "min":1,
      "pattern":"^[A-Za-z0-9]+( [A-Za-z0-9]+)*$"
    },
    "TaskKeywords":{
      "type":"list",
      "member":{"shape":"TaskKeyword"},
      "max":5,
      "min":1
    },
    "TaskTimeLimitInSeconds":{
      "type":"integer",
      "max":28800,
      "min":30
    },
    "TaskTitle":{
      "type":"string",
      "max":128,
      "min":1,
      "pattern":"^[\\t\\n\\r -\\uD7FF\\uE000-\\uFFFD]*$"
    },
    "TempVolumeSizeInGB":{"type":"integer"},
    "TemplateContent":{
      "type":"string",
      "max":128000,
      "min":1,
      "pattern":"[\\S\\s]+"
    },
    "TemplateContentSha256":{
      "type":"string",
      "max":128000,
      "min":1
    },
    "TemplateUrl":{
      "type":"string",
      "max":2048,
      "min":1
    },
    "TensorRegex":{
      "type":"string",
      "max":256,
      "min":1
    },
    "TenthFractionsOfACent":{
      "type":"integer",
      "max":9,
      "min":0
    },
    "Timestamp":{"type":"timestamp"},
    "TrainingInputMode":{
      "type":"string",
      "enum":[
        "Pipe",
        "File"
      ]
    },
    "TrainingInstanceCount":{
      "type":"integer",
      "min":1
    },
    "TrainingInstanceType":{
      "type":"string",
      "enum":[
        "ml.m4.xlarge",
        "ml.m4.2xlarge",
        "ml.m4.4xlarge",
        "ml.m4.10xlarge",
        "ml.m4.16xlarge",
        "ml.m5.large",
        "ml.m5.xlarge",
        "ml.m5.2xlarge",
        "ml.m5.4xlarge",
        "ml.m5.12xlarge",
        "ml.m5.24xlarge",
        "ml.c4.xlarge",
        "ml.c4.2xlarge",
        "ml.c4.4xlarge",
        "ml.c4.8xlarge",
        "ml.p2.xlarge",
        "ml.p2.8xlarge",
        "ml.p2.16xlarge",
        "ml.p3.2xlarge",
        "ml.p3.8xlarge",
        "ml.p3.16xlarge",
        "ml.p3dn.24xlarge",
        "ml.c5.xlarge",
        "ml.c5.2xlarge",
        "ml.c5.4xlarge",
        "ml.c5.9xlarge",
        "ml.c5.18xlarge"
      ]
    },
    "TrainingInstanceTypes":{
      "type":"list",
      "member":{"shape":"TrainingInstanceType"}
    },
    "TrainingJob":{
      "type":"structure",
      "members":{
        "TrainingJobName":{"shape":"TrainingJobName"},
        "TrainingJobArn":{"shape":"TrainingJobArn"},
        "TuningJobArn":{"shape":"HyperParameterTuningJobArn"},
        "LabelingJobArn":{"shape":"LabelingJobArn"},
        "AutoMLJobArn":{
          "shape":"AutoMLJobArn",
          "internalonly":true
        },
        "ModelArtifacts":{"shape":"ModelArtifacts"},
        "TrainingJobOutput":{
          "shape":"TrainingJobOutput",
          "internalonly":true
        },
        "TrainingJobStatus":{"shape":"TrainingJobStatus"},
        "SecondaryStatus":{"shape":"SecondaryStatus"},
        "FailureReason":{"shape":"FailureReason"},
        "HyperParameters":{"shape":"HyperParameters"},
        "AlgorithmSpecification":{"shape":"AlgorithmSpecification"},
        "RoleArn":{"shape":"RoleArn"},
        "InputDataConfig":{"shape":"InputDataConfig"},
        "OutputDataConfig":{"shape":"OutputDataConfig"},
        "ResourceConfig":{"shape":"ResourceConfig"},
        "VpcConfig":{"shape":"VpcConfig"},
        "StoppingCondition":{"shape":"StoppingCondition"},
        "CreationTime":{"shape":"Timestamp"},
        "TrainingStartTime":{"shape":"Timestamp"},
        "TrainingEndTime":{"shape":"Timestamp"},
        "LastModifiedTime":{"shape":"Timestamp"},
        "SecondaryStatusTransitions":{"shape":"SecondaryStatusTransitions"},
        "FinalMetricDataList":{"shape":"FinalMetricDataList"},
        "EnableNetworkIsolation":{"shape":"Boolean"},
        "EnableInterContainerTrafficEncryption":{"shape":"Boolean"},
        "EnableManagedSpotTraining":{"shape":"Boolean"},
        "CheckpointConfig":{"shape":"CheckpointConfig"},
        "TrainingTimeInSeconds":{"shape":"TrainingTimeInSeconds"},
        "BillableTimeInSeconds":{"shape":"BillableTimeInSeconds"},
        "DebugConfig":{
          "shape":"DebugConfig",
          "internalonly":true
        },
        "RuleMonitoringStatuses":{
          "shape":"RuleMonitoringStatuses",
          "internalonly":true
        },
        "ExperimentConfig":{
          "shape":"ExperimentConfig",
          "internalonly":true
        },
        "Tags":{"shape":"TagList"}
      }
    },
    "TrainingJobArn":{
      "type":"string",
      "max":256,
      "pattern":"arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:training-job/.*"
    },
    "TrainingJobDefinition":{
      "type":"structure",
      "required":[
        "TrainingInputMode",
        "InputDataConfig",
        "OutputDataConfig",
        "ResourceConfig",
        "StoppingCondition"
      ],
      "members":{
        "TrainingInputMode":{"shape":"TrainingInputMode"},
        "HyperParameters":{"shape":"HyperParameters"},
        "InputDataConfig":{"shape":"InputDataConfig"},
        "OutputDataConfig":{"shape":"OutputDataConfig"},
        "ResourceConfig":{"shape":"ResourceConfig"},
        "StoppingCondition":{"shape":"StoppingCondition"}
      }
    },
    "TrainingJobEarlyStoppingType":{
      "type":"string",
      "enum":[
        "Off",
        "Auto"
      ]
    },
    "TrainingJobName":{
      "type":"string",
      "max":63,
      "min":1,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    },
    "TrainingJobOutput":{
      "type":"structure",
      "required":["S3TrainingJobOutput"],
      "members":{
        "S3TrainingJobOutput":{
          "shape":"S3Uri",
          "documentation":"<p>Provides information about the S3 bucket where training job output (model artifacts) is stored. For example, <code>s3://bucket-name/keyname-prefix/output.tar.gz</code>.</p>"
        }
      },
      "documentation":"<p>Provides information about the location that is configured for storing optional output. </p>"
    },
    "TrainingJobSortByOptions":{
      "type":"string",
      "enum":[
        "Name",
        "CreationTime",
        "Status",
        "FinalObjectiveMetricValue"
      ]
    },
    "TrainingJobStatus":{
      "type":"string",
      "enum":[
        "InProgress",
        "Completed",
        "Failed",
        "Stopping",
        "Stopped"
      ]
    },
    "TrainingJobStatusCounter":{
      "type":"integer",
      "min":0
    },
    "TrainingJobStatusCounters":{
      "type":"structure",
      "members":{
        "Completed":{"shape":"TrainingJobStatusCounter"},
        "InProgress":{"shape":"TrainingJobStatusCounter"},
        "RetryableError":{"shape":"TrainingJobStatusCounter"},
        "NonRetryableError":{"shape":"TrainingJobStatusCounter"},
        "Stopped":{"shape":"TrainingJobStatusCounter"}
      }
    },
    "TrainingJobSummaries":{
      "type":"list",
      "member":{"shape":"TrainingJobSummary"}
    },
    "TrainingJobSummary":{
      "type":"structure",
      "required":[
        "TrainingJobName",
        "TrainingJobArn",
        "CreationTime",
        "TrainingJobStatus"
      ],
      "members":{
        "TrainingJobName":{
          "shape":"TrainingJobName",
          "documentation":"<p>The name of the training job that you want a summary for.</p>"
        },
        "TrainingJobArn":{
          "shape":"TrainingJobArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the training job.</p>"
        },
        "CreationTime":{
          "shape":"Timestamp",
          "documentation":"<p>A timestamp that shows when the training job was created.</p>"
        },
        "TrainingEndTime":{
          "shape":"Timestamp",
          "documentation":"<p>A timestamp that shows when the training job ended. This field is set only if the training job has one of the terminal statuses (<code>Completed</code>, <code>Failed</code>, or <code>Stopped</code>). </p>"
        },
        "LastModifiedTime":{
          "shape":"Timestamp",
          "documentation":"<p> Timestamp when the training job was last modified. </p>"
        },
        "TrainingJobStatus":{
          "shape":"TrainingJobStatus",
          "documentation":"<p>The status of the training job.</p>"
        }
      },
      "documentation":"<p>Provides summary information about a training job.</p>"
    },
    "TrainingSpecification":{
      "type":"structure",
      "required":[
        "TrainingImage",
        "SupportedTrainingInstanceTypes",
        "TrainingChannels"
      ],
      "members":{
        "TrainingImage":{"shape":"Image"},
        "TrainingImageDigest":{"shape":"ImageDigest"},
        "SupportedHyperParameters":{"shape":"HyperParameterSpecifications"},
        "SupportedTrainingInstanceTypes":{"shape":"TrainingInstanceTypes"},
        "SupportsDistributedTraining":{"shape":"Boolean"},
        "MetricDefinitions":{"shape":"MetricDefinitionList"},
        "TrainingChannels":{"shape":"ChannelSpecifications"},
        "SupportedTuningJobObjectiveMetrics":{"shape":"HyperParameterTuningJobObjectives"}
      }
    },
    "TrainingTimeInSeconds":{
      "type":"integer",
      "min":1
    },
    "TransformDataSource":{
      "type":"structure",
      "required":["S3DataSource"],
      "members":{
        "S3DataSource":{"shape":"TransformS3DataSource"}
      }
    },
    "TransformEnvironmentKey":{
      "type":"string",
      "max":1024,
      "pattern":"[a-zA-Z_][a-zA-Z0-9_]*"
    },
    "TransformEnvironmentMap":{
      "type":"map",
      "key":{"shape":"TransformEnvironmentKey"},
      "value":{"shape":"TransformEnvironmentValue"},
      "max":16
    },
    "TransformEnvironmentValue":{
      "type":"string",
      "max":10240,
      "pattern":"[\\S\\s]*"
    },
    "TransformInput":{
      "type":"structure",
      "required":["DataSource"],
      "members":{
        "DataSource":{"shape":"TransformDataSource"},
        "ContentType":{"shape":"ContentType"},
        "CompressionType":{"shape":"CompressionType"},
        "SplitType":{"shape":"SplitType"}
      }
    },
    "TransformInstanceCount":{
      "type":"integer",
      "min":1
    },
    "TransformInstanceType":{
      "type":"string",
      "enum":[
        "ml.m4.xlarge",
        "ml.m4.2xlarge",
        "ml.m4.4xlarge",
        "ml.m4.10xlarge",
        "ml.m4.16xlarge",
        "ml.c4.xlarge",
        "ml.c4.2xlarge",
        "ml.c4.4xlarge",
        "ml.c4.8xlarge",
        "ml.p2.xlarge",
        "ml.p2.8xlarge",
        "ml.p2.16xlarge",
        "ml.p3.2xlarge",
        "ml.p3.8xlarge",
        "ml.p3.16xlarge",
        "ml.c5.xlarge",
        "ml.c5.2xlarge",
        "ml.c5.4xlarge",
        "ml.c5.9xlarge",
        "ml.c5.18xlarge",
        "ml.m5.large",
        "ml.m5.xlarge",
        "ml.m5.2xlarge",
        "ml.m5.4xlarge",
        "ml.m5.12xlarge",
        "ml.m5.24xlarge"
      ]
    },
    "TransformInstanceTypes":{
      "type":"list",
      "member":{"shape":"TransformInstanceType"},
      "min":1
    },
    "TransformJob":{
      "type":"structure",
      "members":{
        "TransformJobName":{"shape":"TransformJobName"},
        "TransformJobArn":{"shape":"TransformJobArn"},
        "TransformJobStatus":{"shape":"TransformJobStatus"},
        "FailureReason":{"shape":"FailureReason"},
        "ModelName":{"shape":"ModelName"},
        "MaxConcurrentTransforms":{"shape":"MaxConcurrentTransforms"},
        "MaxPayloadInMB":{"shape":"MaxPayloadInMB"},
        "BatchStrategy":{"shape":"BatchStrategy"},
        "Environment":{"shape":"TransformEnvironmentMap"},
        "TransformInput":{"shape":"TransformInput"},
        "TransformOutput":{"shape":"TransformOutput"},
        "TransformResources":{"shape":"TransformResources"},
        "CreationTime":{"shape":"Timestamp"},
        "TransformStartTime":{"shape":"Timestamp"},
        "TransformEndTime":{"shape":"Timestamp"},
        "LabelingJobArn":{"shape":"LabelingJobArn"},
        "AutoMLJobArn":{
          "shape":"AutoMLJobArn",
          "internalonly":true
        },
        "TransformJobProgress":{
          "shape":"TransformJobProgress",
          "internalonly":true
        },
        "DataProcessing":{"shape":"DataProcessing"},
        "ExperimentConfig":{
          "shape":"ExperimentConfig",
          "internalonly":true
        }
      },
      "internalonly":true
    },
    "TransformJobArn":{
      "type":"string",
      "max":256,
      "pattern":"arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:transform-job/.*"
    },
    "TransformJobDefinition":{
      "type":"structure",
      "required":[
        "TransformInput",
        "TransformOutput",
        "TransformResources"
      ],
      "members":{
        "MaxConcurrentTransforms":{"shape":"MaxConcurrentTransforms"},
        "MaxPayloadInMB":{"shape":"MaxPayloadInMB"},
        "BatchStrategy":{"shape":"BatchStrategy"},
        "Environment":{"shape":"TransformEnvironmentMap"},
        "TransformInput":{"shape":"TransformInput"},
        "TransformOutput":{"shape":"TransformOutput"},
        "TransformResources":{"shape":"TransformResources"}
      }
    },
    "TransformJobName":{
      "type":"string",
      "max":63,
      "min":1,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    },
    "TransformJobProgress":{
      "type":"structure",
      "members":{
        "S3JobProgress":{"shape":"S3JobProgress"}
      }
    },
    "TransformJobStatus":{
      "type":"string",
      "enum":[
        "InProgress",
        "Completed",
        "Failed",
        "Stopping",
        "Stopped"
      ]
    },
    "TransformJobSummaries":{
      "type":"list",
      "member":{"shape":"TransformJobSummary"}
    },
    "TransformJobSummary":{
      "type":"structure",
      "required":[
        "TransformJobName",
        "TransformJobArn",
        "CreationTime",
        "TransformJobStatus"
      ],
      "members":{
        "TransformJobName":{"shape":"TransformJobName"},
        "TransformJobArn":{"shape":"TransformJobArn"},
        "CreationTime":{"shape":"Timestamp"},
        "TransformEndTime":{"shape":"Timestamp"},
        "LastModifiedTime":{"shape":"Timestamp"},
        "TransformJobStatus":{"shape":"TransformJobStatus"},
        "FailureReason":{"shape":"FailureReason"}
      }
    },
    "TransformOutput":{
      "type":"structure",
      "required":["S3OutputPath"],
      "members":{
        "S3OutputPath":{"shape":"S3Uri"},
        "Accept":{"shape":"Accept"},
        "AssembleWith":{"shape":"AssemblyType"},
        "KmsKeyId":{"shape":"KmsKeyId"}
      }
    },
    "TransformResources":{
      "type":"structure",
      "required":[
        "InstanceType",
        "InstanceCount"
      ],
      "members":{
        "InstanceType":{"shape":"TransformInstanceType"},
        "InstanceCount":{"shape":"TransformInstanceCount"},
        "VolumeKmsKeyId":{"shape":"KmsKeyId"}
      }
    },
    "TransformS3DataSource":{
      "type":"structure",
      "required":[
        "S3DataType",
        "S3Uri"
      ],
      "members":{
        "S3DataType":{"shape":"S3DataType"},
        "S3Uri":{"shape":"S3Uri"}
      }
    },
    "Trial":{
      "type":"structure",
      "members":{
        "TrialName":{"shape":"ExperimentEntityName"},
        "TrialArn":{"shape":"TrialArn"},
        "ExperimentName":{"shape":"ExperimentEntityName"},
        "Source":{"shape":"TrialSource"},
        "CreationTime":{"shape":"Timestamp"},
        "CreatedBy":{"shape":"UserContext"},
        "LastModifiedTime":{"shape":"Timestamp"},
        "LastModifiedBy":{"shape":"UserContext"},
        "Tags":{"shape":"TagList"},
        "TrialComponentSummaries":{"shape":"TrialComponentSimpleSummaries"}
      },
      "internalonly":true
    },
    "TrialArn":{
      "type":"string",
      "pattern":"arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:experiment-trial/.*"
    },
    "TrialComponent":{
      "type":"structure",
      "members":{
        "TrialComponentName":{"shape":"ExperimentEntityName"},
        "TrialComponentDisplayName":{"shape":"ExperimentEntityName"},
        "TrialComponentArn":{"shape":"TrialComponentArn"},
        "Source":{"shape":"TrialComponentSource"},
        "TrialComponentStatus":{"shape":"TrialComponentStatus"},
        "StartTime":{"shape":"Timestamp"},
        "EndTime":{"shape":"Timestamp"},
        "CreationTime":{"shape":"Timestamp"},
        "CreatedBy":{"shape":"UserContext"},
        "LastModifiedTime":{"shape":"Timestamp"},
        "LastModifiedBy":{"shape":"UserContext"},
        "Parameters":{"shape":"TrialComponentParameters"},
        "InputArtifacts":{"shape":"TrialComponentArtifacts"},
        "OutputArtifacts":{"shape":"TrialComponentArtifacts"},
        "Metrics":{"shape":"TrialComponentMetricSummaries"},
        "SourceDetail":{"shape":"TrialComponentSourceDetail"},
        "Tags":{"shape":"TagList"},
        "Parents":{"shape":"Parents"}
      }
    },
    "TrialComponentArn":{
      "type":"string",
      "pattern":"arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:experiment-trial-component/.*"
    },
    "TrialComponentArtifact":{
      "type":"structure",
      "required":["Value"],
      "members":{
        "MediaType":{"shape":"MediaType"},
        "Value":{"shape":"TrialComponentArtifactValue"}
      }
    },
    "TrialComponentArtifactValue":{
      "type":"string",
      "max":2048,
      "pattern":".*"
    },
    "TrialComponentArtifacts":{
      "type":"map",
      "key":{"shape":"TrialComponentKey64"},
      "value":{"shape":"TrialComponentArtifact"},
      "max":10
    },
    "TrialComponentConcurrentModificationException":{
      "type":"structure",
      "members":{
        "Message":{"shape":"String1024"}
      },
      "exception":true
    },
    "TrialComponentKey256":{
      "type":"string",
      "max":256,
      "pattern":".*"
    },
    "TrialComponentKey64":{
      "type":"string",
      "max":64,
      "pattern":".*"
    },
    "TrialComponentMetricSummaries":{
      "type":"list",
      "member":{"shape":"TrialComponentMetricSummary"}
    },
    "TrialComponentMetricSummary":{
      "type":"structure",
      "members":{
        "MetricName":{"shape":"MetricName"},
        "SourceArn":{"shape":"TrialComponentSourceArn"},
        "TimeStamp":{"shape":"Timestamp"},
        "Max":{"shape":"OptionalDouble"},
        "Min":{"shape":"OptionalDouble"},
        "Last":{"shape":"OptionalDouble"},
        "Count":{"shape":"OptionalInteger"},
        "Avg":{"shape":"OptionalDouble"},
        "StdDev":{"shape":"OptionalDouble"}
      }
    },
    "TrialComponentParameterValue":{
      "type":"structure",
      "members":{
        "StringValue":{"shape":"StringParameterValue"},
        "NumberValue":{"shape":"DoubleParameterValue"}
      }
    },
    "TrialComponentParameters":{
      "type":"map",
      "key":{"shape":"TrialComponentKey256"},
      "value":{"shape":"TrialComponentParameterValue"},
      "max":100
    },
    "TrialComponentPrimaryStatus":{
      "type":"string",
      "enum":[
        "InProgress",
        "Completed",
        "Failed"
      ]
    },
    "TrialComponentSimpleSummaries":{
      "type":"list",
      "member":{"shape":"TrialComponentSimpleSummary"}
    },
    "TrialComponentSimpleSummary":{
      "type":"structure",
      "members":{
        "TrialComponentName":{"shape":"ExperimentEntityName"},
        "TrialComponentArn":{"shape":"TrialComponentArn"},
        "SourceArn":{"shape":"TrialComponentSourceArn"},
        "CreationTime":{"shape":"Timestamp"},
        "CreatedBy":{"shape":"UserContext"}
      }
    },
    "TrialComponentSource":{
      "type":"structure",
      "required":["SourceArn"],
      "members":{
        "SourceArn":{"shape":"TrialComponentSourceArn"}
      }
    },
    "TrialComponentSourceArn":{
      "type":"string",
      "pattern":"arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:.*"
    },
    "TrialComponentSourceDetail":{
      "type":"structure",
      "members":{
        "SourceArn":{"shape":"TrialComponentSourceArn"},
        "TrainingJob":{"shape":"TrainingJob"}
      }
    },
    "TrialComponentStatus":{
      "type":"structure",
      "members":{
        "Status":{"shape":"TrialComponentPrimaryStatus"},
        "Message":{"shape":"TrialComponentStatusMessage"}
      }
    },
    "TrialComponentStatusMessage":{
      "type":"string",
      "max":1024,
      "pattern":".*"
    },
    "TrialComponentSummaries":{
      "type":"list",
      "member":{"shape":"TrialComponentSummary"}
    },
    "TrialComponentSummary":{
      "type":"structure",
      "members":{
        "TrialComponentName":{"shape":"ExperimentEntityName"},
        "TrialComponentArn":{"shape":"TrialComponentArn"},
        "TrialComponentDisplayName":{"shape":"ExperimentEntityName"},
        "SourceArn":{"shape":"TrialComponentSourceArn"},
        "TrialComponentStatus":{"shape":"TrialComponentStatus"},
        "StartTime":{"shape":"Timestamp"},
        "EndTime":{"shape":"Timestamp"},
        "CreationTime":{"shape":"Timestamp"},
        "CreatedBy":{"shape":"UserContext"},
        "LastModifiedTime":{"shape":"Timestamp"},
        "LastModifiedBy":{"shape":"UserContext"}
      }
    },
    "TrialDescription":{"type":"string"},
    "TrialIdentifier":{
      "type":"string",
      "max":64,
      "min":1
    },
    "TrialSecondaryStatus":{"type":"string"},
    "TrialSortBy":{
      "type":"string",
      "enum":[
        "CreationTime",
        "Status",
        "FinalObjectiveMetricValue"
      ]
    },
    "TrialSource":{
      "type":"structure",
      "required":["SourceArn"],
      "members":{
        "SourceArn":{"shape":"TrialSourceArn"}
      }
    },
    "TrialSourceArn":{
      "type":"string",
      "pattern":"arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:.*"
    },
    "TrialStatus":{
      "type":"string",
      "enum":[
        "Completed",
        "InProgress",
        "Failed",
        "Stopped",
        "Stopping"
      ]
    },
    "TrialStatusCounters":{
      "type":"structure",
      "members":{
        "Completed":{"shape":"AutoMLJobCounter"},
        "Stopping":{"shape":"AutoMLJobCounter"},
        "Stopped":{"shape":"AutoMLJobCounter"},
        "Failed":{"shape":"AutoMLJobCounter"},
        "InProgress":{"shape":"AutoMLJobCounter"}
      }
    },
    "TrialStepArn":{
      "type":"string",
      "max":256
    },
    "TrialStepType":{
      "type":"string",
      "enum":[
        "AWS::Sagemaker::TrainingJob",
        "AWS::Sagemaker::TransformJob"
      ]
    },
    "TrialSummaries":{
      "type":"list",
      "member":{"shape":"TrialSummary"}
    },
    "TrialSummary":{
      "type":"structure",
      "members":{
        "TrialArn":{"shape":"TrialArn"},
        "TrialName":{"shape":"ExperimentEntityName"},
        "CreationTime":{"shape":"Timestamp"},
        "LastModifiedTime":{"shape":"Timestamp"}
      }
    },
    "TuningJobCompletionCriteria":{
      "type":"structure",
      "required":["TargetObjectiveMetricValue"],
      "members":{
        "TargetObjectiveMetricValue":{"shape":"TargetObjectiveMetricValue"}
      }
    },
    "TuningJobCompletionReason":{
      "type":"string",
      "enum":[
        "MaxNumberOfTrainingJobsReached",
        "TargetObjectiveMetricValueReached"
      ]
    },
    "USD":{
      "type":"structure",
      "members":{
        "Dollars":{"shape":"Dollars"},
        "Cents":{"shape":"Cents"},
        "TenthFractionsOfACent":{"shape":"TenthFractionsOfACent"}
      }
    },
    "UiConfig":{
      "type":"structure",
      "required":["UiTemplateS3Uri"],
      "members":{
        "UiTemplateS3Uri":{"shape":"S3Uri"}
      }
    },
    "UiTemplate":{
      "type":"structure",
      "required":["Content"],
      "members":{
        "Content":{"shape":"TemplateContent"}
      }
    },
    "UiTemplateInfo":{
      "type":"structure",
      "members":{
        "Url":{"shape":"TemplateUrl"},
        "ContentSha256":{"shape":"TemplateContentSha256"}
      }
    },
    "UpdateCodeRepositoryInput":{
      "type":"structure",
      "required":["CodeRepositoryName"],
      "members":{
        "CodeRepositoryName":{"shape":"EntityName"},
        "GitConfig":{"shape":"GitConfigForUpdate"}
      }
    },
    "UpdateCodeRepositoryOutput":{
      "type":"structure",
      "required":["CodeRepositoryArn"],
      "members":{
        "CodeRepositoryArn":{"shape":"CodeRepositoryArn"}
      }
    },
    "UpdateDomainRequest":{
      "type":"structure",
      "members":{
        "DefaultSettings":{"shape":"UserSettings"},
        "DomainId":{"shape":"ResourceId"},
        "DomainPolicy":{"shape":"String2048"},
        "IsDefaultDomain":{"shape":"IsDefaultDomain"}
      }
    },
    "UpdateDomainResponse":{
      "type":"structure",
      "members":{
        "DomainArn":{"shape":"String256"}
      }
    },
    "UpdateEndpointInput":{
      "type":"structure",
      "required":[
        "EndpointName",
        "EndpointConfigName"
      ],
      "members":{
        "EndpointName":{
          "shape":"EndpointName",
          "documentation":"<p>The name of the endpoint whose configuration you want to update.</p>"
        },
        "EndpointConfigName":{
          "shape":"EndpointConfigName",
          "documentation":"<p>The name of the new endpoint configuration.</p>"
        },
        "RetainAllVariantProperties":{
          "shape":"Boolean",
          "internalonly":true
        },
        "ExcludeRetainedVariantProperties":{
          "shape":"VariantPropertyList",
          "internalonly":true
        }
      }
    },
    "UpdateEndpointOutput":{
      "type":"structure",
      "required":["EndpointArn"],
      "members":{
        "EndpointArn":{
          "shape":"EndpointArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the endpoint.</p>"
        }
      }
    },
    "UpdateEndpointWeightsAndCapacitiesInput":{
      "type":"structure",
      "required":[
        "EndpointName",
        "DesiredWeightsAndCapacities"
      ],
      "members":{
        "EndpointName":{
          "shape":"EndpointName",
          "documentation":"<p>The name of an existing Amazon SageMaker endpoint.</p>"
        },
        "DesiredWeightsAndCapacities":{
          "shape":"DesiredWeightAndCapacityList",
          "documentation":"<p>An object that provides new capacity and weight values for a variant.</p>"
        }
      }
    },
    "UpdateEndpointWeightsAndCapacitiesOutput":{
      "type":"structure",
      "required":["EndpointArn"],
      "members":{
        "EndpointArn":{
          "shape":"EndpointArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the updated endpoint.</p>"
        }
      }
    },
    "UpdateEnvironmentRequest":{
      "type":"structure",
      "required":["EnvironmentName"],
      "members":{
        "EnvironmentName":{"shape":"EnvironmentName"},
        "Repository":{"shape":"Repository"},
        "RoleArn":{"shape":"RoleArn"},
        "EnableNetworkIsolation":{"shape":"EnableNetworkIsolation"},
        "VpcConfig":{"shape":"VpcConfig"},
        "ExpirationInDays":{"shape":"ExpirationInDays"},
        "KeepS3ArtifactsOnDelete":{"shape":"KeepS3ArtifactsOnDelete"},
        "Metadata":{"shape":"Metadata"},
        "S3ArtifactPath":{"shape":"S3ArtifactPath"}
      }
    },
    "UpdateEnvironmentResponse":{
      "type":"structure",
      "required":["EnvironmentArn"],
      "members":{
        "EnvironmentArn":{"shape":"EnvironmentArn"}
      }
    },
    "UpdateEnvironmentVersionStatusRequest":{
      "type":"structure",
      "required":[
        "EnvironmentName",
        "EnvironmentVersionNumber",
        "EnvironmentVersionStatus"
      ],
      "members":{
        "EnvironmentName":{"shape":"EnvironmentName"},
        "EnvironmentVersionNumber":{"shape":"EnvironmentVersionNumber"},
        "EnvironmentVersionStatus":{"shape":"EnvironmentVersionStatus"},
        "StatusMessage":{"shape":"StatusMessage"}
      }
    },
    "UpdateExperimentRequest":{
      "type":"structure",
      "required":["ExperimentName"],
      "members":{
        "ExperimentName":{"shape":"ExperimentEntityName"},
        "Description":{"shape":"ExperimentDescription"},
        "DelegatedAccountId":{
          "shape":"String",
          "internalonly":true
        }
      }
    },
    "UpdateExperimentResponse":{
      "type":"structure",
      "members":{
        "ExperimentArn":{"shape":"ExperimentArn"}
      }
    },
    "UpdateMonitoringScheduleRequest":{
      "type":"structure",
      "required":[
        "MonitoringScheduleName",
        "MonitoringScheduleConfig"
      ],
      "members":{
        "MonitoringScheduleName":{"shape":"MonitoringScheduleName"},
        "MonitoringScheduleConfig":{"shape":"MonitoringScheduleConfig"}
      }
    },
    "UpdateMonitoringScheduleResponse":{
      "type":"structure",
      "required":["MonitoringScheduleArn"],
      "members":{
        "MonitoringScheduleArn":{"shape":"MonitoringScheduleArn"}
      }
    },
    "UpdateNotebookInstanceInput":{
      "type":"structure",
      "required":["NotebookInstanceName"],
      "members":{
        "NotebookInstanceName":{
          "shape":"NotebookInstanceName",
          "documentation":"<p>The name of the notebook instance to update.</p>"
        },
        "InstanceType":{
          "shape":"InstanceType",
          "documentation":"<p>The Amazon ML compute instance type.</p>"
        },
        "RoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>Amazon Resource Name (ARN) of the IAM role to associate with the instance.</p>"
        },
        "LifecycleConfigName":{"shape":"NotebookInstanceLifecycleConfigName"},
        "DisassociateLifecycleConfig":{"shape":"DisassociateNotebookInstanceLifecycleConfig"},
        "VolumeSizeInGB":{"shape":"NotebookInstanceVolumeSizeInGB"},
        "DefaultCodeRepository":{"shape":"CodeRepositoryNameOrUrl"},
        "AdditionalCodeRepositories":{"shape":"AdditionalCodeRepositoryNamesOrUrls"},
        "AcceleratorTypes":{"shape":"NotebookInstanceAcceleratorTypes"},
        "DisassociateAcceleratorTypes":{"shape":"DisassociateNotebookInstanceAcceleratorTypes"},
        "DisassociateDefaultCodeRepository":{"shape":"DisassociateDefaultCodeRepository"},
        "DisassociateAdditionalCodeRepositories":{"shape":"DisassociateAdditionalCodeRepositories"},
        "RootAccess":{"shape":"RootAccess"}
      }
    },
    "UpdateNotebookInstanceLifecycleConfigInput":{
      "type":"structure",
      "required":["NotebookInstanceLifecycleConfigName"],
      "members":{
        "NotebookInstanceLifecycleConfigName":{"shape":"NotebookInstanceLifecycleConfigName"},
        "OnCreate":{"shape":"NotebookInstanceLifecycleConfigList"},
        "OnStart":{"shape":"NotebookInstanceLifecycleConfigList"}
      }
    },
    "UpdateNotebookInstanceLifecycleConfigOutput":{
      "type":"structure",
      "members":{
      }
    },
    "UpdateNotebookInstanceOutput":{
      "type":"structure",
      "members":{
      }
    },
    "UpdateTrialComponentRequest":{
      "type":"structure",
      "required":["TrialComponentName"],
      "members":{
        "TrialComponentName":{"shape":"ExperimentEntityName"},
        "DisplayName":{"shape":"ExperimentEntityName"},
        "Status":{"shape":"TrialComponentStatus"},
        "StartTime":{"shape":"Timestamp"},
        "EndTime":{"shape":"Timestamp"},
        "Parameters":{"shape":"TrialComponentParameters"},
        "ParametersToRemove":{"shape":"ListTrialComponentKey256"},
        "InputArtifacts":{"shape":"TrialComponentArtifacts"},
        "InputArtifactsToRemove":{"shape":"ListTrialComponentKey256"},
        "OutputArtifacts":{"shape":"TrialComponentArtifacts"},
        "OutputArtifactsToRemove":{"shape":"ListTrialComponentKey256"},
        "DelegatedAccountId":{
          "shape":"String",
          "internalonly":true
        }
      }
    },
    "UpdateTrialComponentResponse":{
      "type":"structure",
      "members":{
        "TrialComponentArn":{"shape":"TrialComponentArn"}
      }
    },
    "UpdateUserProfileRequest":{
      "type":"structure",
      "members":{
        "DomainId":{"shape":"ResourceId"},
        "IdentityId":{"shape":"IdentityId"},
        "UserPolicy":{"shape":"String2048"},
        "UserSettings":{"shape":"UserSettings"}
      }
    },
    "UpdateUserProfileResponse":{
      "type":"structure",
      "members":{
        "IdentityId":{"shape":"IdentityId"}
      }
    },
    "UpdateWorkforceRequest":{
      "type":"structure",
      "required":["WorkforceName"],
      "members":{
        "WorkforceName":{"shape":"WorkforceName"},
        "SourceIpConfig":{"shape":"SourceIpConfig"}
      }
    },
    "UpdateWorkforceResponse":{
      "type":"structure",
      "required":["Workforce"],
      "members":{
        "Workforce":{"shape":"Workforce"}
      }
    },
    "UpdateWorkteamRequest":{
      "type":"structure",
      "required":["WorkteamName"],
      "members":{
        "WorkteamName":{"shape":"WorkteamName"},
        "MemberDefinitions":{"shape":"MemberDefinitions"},
        "Description":{"shape":"String200"},
        "NotificationConfiguration":{"shape":"NotificationConfiguration"}
      }
    },
    "UpdateWorkteamResponse":{
      "type":"structure",
      "required":["Workteam"],
      "members":{
        "Workteam":{"shape":"Workteam"}
      }
    },
    "UpstreamAnalyticsOutput":{
      "type":"structure",
      "required":[
        "OutputName",
        "UpstreamS3Output"
      ],
      "members":{
        "OutputName":{"shape":"String"},
        "UpstreamS3Output":{"shape":"AnalyticsUpstreamS3Output"}
      }
    },
    "UpstreamAnalyticsOutputs":{
      "type":"list",
      "member":{"shape":"UpstreamAnalyticsOutput"},
      "max":5,
      "min":0
    },
    "Url":{
      "type":"string",
      "max":1024,
      "pattern":"^(https|s3)://([^/]+)/?(.*)$"
    },
    "UserContext":{
      "type":"structure",
      "members":{
        "UserArn":{"shape":"String"},
        "IdentityArn":{"shape":"String"},
        "UserId":{"shape":"String"},
        "DomainId":{"shape":"String"}
      }
    },
    "UserProfileDetails":{
      "type":"structure",
      "members":{
        "EfsUid":{"shape":"EfsUid"},
        "IdentityId":{"shape":"IdentityId"},
        "Status":{"shape":"UserStatus"},
        "UserPolicy":{"shape":"String2048"},
        "UserSettings":{"shape":"UserSettings"}
      }
    },
    "UserProfileList":{
      "type":"list",
      "member":{"shape":"UserProfileDetails"}
    },
    "UserProfileSortKey":{
      "type":"string",
      "enum":["IdentityId"]
    },
    "UserSettings":{
      "type":"structure",
      "members":{
        "AppSettings":{"shape":"AppSettings"},
        "ExecutionRole":{"shape":"RoleArn"},
        "GlobalIdleTimeoutInMinutes":{"shape":"GlobalIdleTimeoutInMinutes"},
        "SecurityGroups":{"shape":"SecurityGroupIds"}
      }
    },
    "UserStatus":{
      "type":"string",
      "enum":[
        "Deleting",
        "Failed",
        "InService",
        "Pending"
      ]
    },
    "VariantName":{
      "type":"string",
      "max":63,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    },
    "VariantProperty":{
      "type":"structure",
      "required":["VariantPropertyType"],
      "members":{
        "VariantPropertyType":{"shape":"VariantPropertyType"}
      }
    },
    "VariantPropertyList":{
      "type":"list",
      "member":{"shape":"VariantProperty"},
      "max":3,
      "min":0
    },
    "VariantPropertyType":{
      "type":"string",
      "enum":[
        "DesiredInstanceCount",
        "DesiredWeight",
        "DataCaptureConfig"
      ]
    },
    "VariantWeight":{
      "type":"float",
      "min":0
    },
    "VolumeSizeInGB":{
      "type":"integer",
      "min":1
    },
    "VpcConfig":{
      "type":"structure",
      "required":[
        "SecurityGroupIds",
        "Subnets"
      ],
      "members":{
        "SecurityGroupIds":{"shape":"VpcSecurityGroupIds"},
        "Subnets":{"shape":"Subnets"}
      }
    },
    "VpcId":{
      "type":"string",
      "max":32,
      "pattern":"[-0-9a-zA-Z]+"
    },
    "VpcSecurityGroupIds":{
      "type":"list",
      "member":{"shape":"SecurityGroupId"},
      "max":5,
      "min":1
    },
    "Workforce":{
      "type":"structure",
      "required":[
        "WorkforceName",
        "WorkforceArn"
      ],
      "members":{
        "WorkforceName":{"shape":"WorkforceName"},
        "WorkforceArn":{"shape":"WorkforceArn"},
        "LastUpdatedDate":{"shape":"Timestamp"},
        "SourceIpConfig":{"shape":"SourceIpConfig"}
      }
    },
    "WorkforceArn":{
      "type":"string",
      "max":256,
      "pattern":"arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:workforce/.*"
    },
    "WorkforceName":{
      "type":"string",
      "max":63,
      "min":1,
      "pattern":"^[a-zA-Z0-9]([a-zA-Z0-9\\-])*$"
    },
    "Workteam":{
      "type":"structure",
      "required":[
        "WorkteamName",
        "MemberDefinitions",
        "WorkteamArn",
        "Description"
      ],
      "members":{
        "WorkteamName":{"shape":"WorkteamName"},
        "MemberDefinitions":{"shape":"MemberDefinitions"},
        "WorkteamArn":{"shape":"WorkteamArn"},
        "WorkforceArn":{
          "shape":"WorkforceArn",
          "internalonly":true
        },
        "ProductListingIds":{"shape":"ProductListings"},
        "Description":{"shape":"String200"},
        "SubDomain":{"shape":"String"},
        "CreateDate":{"shape":"Timestamp"},
        "LastUpdatedDate":{"shape":"Timestamp"},
        "NotificationConfiguration":{"shape":"NotificationConfiguration"}
      }
    },
    "WorkteamArn":{
      "type":"string",
      "max":256,
      "pattern":"arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:workteam/.*"
    },
    "WorkteamName":{
      "type":"string",
      "max":63,
      "min":1,
      "pattern":"^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    },
    "Workteams":{
      "type":"list",
      "member":{"shape":"Workteam"}
    },
    "XAxisType":{
      "type":"string",
      "enum":[
        "IterationNumber",
        "Timestamp"
      ]
    },
    "XAxisValues":{
      "type":"list",
      "member":{"shape":"NonNegativeLong"}
    }
  }
}
